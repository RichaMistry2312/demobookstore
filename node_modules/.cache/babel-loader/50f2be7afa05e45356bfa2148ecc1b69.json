{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { AbstractConvertPredictionsProvider } from '../types/Providers/AbstractConvertPredictionsProvider';\nimport { TranslateClient, TranslateTextCommand } from '@aws-sdk/client-translate';\nimport { PollyClient, SynthesizeSpeechCommand } from '@aws-sdk/client-polly';\nimport { isBytesSource } from '../types';\nimport { Credentials, ConsoleLogger as Logger, Signer, getAmplifyUserAgent } from '@aws-amplify/core';\nimport { EventStreamMarshaller } from '@aws-sdk/eventstream-marshaller';\nimport { fromUtf8, toUtf8 } from '@aws-sdk/util-utf8-node';\nvar logger = new Logger('AmazonAIConvertPredictionsProvider');\nvar eventBuilder = new EventStreamMarshaller(toUtf8, fromUtf8);\nvar AmazonAIConvertPredictionsProvider = /** @class */function (_super) {\n  __extends(AmazonAIConvertPredictionsProvider, _super);\n  function AmazonAIConvertPredictionsProvider() {\n    var _this = _super.call(this) || this;\n    _this.inputSampleRate = 44100;\n    _this.outputSampleRate = 16000;\n    return _this;\n  }\n  AmazonAIConvertPredictionsProvider.prototype.getProviderName = function () {\n    return 'AmazonAIConvertPredictionsProvider';\n  };\n  AmazonAIConvertPredictionsProvider.prototype.translateText = function (input) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, _b, _c, _d, _e, sourceLanguage, _f, targetLanguage, _g, region, credentials, sourceLanguageCode, targetLanguageCode, translateTextCommand, data, err_1;\n      return __generator(this, function (_h) {\n        switch (_h.label) {\n          case 0:\n            logger.debug('Starting translation');\n            _a = this._config.translateText, _b = _a === void 0 ? {} : _a, _c = _b.defaults, _d = _c === void 0 ? {} : _c, _e = _d.sourceLanguage, sourceLanguage = _e === void 0 ? '' : _e, _f = _d.targetLanguage, targetLanguage = _f === void 0 ? '' : _f, _g = _b.region, region = _g === void 0 ? '' : _g;\n            if (!region) {\n              return [2 /*return*/, Promise.reject('region not configured for transcription')];\n            }\n            return [4 /*yield*/, Credentials.get()];\n          case 1:\n            credentials = _h.sent();\n            if (!credentials) {\n              return [2 /*return*/, Promise.reject('No credentials')];\n            }\n            sourceLanguageCode = input.translateText.source.language || sourceLanguage;\n            targetLanguageCode = input.translateText.targetLanguage || targetLanguage;\n            if (!sourceLanguageCode || !targetLanguageCode) {\n              return [2 /*return*/, Promise.reject('Please provide both source and target language')];\n            }\n            this.translateClient = new TranslateClient({\n              region: region,\n              credentials: credentials,\n              customUserAgent: getAmplifyUserAgent()\n            });\n            translateTextCommand = new TranslateTextCommand({\n              SourceLanguageCode: sourceLanguageCode,\n              TargetLanguageCode: targetLanguageCode,\n              Text: input.translateText.source.text\n            });\n            _h.label = 2;\n          case 2:\n            _h.trys.push([2, 4,, 5]);\n            return [4 /*yield*/, this.translateClient.send(translateTextCommand)];\n          case 3:\n            data = _h.sent();\n            return [2 /*return*/, {\n              text: data.TranslatedText,\n              language: data.TargetLanguageCode\n            }];\n          case 4:\n            err_1 = _h.sent();\n            return [2 /*return*/, Promise.reject(err_1)];\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  AmazonAIConvertPredictionsProvider.prototype.convertTextToSpeech = function (input) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials, _a, _b, _c, _d, VoiceId, _e, region, voiceId, synthesizeSpeechCommand, data, response, arrayBuffer, blob, url, err_2;\n      return __generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            return [4 /*yield*/, Credentials.get()];\n          case 1:\n            credentials = _f.sent();\n            if (!credentials) {\n              return [2 /*return*/, Promise.reject('No credentials')];\n            }\n            _a = this._config.speechGenerator, _b = _a === void 0 ? {} : _a, _c = _b.defaults, _d = (_c === void 0 ? {} : _c).VoiceId, VoiceId = _d === void 0 ? '' : _d, _e = _b.region, region = _e === void 0 ? '' : _e;\n            if (!input.textToSpeech.source) {\n              return [2 /*return*/, Promise.reject('Source needs to be provided in the input')];\n            }\n            voiceId = input.textToSpeech.voiceId || VoiceId;\n            if (!region) {\n              return [2 /*return*/, Promise.reject('Region was undefined. Did you enable speech generator using amplify CLI?')];\n            }\n            if (!voiceId) {\n              return [2 /*return*/, Promise.reject('VoiceId was undefined.')];\n            }\n            this.pollyClient = new PollyClient({\n              region: region,\n              credentials: credentials,\n              customUserAgent: getAmplifyUserAgent()\n            });\n            synthesizeSpeechCommand = new SynthesizeSpeechCommand({\n              OutputFormat: 'mp3',\n              Text: input.textToSpeech.source.text,\n              VoiceId: voiceId,\n              TextType: 'text',\n              SampleRate: '24000'\n            });\n            _f.label = 2;\n          case 2:\n            _f.trys.push([2, 5,, 6]);\n            return [4 /*yield*/, this.pollyClient.send(synthesizeSpeechCommand)];\n          case 3:\n            data = _f.sent();\n            response = new Response(data.AudioStream);\n            return [4 /*yield*/, response.arrayBuffer()];\n          case 4:\n            arrayBuffer = _f.sent();\n            blob = new Blob([arrayBuffer], {\n              type: data.ContentType\n            });\n            url = URL.createObjectURL(blob);\n            return [2 /*return*/, {\n              speech: {\n                url: url\n              },\n              audioStream: arrayBuffer,\n              text: input.textToSpeech.source.text\n            }];\n          case 5:\n            err_2 = _f.sent();\n            return [2 /*return*/, Promise.reject(err_2)];\n          case 6:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  AmazonAIConvertPredictionsProvider.prototype.convertSpeechToText = function (input) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials, _a, _b, _c, _d, languageCode, _e, region, _f, source, _g, language, connection, fullText, err_3, err_4;\n      return __generator(this, function (_h) {\n        switch (_h.label) {\n          case 0:\n            _h.trys.push([0, 7,, 8]);\n            logger.debug('starting transcription..');\n            return [4 /*yield*/, Credentials.get()];\n          case 1:\n            credentials = _h.sent();\n            if (!credentials) {\n              return [2 /*return*/, Promise.reject('No credentials')];\n            }\n            _a = this._config.transcription, _b = _a === void 0 ? {} : _a, _c = _b.defaults, _d = (_c === void 0 ? {} : _c).language, languageCode = _d === void 0 ? '' : _d, _e = _b.region, region = _e === void 0 ? '' : _e;\n            if (!region) {\n              return [2 /*return*/, Promise.reject('region not configured for transcription')];\n            }\n            if (!languageCode) {\n              return [2 /*return*/, Promise.reject('languageCode not configured or provided for transcription')];\n            }\n            _f = input.transcription, source = _f.source, _g = _f.language, language = _g === void 0 ? languageCode : _g;\n            if (!isBytesSource(source)) return [3 /*break*/, 6];\n            return [4 /*yield*/, this.openConnectionWithTranscribe({\n              credentials: credentials,\n              region: region,\n              languageCode: language\n            })];\n          case 2:\n            connection = _h.sent();\n            _h.label = 3;\n          case 3:\n            _h.trys.push([3, 5,, 6]);\n            return [4 /*yield*/, this.sendDataToTranscribe({\n              connection: connection,\n              raw: source.bytes\n            })];\n          case 4:\n            fullText = _h.sent();\n            return [2 /*return*/, {\n              transcription: {\n                fullText: fullText\n              }\n            }];\n          case 5:\n            err_3 = _h.sent();\n            return [2 /*return*/, Promise.reject(err_3)];\n          case 6:\n            return [2 /*return*/, Promise.reject('Source types other than byte source are not supported.')];\n          case 7:\n            err_4 = _h.sent();\n            return [2 /*return*/, Promise.reject(err_4.name + ': ' + err_4.message)];\n          case 8:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  AmazonAIConvertPredictionsProvider.serializeDataFromTranscribe = function (message) {\n    var decodedMessage = '';\n    var transcribeMessage = eventBuilder.unmarshall(Buffer.from(message.data));\n    var transcribeMessageJson = JSON.parse(toUtf8(transcribeMessage.body));\n    if (transcribeMessage.headers[':message-type'].value === 'exception') {\n      logger.debug('exception', JSON.stringify(transcribeMessageJson.Message, null, 2));\n      throw new Error(transcribeMessageJson.Message);\n    } else if (transcribeMessage.headers[':message-type'].value === 'event') {\n      if (transcribeMessageJson.Transcript.Results.length > 0) {\n        if (transcribeMessageJson.Transcript.Results[0].Alternatives.length > 0) {\n          if (transcribeMessageJson.Transcript.Results[0].Alternatives[0].Transcript.length > 0) {\n            if (transcribeMessageJson.Transcript.Results[0].IsPartial === false) {\n              decodedMessage = transcribeMessageJson.Transcript.Results[0].Alternatives[0].Transcript + '\\n';\n              logger.debug({\n                decodedMessage: decodedMessage\n              });\n            } else {\n              logger.debug({\n                transcript: transcribeMessageJson.Transcript.Results[0].Alternatives[0]\n              });\n            }\n          }\n        }\n      }\n    }\n    return decodedMessage;\n  };\n  AmazonAIConvertPredictionsProvider.prototype.sendDataToTranscribe = function (_a) {\n    var _this = this;\n    var connection = _a.connection,\n      raw = _a.raw;\n    return new Promise(function (res, rej) {\n      var fullText = '';\n      connection.onmessage = function (message) {\n        try {\n          var decodedMessage = AmazonAIConvertPredictionsProvider.serializeDataFromTranscribe(message);\n          if (decodedMessage) {\n            fullText += decodedMessage + ' ';\n          }\n        } catch (err) {\n          logger.debug(err);\n          rej(err.message);\n        }\n      };\n      connection.onerror = function (errorEvent) {\n        logger.debug({\n          errorEvent: errorEvent\n        });\n        rej('failed to transcribe, network error');\n      };\n      connection.onclose = function (closeEvent) {\n        logger.debug({\n          closeEvent: closeEvent\n        });\n        return res(fullText.trim());\n      };\n      logger.debug({\n        raw: raw\n      });\n      if (Array.isArray(raw)) {\n        for (var i = 0; i < raw.length - 1023; i += 1024) {\n          var data = raw.slice(i, i + 1024);\n          _this.sendEncodedDataToTranscribe(connection, data);\n        }\n      }\n      // sending end frame\n      var endFrameEventMessage = _this.getAudioEventMessage(Buffer.from([]));\n      var endFrameBinary = eventBuilder.marshall(endFrameEventMessage);\n      connection.send(endFrameBinary);\n    });\n  };\n  AmazonAIConvertPredictionsProvider.prototype.sendEncodedDataToTranscribe = function (connection, data) {\n    var downsampledBuffer = this.downsampleBuffer({\n      buffer: data\n    });\n    var pcmEncodedBuffer = this.pcmEncode(downsampledBuffer);\n    var audioEventMessage = this.getAudioEventMessage(Buffer.from(pcmEncodedBuffer));\n    var binary = eventBuilder.marshall(audioEventMessage);\n    connection.send(binary);\n  };\n  AmazonAIConvertPredictionsProvider.prototype.getAudioEventMessage = function (buffer) {\n    var audioEventMessage = {\n      body: buffer,\n      headers: {\n        ':message-type': {\n          type: 'string',\n          value: 'event'\n        },\n        ':event-type': {\n          type: 'string',\n          value: 'AudioEvent'\n        }\n      }\n    };\n    return audioEventMessage;\n  };\n  AmazonAIConvertPredictionsProvider.prototype.pcmEncode = function (input) {\n    var offset = 0;\n    var buffer = new ArrayBuffer(input.length * 2);\n    var view = new DataView(buffer);\n    for (var i = 0; i < input.length; i++, offset += 2) {\n      var s = Math.max(-1, Math.min(1, input[i]));\n      view.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7fff, true);\n    }\n    return buffer;\n  };\n  AmazonAIConvertPredictionsProvider.prototype.downsampleBuffer = function (_a) {\n    var buffer = _a.buffer;\n    if (this.outputSampleRate === this.inputSampleRate) {\n      return buffer;\n    }\n    var sampleRateRatio = this.inputSampleRate / this.outputSampleRate;\n    var newLength = Math.round(buffer.length / sampleRateRatio);\n    var result = new Float32Array(newLength);\n    var offsetResult = 0;\n    var offsetBuffer = 0;\n    while (offsetResult < result.length) {\n      var nextOffsetBuffer = Math.round((offsetResult + 1) * sampleRateRatio);\n      var accum = 0,\n        count = 0;\n      for (var i = offsetBuffer; i < nextOffsetBuffer && i < buffer.length; i++) {\n        accum += buffer[i];\n        count++;\n      }\n      result[offsetResult] = accum / count;\n      offsetResult++;\n      offsetBuffer = nextOffsetBuffer;\n    }\n    return result;\n  };\n  AmazonAIConvertPredictionsProvider.prototype.openConnectionWithTranscribe = function (_a) {\n    var _this = this;\n    var userCredentials = _a.credentials,\n      region = _a.region,\n      languageCode = _a.languageCode;\n    return new Promise(function (res, rej) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var access_key, secret_key, session_token, credentials, signedUrl, connection;\n        return __generator(this, function (_a) {\n          access_key = userCredentials.accessKeyId, secret_key = userCredentials.secretAccessKey, session_token = userCredentials.sessionToken;\n          credentials = {\n            access_key: access_key,\n            secret_key: secret_key,\n            session_token: session_token\n          };\n          signedUrl = this.generateTranscribeUrl({\n            credentials: credentials,\n            region: region,\n            languageCode: languageCode\n          });\n          logger.debug('connecting...');\n          connection = new WebSocket(signedUrl);\n          connection.binaryType = 'arraybuffer';\n          connection.onopen = function () {\n            logger.debug('connected');\n            res(connection);\n          };\n          return [2 /*return*/];\n        });\n      });\n    });\n  };\n  AmazonAIConvertPredictionsProvider.prototype.generateTranscribeUrl = function (_a) {\n    var credentials = _a.credentials,\n      region = _a.region,\n      languageCode = _a.languageCode;\n    var url = [\"wss://transcribestreaming.\" + region + \".amazonaws.com:8443\", '/stream-transcription-websocket?', \"media-encoding=pcm&\", \"sample-rate=16000&\", \"language-code=\" + languageCode].join('');\n    var signedUrl = Signer.signUrl(url, credentials, {\n      region: region,\n      service: 'transcribe'\n    }, 300);\n    return signedUrl;\n  };\n  return AmazonAIConvertPredictionsProvider;\n}(AbstractConvertPredictionsProvider);\nexport { AmazonAIConvertPredictionsProvider };\n/**\n * @deprecated use named import\n */\nexport default AmazonAIConvertPredictionsProvider;","map":{"version":3,"names":["AbstractConvertPredictionsProvider","TranslateClient","TranslateTextCommand","PollyClient","SynthesizeSpeechCommand","isBytesSource","Credentials","ConsoleLogger","Logger","Signer","getAmplifyUserAgent","EventStreamMarshaller","fromUtf8","toUtf8","logger","eventBuilder","AmazonAIConvertPredictionsProvider","_super","__extends","_this","call","inputSampleRate","outputSampleRate","prototype","getProviderName","translateText","input","debug","_a","_config","_b","_c","defaults","_d","_e","sourceLanguage","_f","targetLanguage","_g","region","Promise","reject","get","credentials","_h","sent","sourceLanguageCode","source","language","targetLanguageCode","translateClient","customUserAgent","translateTextCommand","SourceLanguageCode","TargetLanguageCode","Text","text","send","data","TranslatedText","err_1","convertTextToSpeech","speechGenerator","VoiceId","textToSpeech","voiceId","pollyClient","synthesizeSpeechCommand","OutputFormat","TextType","SampleRate","response","Response","AudioStream","arrayBuffer","blob","Blob","type","ContentType","url","URL","createObjectURL","speech","audioStream","err_2","convertSpeechToText","transcription","languageCode","openConnectionWithTranscribe","connection","sendDataToTranscribe","raw","bytes","fullText","err_3","err_4","name","message","serializeDataFromTranscribe","decodedMessage","transcribeMessage","unmarshall","Buffer","from","transcribeMessageJson","JSON","parse","body","headers","value","stringify","Message","Error","Transcript","Results","length","Alternatives","IsPartial","transcript","res","rej","onmessage","err","onerror","errorEvent","onclose","closeEvent","trim","Array","isArray","i","slice","sendEncodedDataToTranscribe","endFrameEventMessage","getAudioEventMessage","endFrameBinary","marshall","downsampledBuffer","downsampleBuffer","buffer","pcmEncodedBuffer","pcmEncode","audioEventMessage","binary","offset","ArrayBuffer","view","DataView","s","Math","max","min","setInt16","sampleRateRatio","newLength","round","result","Float32Array","offsetResult","offsetBuffer","nextOffsetBuffer","accum","count","userCredentials","__awaiter","access_key","accessKeyId","secret_key","secretAccessKey","session_token","sessionToken","signedUrl","generateTranscribeUrl","WebSocket","binaryType","onopen","join","signUrl","service"],"sources":["../../src/Providers/AmazonAIConvertPredictionsProvider.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}