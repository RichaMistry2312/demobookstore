{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { OpType, QueryOne } from '../../types';\nimport { monotonicUlidFactory } from '../../util';\nimport { createInMemoryStore } from './InMemoryStore';\nvar DB_NAME = '@AmplifyDatastore';\nvar COLLECTION = 'Collection';\nvar DATA = 'Data';\nvar monotonicFactoriesMap = new Map();\nvar AsyncStorageDatabase = /** @class */function () {\n  function AsyncStorageDatabase() {\n    /**\n     * Maps storeNames to a map of ulid->id\n     */\n    this._collectionInMemoryIndex = new Map();\n    this.storage = createInMemoryStore();\n  }\n  AsyncStorageDatabase.prototype.getCollectionIndex = function (storeName) {\n    if (!this._collectionInMemoryIndex.has(storeName)) {\n      this._collectionInMemoryIndex.set(storeName, new Map());\n    }\n    return this._collectionInMemoryIndex.get(storeName);\n  };\n  AsyncStorageDatabase.prototype.getMonotonicFactory = function (storeName) {\n    if (!monotonicFactoriesMap.has(storeName)) {\n      monotonicFactoriesMap.set(storeName, monotonicUlidFactory());\n    }\n    return monotonicFactoriesMap.get(storeName);\n  };\n  AsyncStorageDatabase.prototype.init = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var allKeys, keysForCollectionEntries, allKeys_1, allKeys_1_1, key, _a, dbName, storeName, recordType, ulidOrId, id, ulid, id_1, newUlid, oldKey, newKey, item, e_1_1;\n      var e_1, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            this._collectionInMemoryIndex.clear();\n            return [4 /*yield*/, this.storage.getAllKeys()];\n          case 1:\n            allKeys = _c.sent();\n            keysForCollectionEntries = [];\n            _c.label = 2;\n          case 2:\n            _c.trys.push([2, 12, 13, 14]);\n            allKeys_1 = __values(allKeys), allKeys_1_1 = allKeys_1.next();\n            _c.label = 3;\n          case 3:\n            if (!!allKeys_1_1.done) return [3 /*break*/, 11];\n            key = allKeys_1_1.value;\n            _a = __read(key.split('::'), 5), dbName = _a[0], storeName = _a[1], recordType = _a[2], ulidOrId = _a[3], id = _a[4];\n            if (!(dbName === DB_NAME)) return [3 /*break*/, 10];\n            if (!(recordType === DATA)) return [3 /*break*/, 9];\n            ulid = void 0;\n            if (!(id === undefined)) return [3 /*break*/, 7];\n            id_1 = ulidOrId;\n            newUlid = this.getMonotonicFactory(storeName)();\n            oldKey = this.getLegacyKeyForItem(storeName, id_1);\n            newKey = this.getKeyForItem(storeName, id_1, newUlid);\n            return [4 /*yield*/, this.storage.getItem(oldKey)];\n          case 4:\n            item = _c.sent();\n            return [4 /*yield*/, this.storage.setItem(newKey, item)];\n          case 5:\n            _c.sent();\n            return [4 /*yield*/, this.storage.removeItem(oldKey)];\n          case 6:\n            _c.sent();\n            ulid = newUlid;\n            return [3 /*break*/, 8];\n          case 7:\n            ulid = ulidOrId;\n            _c.label = 8;\n          case 8:\n            this.getCollectionIndex(storeName).set(id, ulid);\n            return [3 /*break*/, 10];\n          case 9:\n            if (recordType === COLLECTION) {\n              keysForCollectionEntries.push(key);\n            }\n            _c.label = 10;\n          case 10:\n            allKeys_1_1 = allKeys_1.next();\n            return [3 /*break*/, 3];\n          case 11:\n            return [3 /*break*/, 14];\n          case 12:\n            e_1_1 = _c.sent();\n            e_1 = {\n              error: e_1_1\n            };\n            return [3 /*break*/, 14];\n          case 13:\n            try {\n              if (allKeys_1_1 && !allKeys_1_1.done && (_b = allKeys_1.return)) _b.call(allKeys_1);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n            return [7 /*endfinally*/];\n          case 14:\n            if (!(keysForCollectionEntries.length > 0)) return [3 /*break*/, 16];\n            return [4 /*yield*/, this.storage.multiRemove(keysForCollectionEntries)];\n          case 15:\n            _c.sent();\n            _c.label = 16;\n          case 16:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  AsyncStorageDatabase.prototype.save = function (item, storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var ulid, itemKey;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            ulid = this.getCollectionIndex(storeName).get(item.id) || this.getMonotonicFactory(storeName)();\n            itemKey = this.getKeyForItem(storeName, item.id, ulid);\n            this.getCollectionIndex(storeName).set(item.id, ulid);\n            return [4 /*yield*/, this.storage.setItem(itemKey, JSON.stringify(item))];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  AsyncStorageDatabase.prototype.batchSave = function (storeName, items) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, collection, keysToDelete, keysToSave, allItemsKeys, itemsMap, items_1, items_1_1, item, id, _deleted, ulid, key, existingRecordsMap, existingRecordsKeys, allItemsKeys_1, allItemsKeys_1_1, key;\n      var e_2, _a, e_3, _b;\n      var _this = this;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (items.length === 0) {\n              return [2 /*return*/, []];\n            }\n            result = [];\n            collection = this.getCollectionIndex(storeName);\n            keysToDelete = new Set();\n            keysToSave = new Set();\n            allItemsKeys = [];\n            itemsMap = {};\n            try {\n              for (items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n                item = items_1_1.value;\n                id = item.id, _deleted = item._deleted;\n                ulid = collection.get(id) || this.getMonotonicFactory(storeName)();\n                key = this.getKeyForItem(storeName, id, ulid);\n                allItemsKeys.push(key);\n                itemsMap[key] = {\n                  ulid: ulid,\n                  model: item\n                };\n                if (_deleted) {\n                  keysToDelete.add(key);\n                } else {\n                  keysToSave.add(key);\n                }\n              }\n            } catch (e_2_1) {\n              e_2 = {\n                error: e_2_1\n              };\n            } finally {\n              try {\n                if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n              } finally {\n                if (e_2) throw e_2.error;\n              }\n            }\n            return [4 /*yield*/, this.storage.multiGet(allItemsKeys)];\n          case 1:\n            existingRecordsMap = _c.sent();\n            existingRecordsKeys = existingRecordsMap.filter(function (_a) {\n              var _b = __read(_a, 2),\n                v = _b[1];\n              return !!v;\n            }).reduce(function (set, _a) {\n              var _b = __read(_a, 1),\n                k = _b[0];\n              return set.add(k);\n            }, new Set());\n            return [4 /*yield*/, new Promise(function (resolve, reject) {\n              if (keysToDelete.size === 0) {\n                resolve();\n                return;\n              }\n              var keysToDeleteArray = Array.from(keysToDelete);\n              keysToDeleteArray.forEach(function (key) {\n                return collection.delete(itemsMap[key].model.id);\n              });\n              _this.storage.multiRemove(keysToDeleteArray, function (errors) {\n                if (errors && errors.length > 0) {\n                  reject(errors);\n                } else {\n                  resolve();\n                }\n              });\n            })];\n          case 2:\n            _c.sent();\n            return [4 /*yield*/, new Promise(function (resolve, reject) {\n              if (keysToSave.size === 0) {\n                resolve();\n                return;\n              }\n              var entriesToSet = Array.from(keysToSave).map(function (key) {\n                return [key, JSON.stringify(itemsMap[key].model)];\n              });\n              keysToSave.forEach(function (key) {\n                var _a = itemsMap[key],\n                  id = _a.model.id,\n                  ulid = _a.ulid;\n                collection.set(id, ulid);\n              });\n              _this.storage.multiSet(entriesToSet, function (errors) {\n                if (errors && errors.length > 0) {\n                  reject(errors);\n                } else {\n                  resolve();\n                }\n              });\n            })];\n          case 3:\n            _c.sent();\n            try {\n              for (allItemsKeys_1 = __values(allItemsKeys), allItemsKeys_1_1 = allItemsKeys_1.next(); !allItemsKeys_1_1.done; allItemsKeys_1_1 = allItemsKeys_1.next()) {\n                key = allItemsKeys_1_1.value;\n                if (keysToDelete.has(key) && existingRecordsKeys.has(key)) {\n                  result.push([itemsMap[key].model, OpType.DELETE]);\n                } else if (keysToSave.has(key)) {\n                  result.push([itemsMap[key].model, existingRecordsKeys.has(key) ? OpType.UPDATE : OpType.INSERT]);\n                }\n              }\n            } catch (e_3_1) {\n              e_3 = {\n                error: e_3_1\n              };\n            } finally {\n              try {\n                if (allItemsKeys_1_1 && !allItemsKeys_1_1.done && (_b = allItemsKeys_1.return)) _b.call(allItemsKeys_1);\n              } finally {\n                if (e_3) throw e_3.error;\n              }\n            }\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  AsyncStorageDatabase.prototype.get = function (id, storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var ulid, itemKey, recordAsString, record;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            ulid = this.getCollectionIndex(storeName).get(id);\n            itemKey = this.getKeyForItem(storeName, id, ulid);\n            return [4 /*yield*/, this.storage.getItem(itemKey)];\n          case 1:\n            recordAsString = _a.sent();\n            record = recordAsString && JSON.parse(recordAsString);\n            return [2 /*return*/, record];\n        }\n      });\n    });\n  };\n  AsyncStorageDatabase.prototype.getOne = function (firstOrLast, storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var collection, _a, itemId, ulid, itemKey, itemString, _b, result;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            collection = this.getCollectionIndex(storeName);\n            _a = __read(firstOrLast === QueryOne.FIRST ? function () {\n              var e_4, _a, _b;\n              var id, ulid;\n              try {\n                for (var collection_1 = __values(collection), collection_1_1 = collection_1.next(); !collection_1_1.done; collection_1_1 = collection_1.next()) {\n                  _b = __read(collection_1_1.value, 2), id = _b[0], ulid = _b[1];\n                  break;\n                } // Get first element of the set\n              } catch (e_4_1) {\n                e_4 = {\n                  error: e_4_1\n                };\n              } finally {\n                try {\n                  if (collection_1_1 && !collection_1_1.done && (_a = collection_1.return)) _a.call(collection_1);\n                } finally {\n                  if (e_4) throw e_4.error;\n                }\n              }\n              return [id, ulid];\n            }() : function () {\n              var e_5, _a, _b;\n              var id, ulid;\n              try {\n                for (var collection_2 = __values(collection), collection_2_1 = collection_2.next(); !collection_2_1.done; collection_2_1 = collection_2.next()) {\n                  _b = __read(collection_2_1.value, 2), id = _b[0], ulid = _b[1];\n                  ;\n                } // Get last element of the set\n              } catch (e_5_1) {\n                e_5 = {\n                  error: e_5_1\n                };\n              } finally {\n                try {\n                  if (collection_2_1 && !collection_2_1.done && (_a = collection_2.return)) _a.call(collection_2);\n                } finally {\n                  if (e_5) throw e_5.error;\n                }\n              }\n              return [id, ulid];\n            }(), 2), itemId = _a[0], ulid = _a[1];\n            itemKey = this.getKeyForItem(storeName, itemId, ulid);\n            _b = itemKey;\n            if (!_b) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.storage.getItem(itemKey)];\n          case 1:\n            _b = _c.sent();\n            _c.label = 2;\n          case 2:\n            itemString = _b;\n            result = itemString ? JSON.parse(itemString) || undefined : undefined;\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  /**\n   * This function gets all the records stored in async storage for a particular storeName\n   * It then loads all the records for that filtered set of keys using multiGet()\n   */\n  AsyncStorageDatabase.prototype.getAll = function (storeName, pagination) {\n    return __awaiter(this, void 0, void 0, function () {\n      var collection, _a, _b, page, _c, limit, start, end, keysForStore, count, collection_3, collection_3_1, _d, id, ulid, storeRecordStrings, records;\n      var e_6, _e;\n      return __generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            collection = this.getCollectionIndex(storeName);\n            _a = pagination || {}, _b = _a.page, page = _b === void 0 ? 0 : _b, _c = _a.limit, limit = _c === void 0 ? 0 : _c;\n            start = Math.max(0, page * limit) || 0;\n            end = limit > 0 ? start + limit : undefined;\n            keysForStore = [];\n            count = 0;\n            try {\n              for (collection_3 = __values(collection), collection_3_1 = collection_3.next(); !collection_3_1.done; collection_3_1 = collection_3.next()) {\n                _d = __read(collection_3_1.value, 2), id = _d[0], ulid = _d[1];\n                count++;\n                if (count <= start) {\n                  continue;\n                }\n                keysForStore.push(this.getKeyForItem(storeName, id, ulid));\n                if (count === end) {\n                  break;\n                }\n              }\n            } catch (e_6_1) {\n              e_6 = {\n                error: e_6_1\n              };\n            } finally {\n              try {\n                if (collection_3_1 && !collection_3_1.done && (_e = collection_3.return)) _e.call(collection_3);\n              } finally {\n                if (e_6) throw e_6.error;\n              }\n            }\n            return [4 /*yield*/, this.storage.multiGet(keysForStore)];\n          case 1:\n            storeRecordStrings = _f.sent();\n            records = storeRecordStrings.filter(function (_a) {\n              var _b = __read(_a, 2),\n                value = _b[1];\n              return value;\n            }).map(function (_a) {\n              var _b = __read(_a, 2),\n                value = _b[1];\n              return JSON.parse(value);\n            });\n            return [2 /*return*/, records];\n        }\n      });\n    });\n  };\n  AsyncStorageDatabase.prototype.delete = function (id, storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var ulid, itemKey;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            ulid = this.getCollectionIndex(storeName).get(id);\n            itemKey = this.getKeyForItem(storeName, id, ulid);\n            this.getCollectionIndex(storeName).delete(id);\n            return [4 /*yield*/, this.storage.removeItem(itemKey)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Clear the AsyncStorage of all DataStore entries\n   */\n  AsyncStorageDatabase.prototype.clear = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var allKeys, allDataStoreKeys;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.storage.getAllKeys()];\n          case 1:\n            allKeys = _a.sent();\n            allDataStoreKeys = allKeys.filter(function (key) {\n              return key.startsWith(DB_NAME);\n            });\n            return [4 /*yield*/, this.storage.multiRemove(allDataStoreKeys)];\n          case 2:\n            _a.sent();\n            this._collectionInMemoryIndex.clear();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  AsyncStorageDatabase.prototype.getKeyForItem = function (storeName, id, ulid) {\n    return this.getKeyPrefixForStoreItems(storeName) + \"::\" + ulid + \"::\" + id;\n  };\n  AsyncStorageDatabase.prototype.getLegacyKeyForItem = function (storeName, id) {\n    return this.getKeyPrefixForStoreItems(storeName) + \"::\" + id;\n  };\n  AsyncStorageDatabase.prototype.getKeyPrefixForStoreItems = function (storeName) {\n    return DB_NAME + \"::\" + storeName + \"::\" + DATA;\n  };\n  return AsyncStorageDatabase;\n}();\nexport default AsyncStorageDatabase;","map":{"version":3,"names":["OpType","QueryOne","monotonicUlidFactory","createInMemoryStore","DB_NAME","COLLECTION","DATA","monotonicFactoriesMap","Map","AsyncStorageDatabase","_collectionInMemoryIndex","storage","prototype","getCollectionIndex","storeName","has","set","get","getMonotonicFactory","init","clear","getAllKeys","allKeys","_c","sent","keysForCollectionEntries","allKeys_1","__values","allKeys_1_1","next","key","value","_a","__read","split","dbName","recordType","ulidOrId","id","ulid","undefined","id_1","newUlid","oldKey","getLegacyKeyForItem","newKey","getKeyForItem","getItem","item","setItem","removeItem","push","length","multiRemove","save","itemKey","JSON","stringify","batchSave","items","result","collection","keysToDelete","Set","keysToSave","allItemsKeys","itemsMap","items_1","items_1_1","done","_deleted","model","add","multiGet","existingRecordsMap","existingRecordsKeys","filter","_b","v","reduce","k","Promise","resolve","reject","size","keysToDeleteArray","Array","from","forEach","delete","_this","errors","entriesToSet","map","multiSet","allItemsKeys_1","allItemsKeys_1_1","DELETE","UPDATE","INSERT","recordAsString","record","parse","getOne","firstOrLast","FIRST","collection_1","collection_1_1","collection_2","collection_2_1","itemId","itemString","getAll","pagination","page","limit","start","Math","max","end","keysForStore","count","collection_3","collection_3_1","_d","storeRecordStrings","_f","records","allDataStoreKeys","startsWith","getKeyPrefixForStoreItems"],"sources":["../../../src/storage/adapter/AsyncStorageDatabase.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAECA,MAAM,EAGNC,QAAQ,QACF,aAAa;AACpB,SAASC,oBAAoB,QAAQ,YAAY;AACjD,SAASC,mBAAmB,QAAQ,iBAAiB;AAErD,IAAMC,OAAO,GAAG,mBAAmB;AACnC,IAAMC,UAAU,GAAG,YAAY;AAC/B,IAAMC,IAAI,GAAG,MAAM;AAEnB,IAAMC,qBAAqB,GAAG,IAAIC,GAAG,EAAgB;AAErD,IAAAC,oBAAA;EAAA,SAAAA,qBAAA;IACC;;;IAGQ,KAAAC,wBAAwB,GAAG,IAAIF,GAAG,EAA+B;IAEjE,KAAAG,OAAO,GAAGR,mBAAmB,EAAE;EAwRxC;EAtRSM,oBAAA,CAAAG,SAAA,CAAAC,kBAAkB,GAA1B,UAA2BC,SAAiB;IAC3C,IAAI,CAAC,IAAI,CAACJ,wBAAwB,CAACK,GAAG,CAACD,SAAS,CAAC,EAAE;MAClD,IAAI,CAACJ,wBAAwB,CAACM,GAAG,CAACF,SAAS,EAAE,IAAIN,GAAG,EAAE,CAAC;;IAGxD,OAAO,IAAI,CAACE,wBAAwB,CAACO,GAAG,CAACH,SAAS,CAAC;EACpD,CAAC;EAEOL,oBAAA,CAAAG,SAAA,CAAAM,mBAAmB,GAA3B,UAA4BJ,SAAiB;IAC5C,IAAI,CAACP,qBAAqB,CAACQ,GAAG,CAACD,SAAS,CAAC,EAAE;MAC1CP,qBAAqB,CAACS,GAAG,CAACF,SAAS,EAAEZ,oBAAoB,EAAE,CAAC;;IAG7D,OAAOK,qBAAqB,CAACU,GAAG,CAACH,SAAS,CAAC;EAC5C,CAAC;EAEKL,oBAAA,CAAAG,SAAA,CAAAO,IAAI,GAAV;;;;;;;YACC,IAAI,CAACT,wBAAwB,CAACU,KAAK,EAAE;YAEX,qBAAM,IAAI,CAACT,OAAO,CAACU,UAAU,EAAE;;YAAnDC,OAAO,GAAaC,EAAA,CAAAC,IAAA,EAA+B;YAEnDC,wBAAwB,GAAG,EAAE;;;;YAEjBC,SAAA,GAAAC,QAAA,CAAAL,OAAO,GAAAM,WAAA,GAAAF,SAAA,CAAAG,IAAA;;;;YAAdC,GAAG,GAAAF,WAAA,CAAAG,KAAA;YACPC,EAAA,GAAAC,MAAA,CAAgDH,GAAG,CAACI,KAAK,CAAC,IAAI,CAAC,MAA9DC,MAAM,GAAAH,EAAA,KAAElB,SAAS,GAAAkB,EAAA,KAAEI,UAAU,GAAAJ,EAAA,KAAEK,QAAQ,GAAAL,EAAA,KAAEM,EAAE,GAAAN,EAAA;kBAE9CG,MAAM,KAAK/B,OAAO,GAAlB;kBACCgC,UAAU,KAAK9B,IAAI,GAAnB;YACCiC,IAAI,SAAQ;kBAEZD,EAAE,KAAKE,SAAS,GAAhB;YAGGC,IAAA,GAAKJ,QAAQ;YAEbK,OAAO,GAAG,IAAI,CAACxB,mBAAmB,CAACJ,SAAS,CAAC,EAAE;YAE/C6B,MAAM,GAAG,IAAI,CAACC,mBAAmB,CAAC9B,SAAS,EAAE2B,IAAE,CAAC;YAChDI,MAAM,GAAG,IAAI,CAACC,aAAa,CAAChC,SAAS,EAAE2B,IAAE,EAAEC,OAAO,CAAC;YAE5C,qBAAM,IAAI,CAAC/B,OAAO,CAACoC,OAAO,CAACJ,MAAM,CAAC;;YAAzCK,IAAI,GAAGzB,EAAA,CAAAC,IAAA,EAAkC;YAE/C,qBAAM,IAAI,CAACb,OAAO,CAACsC,OAAO,CAACJ,MAAM,EAAEG,IAAI,CAAC;;YAAxCzB,EAAA,CAAAC,IAAA,EAAwC;YACxC,qBAAM,IAAI,CAACb,OAAO,CAACuC,UAAU,CAACP,MAAM,CAAC;;YAArCpB,EAAA,CAAAC,IAAA,EAAqC;YAErCe,IAAI,GAAGG,OAAO;;;YAEdH,IAAI,GAAGF,QAAQ;;;YAGhB,IAAI,CAACxB,kBAAkB,CAACC,SAAS,CAAC,CAACE,GAAG,CAACsB,EAAE,EAAEC,IAAI,CAAC;;;YAC1C,IAAIH,UAAU,KAAK/B,UAAU,EAAE;cACrCoB,wBAAwB,CAAC0B,IAAI,CAACrB,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;kBAKjCL,wBAAwB,CAAC2B,MAAM,GAAG,CAAC,GAAnC;YACH,qBAAM,IAAI,CAACzC,OAAO,CAAC0C,WAAW,CAAC5B,wBAAwB,CAAC;;YAAxDF,EAAA,CAAAC,IAAA,EAAwD;;;;;;;GAEzD;EAEKf,oBAAA,CAAAG,SAAA,CAAA0C,IAAI,GAAV,UAAsCN,IAAO,EAAElC,SAAiB;;;;;;YACzDyB,IAAI,GACT,IAAI,CAAC1B,kBAAkB,CAACC,SAAS,CAAC,CAACG,GAAG,CAAC+B,IAAI,CAACV,EAAE,CAAC,IAC/C,IAAI,CAACpB,mBAAmB,CAACJ,SAAS,CAAC,EAAE;YAEhCyC,OAAO,GAAG,IAAI,CAACT,aAAa,CAAChC,SAAS,EAAEkC,IAAI,CAACV,EAAE,EAAEC,IAAI,CAAC;YAE5D,IAAI,CAAC1B,kBAAkB,CAACC,SAAS,CAAC,CAACE,GAAG,CAACgC,IAAI,CAACV,EAAE,EAAEC,IAAI,CAAC;YAErD,qBAAM,IAAI,CAAC5B,OAAO,CAACsC,OAAO,CAACM,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI,CAAC,CAAC;;YAAzDhB,EAAA,CAAAR,IAAA,EAAyD;;;;;GACzD;EAEKf,oBAAA,CAAAG,SAAA,CAAA8C,SAAS,GAAf,UACC5C,SAAiB,EACjB6C,KAA8B;;;;;;;;YAE9B,IAAIA,KAAK,CAACP,MAAM,KAAK,CAAC,EAAE;cACvB,sBAAO,EAAE;;YAGJQ,MAAM,GAAkB,EAAE;YAE1BC,UAAU,GAAG,IAAI,CAAChD,kBAAkB,CAACC,SAAS,CAAC;YAE/CgD,YAAY,GAAG,IAAIC,GAAG,EAAU;YAChCC,UAAU,GAAG,IAAID,GAAG,EAAU;YAC9BE,YAAY,GAAG,EAAE;YACjBC,QAAQ,GAA+C,EAAE;;cAC/D,KAAmBC,OAAA,GAAAxC,QAAA,CAAAgC,KAAK,GAAAS,SAAA,GAAAD,OAAA,CAAAtC,IAAA,KAAAuC,SAAA,CAAAC,IAAA,EAAAD,SAAA,GAAAD,OAAA,CAAAtC,IAAA,IAAE;gBAAfmB,IAAI,GAAAoB,SAAA,CAAArC,KAAA;gBACNO,EAAE,GAAeU,IAAI,CAAAV,EAAnB,EAAEgC,QAAQ,GAAKtB,IAAI,CAAAsB,QAAT;gBACd/B,IAAI,GAAGsB,UAAU,CAAC5C,GAAG,CAACqB,EAAE,CAAC,IAAI,IAAI,CAACpB,mBAAmB,CAACJ,SAAS,CAAC,EAAE;gBAElEgB,GAAG,GAAG,IAAI,CAACgB,aAAa,CAAChC,SAAS,EAAEwB,EAAE,EAAEC,IAAI,CAAC;gBAEnD0B,YAAY,CAACd,IAAI,CAACrB,GAAG,CAAC;gBACtBoC,QAAQ,CAACpC,GAAG,CAAC,GAAG;kBAAES,IAAI,EAAAA,IAAA;kBAAEgC,KAAK,EAAevB;gBAAK,CAAE;gBAEnD,IAAIsB,QAAQ,EAAE;kBACbR,YAAY,CAACU,GAAG,CAAC1C,GAAG,CAAC;iBACrB,MAAM;kBACNkC,UAAU,CAACQ,GAAG,CAAC1C,GAAG,CAAC;;;;;;;;;;;;;;YAI0B,qBAAM,IAAI,CAACnB,OAAO,CAAC8D,QAAQ,CACzER,YAAY,CACZ;;YAFKS,kBAAkB,GAAuBnD,EAAA,CAAAC,IAAA,EAE9C;YACKmD,mBAAmB,GAAGD,kBAAkB,CAC5CE,MAAM,CAAC,UAAC5C,EAAK;kBAAL6C,EAAA,GAAA5C,MAAA,CAAAD,EAAA,IAAK;gBAAF8C,CAAA,GAAAD,EAAA,GAAC;cAAM,QAAC,CAACC,CAAC;YAAH,CAAG,CAAC,CACtBC,MAAM,CAAC,UAAC/D,GAAG,EAAEgB,EAAG;kBAAH6C,EAAA,GAAA5C,MAAA,CAAAD,EAAA,IAAG;gBAAFgD,CAAA,GAAAH,EAAA,GAAC;cAAM,OAAA7D,GAAG,CAACwD,GAAG,CAACQ,CAAC,CAAC;YAAV,CAAU,EAAE,IAAIjB,GAAG,EAAU,CAAC;YAErD,qBAAM,IAAIkB,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM;cACjC,IAAIrB,YAAY,CAACsB,IAAI,KAAK,CAAC,EAAE;gBAC5BF,OAAO,EAAE;gBACT;;cAGD,IAAMG,iBAAiB,GAAGC,KAAK,CAACC,IAAI,CAACzB,YAAY,CAAC;cAElDuB,iBAAiB,CAACG,OAAO,CAAC,UAAA1D,GAAG;gBAC5B,OAAA+B,UAAU,CAAC4B,MAAM,CAACvB,QAAQ,CAACpC,GAAG,CAAC,CAACyC,KAAK,CAACjC,EAAE,CAAC;cAAzC,CAAyC,CACzC;cAEDoD,KAAI,CAAC/E,OAAO,CAAC0C,WAAW,CAACgC,iBAAiB,EAAE,UAACM,MAAgB;gBAC5D,IAAIA,MAAM,IAAIA,MAAM,CAACvC,MAAM,GAAG,CAAC,EAAE;kBAChC+B,MAAM,CAACQ,MAAM,CAAC;iBACd,MAAM;kBACNT,OAAO,EAAE;;cAEX,CAAC,CAAC;YACH,CAAC,CAAC;;YAnBF3D,EAAA,CAAAC,IAAA,EAmBE;YAEF,qBAAM,IAAIyD,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM;cACjC,IAAInB,UAAU,CAACoB,IAAI,KAAK,CAAC,EAAE;gBAC1BF,OAAO,EAAE;gBACT;;cAGD,IAAMU,YAAY,GAAGN,KAAK,CAACC,IAAI,CAACvB,UAAU,CAAC,CAAC6B,GAAG,CAAC,UAAA/D,GAAG;gBAAI,QACtDA,GAAG,EACH0B,IAAI,CAACC,SAAS,CAACS,QAAQ,CAACpC,GAAG,CAAC,CAACyC,KAAK,CAAC,CACnC;cAHsD,CAGtD,CAAC;cAEFP,UAAU,CAACwB,OAAO,CAAC,UAAA1D,GAAG;gBACf,IAAAE,EAAA,GAAAkC,QAAA,CAAApC,GAAA,CAGW;kBAFPQ,EAAA,GAAAN,EAAA,CAAAuC,KAAA,CAAAjC,EAAE;kBACXC,IAAA,GAAAP,EAAA,CAAAO,IACgB;gBAEjBsB,UAAU,CAAC7C,GAAG,CAACsB,EAAE,EAAEC,IAAI,CAAC;cACzB,CAAC,CAAC;cAEFmD,KAAI,CAAC/E,OAAO,CAACmF,QAAQ,CAACF,YAAY,EAAE,UAACD,MAAgB;gBACpD,IAAIA,MAAM,IAAIA,MAAM,CAACvC,MAAM,GAAG,CAAC,EAAE;kBAChC+B,MAAM,CAACQ,MAAM,CAAC;iBACd,MAAM;kBACNT,OAAO,EAAE;;cAEX,CAAC,CAAC;YACH,CAAC,CAAC;;YA3BF3D,EAAA,CAAAC,IAAA,EA2BE;;cAEF,KAAkBuE,cAAA,GAAApE,QAAA,CAAAsC,YAAY,GAAA+B,gBAAA,GAAAD,cAAA,CAAAlE,IAAA,KAAAmE,gBAAA,CAAA3B,IAAA,EAAA2B,gBAAA,GAAAD,cAAA,CAAAlE,IAAA,IAAE;gBAArBC,GAAG,GAAAkE,gBAAA,CAAAjE,KAAA;gBACb,IAAI+B,YAAY,CAAC/C,GAAG,CAACe,GAAG,CAAC,IAAI6C,mBAAmB,CAAC5D,GAAG,CAACe,GAAG,CAAC,EAAE;kBAC1D8B,MAAM,CAACT,IAAI,CAAC,CAACe,QAAQ,CAACpC,GAAG,CAAC,CAACyC,KAAK,EAAEvE,MAAM,CAACiG,MAAM,CAAC,CAAC;iBACjD,MAAM,IAAIjC,UAAU,CAACjD,GAAG,CAACe,GAAG,CAAC,EAAE;kBAC/B8B,MAAM,CAACT,IAAI,CAAC,CACXe,QAAQ,CAACpC,GAAG,CAAC,CAACyC,KAAK,EACnBI,mBAAmB,CAAC5D,GAAG,CAACe,GAAG,CAAC,GAAG9B,MAAM,CAACkG,MAAM,GAAGlG,MAAM,CAACmG,MAAM,CAC5D,CAAC;;;;;;;;;;;;;;YAIJ,sBAAOvC,MAAM;;;;GACb;EAEKnD,oBAAA,CAAAG,SAAA,CAAAK,GAAG,GAAT,UACCqB,EAAU,EACVxB,SAAiB;;;;;;YAEXyB,IAAI,GAAG,IAAI,CAAC1B,kBAAkB,CAACC,SAAS,CAAC,CAACG,GAAG,CAACqB,EAAE,CAAC;YACjDiB,OAAO,GAAG,IAAI,CAACT,aAAa,CAAChC,SAAS,EAAEwB,EAAE,EAAEC,IAAI,CAAC;YAChC,qBAAM,IAAI,CAAC5B,OAAO,CAACoC,OAAO,CAACQ,OAAO,CAAC;;YAApD6C,cAAc,GAAGpE,EAAA,CAAAR,IAAA,EAAmC;YACpD6E,MAAM,GAAGD,cAAc,IAAI5C,IAAI,CAAC8C,KAAK,CAACF,cAAc,CAAC;YAC3D,sBAAOC,MAAM;;;;GACb;EAEK5F,oBAAA,CAAAG,SAAA,CAAA2F,MAAM,GAAZ,UAAaC,WAAqB,EAAE1F,SAAiB;;;;;;YAC9C+C,UAAU,GAAG,IAAI,CAAChD,kBAAkB,CAACC,SAAS,CAAC;YAE/CkB,EAAA,GAAAC,MAAA,CACLuE,WAAW,KAAKvG,QAAQ,CAACwG,KAAK,GAC1B;;cACD,IAAInE,EAAU,EAAEC,IAAY;;gBAC5B,KAAmB,IAAAmE,YAAA,GAAA/E,QAAA,CAAAkC,UAAU,GAAA8C,cAAA,GAAAD,YAAA,CAAA7E,IAAA,KAAA8E,cAAA,CAAAtC,IAAA,EAAAsC,cAAA,GAAAD,YAAA,CAAA7E,IAAA;wDAAvBS,EAAA,GAAAuC,EAAA,GAAE,EAAEtC,IAAA,GAAAsC,EAAA,GAAI;kBAAiB;iBAAM,CAAC;;;;;;;;;;;;cACtC,OAAO,CAACvC,EAAE,EAAEC,IAAI,CAAC;YACjB,CAAC,CAAC,CAAE,GACH;;cACD,IAAID,EAAU,EAAEC,IAAY;;gBAC5B,KAAmB,IAAAqE,YAAA,GAAAjF,QAAA,CAAAkC,UAAU,GAAAgD,cAAA,GAAAD,YAAA,CAAA/E,IAAA,KAAAgF,cAAA,CAAAxC,IAAA,EAAAwC,cAAA,GAAAD,YAAA,CAAA/E,IAAA;wDAAvBS,EAAA,GAAAuC,EAAA,GAAE,EAAEtC,IAAA,GAAAsC,EAAA,GAAI;kBAAgB;iBAAC,CAAC;;;;;;;;;;;;cAChC,OAAO,CAACvC,EAAE,EAAEC,IAAI,CAAC;YACjB,CAAC,CAAC,CAAE,MAXDuE,MAAM,GAAA9E,EAAA,KAAEO,IAAI,GAAAP,EAAA;YAYbuB,OAAO,GAAG,IAAI,CAACT,aAAa,CAAChC,SAAS,EAAEgG,MAAM,EAAEvE,IAAI,CAAC;YACxCsC,EAAA,GAAAtB,OAAO;qBAAP;YAAY,qBAAM,IAAI,CAAC5C,OAAO,CAACoC,OAAO,CAACQ,OAAO,CAAC;;YAApCsB,EAAA,GAACtD,EAAA,CAAAC,IAAA,EAAoC;;;YAA7DuF,UAAU,GAAAlC,EAAmD;YAE7DjB,MAAM,GAAGmD,UAAU,GAAGvD,IAAI,CAAC8C,KAAK,CAACS,UAAU,CAAC,IAAIvE,SAAS,GAAGA,SAAS;YAE3E,sBAAOoB,MAAM;;;;GACb;EAED;;;;EAIMnD,oBAAA,CAAAG,SAAA,CAAAoG,MAAM,GAAZ,UACClG,SAAiB,EACjBmG,UAA+B;;;;;;;YAEzBpD,UAAU,GAAG,IAAI,CAAChD,kBAAkB,CAACC,SAAS,CAAC;YAE/CkB,EAAA,GAA0BiF,UAAU,IAAI,EAAE,EAAxCpC,EAAA,GAAA7C,EAAA,CAAAkF,IAAQ,EAARA,IAAI,GAAArC,EAAA,cAAG,CAAC,GAAAA,EAAA,EAAEtD,EAAA,GAAAS,EAAA,CAAAmF,KAAS,EAATA,KAAK,GAAA5F,EAAA,cAAG,CAAC,GAAAA,EAAA;YACrB6F,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEJ,IAAI,GAAGC,KAAK,CAAC,IAAI,CAAC;YACtCI,GAAG,GAAGJ,KAAK,GAAG,CAAC,GAAGC,KAAK,GAAGD,KAAK,GAAG3E,SAAS;YAE3CgF,YAAY,GAAa,EAAE;YAC7BC,KAAK,GAAG,CAAC;;cACb,KAAyBC,YAAA,GAAA/F,QAAA,CAAAkC,UAAU,GAAA8D,cAAA,GAAAD,YAAA,CAAA7F,IAAA,KAAA8F,cAAA,CAAAtD,IAAA,EAAAsD,cAAA,GAAAD,YAAA,CAAA7F,IAAA,IAAE;gBAA1B+F,EAAA,GAAA3F,MAAA,CAAA0F,cAAA,CAAA5F,KAAA,IAAU,EAATO,EAAE,GAAAsF,EAAA,KAAErF,IAAI,GAAAqF,EAAA;gBACnBH,KAAK,EAAE;gBAEP,IAAIA,KAAK,IAAIL,KAAK,EAAE;kBACnB;;gBAGDI,YAAY,CAACrE,IAAI,CAAC,IAAI,CAACL,aAAa,CAAChC,SAAS,EAAEwB,EAAE,EAAEC,IAAI,CAAC,CAAC;gBAE1D,IAAIkF,KAAK,KAAKF,GAAG,EAAE;kBAClB;;;;;;;;;;;;;;YAIyB,qBAAM,IAAI,CAAC5G,OAAO,CAAC8D,QAAQ,CAAC+C,YAAY,CAAC;;YAA9DK,kBAAkB,GAAGC,EAAA,CAAAtG,IAAA,EAAyC;YAC9DuG,OAAO,GAAGF,kBAAkB,CAChCjD,MAAM,CAAC,UAAC5C,EAAS;kBAAT6C,EAAA,GAAA5C,MAAA,CAAAD,EAAA,IAAS;gBAAND,KAAA,GAAA8C,EAAA,GAAK;cAAM,OAAA9C,KAAK;YAAL,CAAK,CAAC,CAC5B8D,GAAG,CAAC,UAAC7D,EAAS;kBAAT6C,EAAA,GAAA5C,MAAA,CAAAD,EAAA,IAAS;gBAAND,KAAA,GAAA8C,EAAA,GAAK;cAAM,OAAArB,IAAI,CAAC8C,KAAK,CAACvE,KAAK,CAAC;YAAjB,CAAiB,CAAC;YAEvC,sBAAOgG,OAAO;;;;GACd;EAEKtH,oBAAA,CAAAG,SAAA,CAAA6E,MAAM,GAAZ,UAAanD,EAAU,EAAExB,SAAiB;;;;;;YACnCyB,IAAI,GAAG,IAAI,CAAC1B,kBAAkB,CAACC,SAAS,CAAC,CAACG,GAAG,CAACqB,EAAE,CAAC;YACjDiB,OAAO,GAAG,IAAI,CAACT,aAAa,CAAChC,SAAS,EAAEwB,EAAE,EAAEC,IAAI,CAAC;YAEvD,IAAI,CAAC1B,kBAAkB,CAACC,SAAS,CAAC,CAAC2E,MAAM,CAACnD,EAAE,CAAC;YAC7C,qBAAM,IAAI,CAAC3B,OAAO,CAACuC,UAAU,CAACK,OAAO,CAAC;;YAAtCvB,EAAA,CAAAR,IAAA,EAAsC;;;;;GACtC;EAED;;;EAGMf,oBAAA,CAAAG,SAAA,CAAAQ,KAAK,GAAX;;;;;;YACiB,qBAAM,IAAI,CAACT,OAAO,CAACU,UAAU,EAAE;;YAAzCC,OAAO,GAAGU,EAAA,CAAAR,IAAA,EAA+B;YACzCwG,gBAAgB,GAAG1G,OAAO,CAACsD,MAAM,CAAC,UAAA9C,GAAG;cAAI,OAAAA,GAAG,CAACmG,UAAU,CAAC7H,OAAO,CAAC;YAAvB,CAAuB,CAAC;YACvE,qBAAM,IAAI,CAACO,OAAO,CAAC0C,WAAW,CAAC2E,gBAAgB,CAAC;;YAAhDhG,EAAA,CAAAR,IAAA,EAAgD;YAChD,IAAI,CAACd,wBAAwB,CAACU,KAAK,EAAE;;;;;GACrC;EAEOX,oBAAA,CAAAG,SAAA,CAAAkC,aAAa,GAArB,UAAsBhC,SAAiB,EAAEwB,EAAU,EAAEC,IAAY;IAChE,OAAU,IAAI,CAAC2F,yBAAyB,CAACpH,SAAS,CAAC,UAAKyB,IAAI,UAAKD,EAAI;EACtE,CAAC;EAEO7B,oBAAA,CAAAG,SAAA,CAAAgC,mBAAmB,GAA3B,UAA4B9B,SAAiB,EAAEwB,EAAU;IACxD,OAAU,IAAI,CAAC4F,yBAAyB,CAACpH,SAAS,CAAC,UAAKwB,EAAI;EAC7D,CAAC;EAEO7B,oBAAA,CAAAG,SAAA,CAAAsH,yBAAyB,GAAjC,UAAkCpH,SAAiB;IAClD,OAAUV,OAAO,UAAKU,SAAS,UAAKR,IAAM;EAC3C,CAAC;EACF,OAAAG,oBAAC;AAAD,CAAC,CA9RD;AAgSA,eAAeA,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module"}