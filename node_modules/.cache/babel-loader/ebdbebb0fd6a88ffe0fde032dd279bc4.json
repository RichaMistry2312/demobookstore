{"ast":null,"code":"/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { HttpResponse } from '@aws-sdk/protocol-http';\nimport { buildQueryString } from '@aws-sdk/querystring-builder';\nimport axios from 'axios';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('axios-http-handler');\nexport var SEND_PROGRESS_EVENT = 'sendProgress';\nvar AxiosHttpHandler = /** @class */function () {\n  function AxiosHttpHandler(httpOptions, emitter) {\n    if (httpOptions === void 0) {\n      httpOptions = {};\n    }\n    this.httpOptions = httpOptions;\n    this.emitter = emitter;\n  }\n  AxiosHttpHandler.prototype.destroy = function () {\n    // Do nothing. TLS and HTTP/2 connection pooling is handled by the\n    // browser.\n  };\n  AxiosHttpHandler.prototype.handle = function (request, options) {\n    var requestTimeoutInMs = this.httpOptions.requestTimeout;\n    var emitter = this.emitter;\n    var path = request.path;\n    if (request.query) {\n      var queryString = buildQueryString(request.query);\n      if (queryString) {\n        path += \"?\" + queryString;\n      }\n    }\n    var port = request.port;\n    var url = request.protocol + \"//\" + request.hostname + (port ? \":\" + port : '') + path;\n    var axiosRequest = {};\n    axiosRequest.url = url;\n    axiosRequest.method = request.method;\n    axiosRequest.headers = request.headers;\n    // The host header is automatically added by the browser and adding it explicitly in the\n    // axios request throws an error https://github.com/aws-amplify/amplify-js/issues/5376\n    // This is because the host header is a forbidden header for the http client to set\n    // see https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name and\n    // https://fetch.spec.whatwg.org/#forbidden-header-name\n    // The reason we are removing this header here instead of in the aws-sdk's client\n    // middleware is that the host header is required to be in the request signature and if\n    // we remove it from the middlewares, then the request fails because the header is added\n    // by the browser but is absent from the signature.\n    delete axiosRequest.headers['host'];\n    if (request.body) {\n      axiosRequest.data = request.body;\n    } else {\n      // Fix for https://github.com/aws-amplify/amplify-js/issues/5432\n      // If the POST request body is empty but content-type header is set, axios is forcibly removing it\n      // See https://github.com/axios/axios/issues/1535 and refusing to fix it https://github.com/axios/axios/issues/755\n      // This change is a workaround to set the data as null (instead of undefined) to prevent axios from\n      // removing the content-type header. Link for the source code\n      // https://github.com/axios/axios/blob/dc4bc49673943e35280e5df831f5c3d0347a9393/lib/adapters/xhr.js#L121-L123\n      if (axiosRequest.headers['Content-Type']) {\n        axiosRequest.data = null;\n      }\n    }\n    if (emitter) {\n      axiosRequest.onUploadProgress = function (event) {\n        emitter.emit(SEND_PROGRESS_EVENT, event);\n        logger.debug(event);\n      };\n    }\n    // From gamma release, aws-sdk now expects all response type to be of blob or streams\n    axiosRequest.responseType = 'blob';\n    var raceOfPromises = [axios.request(axiosRequest).then(function (response) {\n      return {\n        response: new HttpResponse({\n          headers: response.headers,\n          statusCode: response.status,\n          body: response.data\n        })\n      };\n    }).catch(function (error) {\n      // Error\n      logger.error(error);\n      throw error;\n    }), requestTimeout(requestTimeoutInMs)];\n    return Promise.race(raceOfPromises);\n  };\n  return AxiosHttpHandler;\n}();\nexport { AxiosHttpHandler };\nfunction requestTimeout(timeoutInMs) {\n  if (timeoutInMs === void 0) {\n    timeoutInMs = 0;\n  }\n  return new Promise(function (resolve, reject) {\n    if (timeoutInMs) {\n      setTimeout(function () {\n        var timeoutError = new Error(\"Request did not complete within \" + timeoutInMs + \" ms\");\n        timeoutError.name = 'TimeoutError';\n        reject(timeoutError);\n      }, timeoutInMs);\n    }\n  });\n}","map":{"version":3,"names":["HttpResponse","buildQueryString","axios","ConsoleLogger","Logger","logger","SEND_PROGRESS_EVENT","AxiosHttpHandler","httpOptions","emitter","prototype","destroy","handle","request","options","requestTimeoutInMs","requestTimeout","path","query","queryString","port","url","protocol","hostname","axiosRequest","method","headers","body","data","onUploadProgress","event","emit","debug","responseType","raceOfPromises","then","response","statusCode","status","catch","error","Promise","race","timeoutInMs","resolve","reject","setTimeout","timeoutError","Error","name"],"sources":["../../src/providers/axios-http-handler.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}