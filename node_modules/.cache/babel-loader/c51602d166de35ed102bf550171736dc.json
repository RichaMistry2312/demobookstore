{"ast":null,"code":"import { __awaiter, __generator, __rest } from \"tslib\";\nexport var deserializerMiddleware = function (options, deserializer) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var logger, outputFilterSensitiveLog, response, parsed, $metadata, outputWithoutMetadata;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              logger = context.logger, outputFilterSensitiveLog = context.outputFilterSensitiveLog;\n              return [4 /*yield*/, next(args)];\n            case 1:\n              response = _a.sent().response;\n              if (typeof (logger === null || logger === void 0 ? void 0 : logger.debug) === \"function\") {\n                logger.debug({\n                  httpResponse: response\n                });\n              }\n              return [4 /*yield*/, deserializer(response, options)];\n            case 2:\n              parsed = _a.sent();\n              $metadata = parsed.$metadata, outputWithoutMetadata = __rest(parsed, [\"$metadata\"]);\n              if (typeof (logger === null || logger === void 0 ? void 0 : logger.info) === \"function\") {\n                logger.info({\n                  output: outputFilterSensitiveLog(outputWithoutMetadata)\n                });\n              }\n              return [2 /*return*/, {\n                response: response,\n                output: parsed\n              }];\n          }\n        });\n      });\n    };\n  };\n};","map":{"version":3,"names":["deserializerMiddleware","options","deserializer","next","context","args","__awaiter","logger","outputFilterSensitiveLog","response","_a","sent","debug","httpResponse","parsed","$metadata","outputWithoutMetadata","__rest","info","output"],"sources":["../../src/deserializerMiddleware.ts"],"sourcesContent":["import {\n  DeserializeHandler,\n  DeserializeHandlerArguments,\n  DeserializeHandlerOutput,\n  DeserializeMiddleware,\n  HandlerExecutionContext,\n  ResponseDeserializer,\n} from \"@aws-sdk/types\";\n\nexport const deserializerMiddleware = <Input extends object, Output extends object, RuntimeUtils = any>(\n  options: RuntimeUtils,\n  deserializer: ResponseDeserializer<any, any, RuntimeUtils>\n): DeserializeMiddleware<Input, Output> => (\n  next: DeserializeHandler<Input, Output>,\n  context: HandlerExecutionContext\n): DeserializeHandler<Input, Output> => async (\n  args: DeserializeHandlerArguments<Input>\n): Promise<DeserializeHandlerOutput<Output>> => {\n  const { logger, outputFilterSensitiveLog } = context;\n\n  const { response } = await next(args);\n\n  if (typeof logger?.debug === \"function\") {\n    logger.debug({\n      httpResponse: response,\n    });\n  }\n\n  const parsed = await deserializer(response, options);\n\n  // Log parsed after $metadata is removed in https://github.com/aws/aws-sdk-js-v3/issues/1490\n  const { $metadata, ...outputWithoutMetadata } = parsed;\n\n  if (typeof logger?.info === \"function\") {\n    logger.info({\n      output: outputFilterSensitiveLog(outputWithoutMetadata),\n    });\n  }\n\n  return {\n    response,\n    output: parsed as Output,\n  };\n};\n"],"mappings":";AASA,OAAO,IAAMA,sBAAsB,GAAG,SAAAA,CACpCC,OAAqB,EACrBC,YAA0D;EACjB,iBACzCC,IAAuC,EACvCC,OAAgC;IACM,iBACtCC,IAAwC;MAAA,OAAAC,SAAA;;;;;cAEhCC,MAAM,GAA+BH,OAAO,CAAAG,MAAtC,EAAEC,wBAAwB,GAAKJ,OAAO,CAAAI,wBAAZ;cAEnB,qBAAML,IAAI,CAACE,IAAI,CAAC;;cAA7BI,QAAQ,GAAKC,EAAA,CAAAC,IAAA,EAAgB,CAAAF,QAArB;cAEhB,IAAI,QAAOF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEK,KAAK,MAAK,UAAU,EAAE;gBACvCL,MAAM,CAACK,KAAK,CAAC;kBACXC,YAAY,EAAEJ;iBACf,CAAC;;cAGW,qBAAMP,YAAY,CAACO,QAAQ,EAAER,OAAO,CAAC;;cAA9Ca,MAAM,GAAGJ,EAAA,CAAAC,IAAA,EAAqC;cAG5CI,SAAS,GAA+BD,MAAM,CAAAC,SAArC,EAAKC,qBAAqB,GAAAC,MAAA,CAAKH,MAAM,EAAhD,aAAuC,CAAF;cAE3C,IAAI,QAAOP,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEW,IAAI,MAAK,UAAU,EAAE;gBACtCX,MAAM,CAACW,IAAI,CAAC;kBACVC,MAAM,EAAEX,wBAAwB,CAACQ,qBAAqB;iBACvD,CAAC;;cAGJ,sBAAO;gBACLP,QAAQ,EAAAA,QAAA;gBACRU,MAAM,EAAEL;eACT;;;;KACF;EA5BuC,CA4BvC;AA/B0C,CA+B1C","ignoreList":[]},"metadata":{},"sourceType":"module"}