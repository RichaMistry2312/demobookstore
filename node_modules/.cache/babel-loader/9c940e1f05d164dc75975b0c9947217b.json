{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nexport function unknownFragmentMessage(fragName) {\n  return \"Unknown fragment \\\"\".concat(fragName, \"\\\".\");\n}\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n */\n\nexport function KnownFragmentNames(context) {\n  return {\n    FragmentSpread: function FragmentSpread(node) {\n      var fragmentName = node.name.value;\n      var fragment = context.getFragment(fragmentName);\n      if (!fragment) {\n        context.reportError(new GraphQLError(unknownFragmentMessage(fragmentName), [node.name]));\n      }\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","unknownFragmentMessage","fragName","concat","KnownFragmentNames","context","FragmentSpread","node","fragmentName","name","value","fragment","getFragment","reportError"],"sources":["/Users/richa/Desktop/Projects/demo-project/store/bookstore-v2/node_modules/graphql/validation/rules/KnownFragmentNames.mjs"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nexport function unknownFragmentMessage(fragName) {\n  return \"Unknown fragment \\\"\".concat(fragName, \"\\\".\");\n}\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n */\n\nexport function KnownFragmentNames(context) {\n  return {\n    FragmentSpread: function FragmentSpread(node) {\n      var fragmentName = node.name.value;\n      var fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(new GraphQLError(unknownFragmentMessage(fragmentName), [node.name]));\n      }\n    }\n  };\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,0BAA0B;AACvD,OAAO,SAASC,sBAAsBA,CAACC,QAAQ,EAAE;EAC/C,OAAO,qBAAqB,CAACC,MAAM,CAACD,QAAQ,EAAE,KAAK,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,kBAAkBA,CAACC,OAAO,EAAE;EAC1C,OAAO;IACLC,cAAc,EAAE,SAASA,cAAcA,CAACC,IAAI,EAAE;MAC5C,IAAIC,YAAY,GAAGD,IAAI,CAACE,IAAI,CAACC,KAAK;MAClC,IAAIC,QAAQ,GAAGN,OAAO,CAACO,WAAW,CAACJ,YAAY,CAAC;MAEhD,IAAI,CAACG,QAAQ,EAAE;QACbN,OAAO,CAACQ,WAAW,CAAC,IAAIb,YAAY,CAACC,sBAAsB,CAACO,YAAY,CAAC,EAAE,CAACD,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;MAC1F;IACF;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module"}