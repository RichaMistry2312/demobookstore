{"ast":null,"code":"import { r as registerInstance, h, c as createEvent, H as Host } from './index-3fb5c139.js';\nvar amplifyFormFieldCss = \":host{--label-font-size:var(--amplify-text-md);--description-font-size:var(--amplify-text-sm)}.form-field{margin-bottom:15px}.form-field-label{display:block;font-size:var(--label-font-size);padding-bottom:0.5em}.form-field-description{font-size:var(--description-font-size);padding-top:0.5em}\";\nvar AmplifyFormField = /** @class */function () {\n  function AmplifyFormField(hostRef) {\n    registerInstance(this, hostRef);\n    /** The input type.  Can be any HTML input type. */\n    this.type = 'text';\n    /** The required flag in order to make an input required prior to submitting a form */\n    this.required = false;\n    /** (Optional) The placeholder for the input element.  Using hints is recommended, but placeholders can also be useful to convey information to users. */\n    this.placeholder = '';\n  }\n  AmplifyFormField.prototype.render = function () {\n    return h(\"div\", {\n      class: \"form-field\"\n    }, this.label && h(\"div\", {\n      class: \"form-field-label\"\n    }, h(\"amplify-label\", {\n      htmlFor: this.fieldId\n    }, this.label)), this.description && h(\"div\", {\n      id: this.fieldId + \"-description\",\n      class: \"form-field-description\",\n      \"data-test\": \"form-field-description\"\n    }, this.description), h(\"div\", null, h(\"slot\", {\n      name: \"input\"\n    }, h(\"amplify-input\", {\n      fieldId: this.fieldId,\n      description: this.description,\n      type: this.type,\n      handleInputChange: this.handleInputChange,\n      placeholder: this.placeholder,\n      name: this.name,\n      value: this.value,\n      inputProps: this.inputProps,\n      disabled: this.disabled\n    }))), this.hint && h(\"amplify-hint\", {\n      id: this.fieldId + \"-hint\"\n    }, this.hint));\n  };\n  return AmplifyFormField;\n}();\nAmplifyFormField.style = amplifyFormFieldCss;\nvar amplifyHintCss = \":host{--color:var(--amplify-grey);--font-family:var(--amplify-font-family);--font-size:var(--amplify-text-xs);--font-weight:var(--amplify-font-weight)}.hint{color:var(--color);font-family:var(--font-family);font-weight:var(--font-weight);font-size:var(--font-size);margin-bottom:2.625rem}\";\nvar AmplifyHint = /** @class */function () {\n  function AmplifyHint(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  AmplifyHint.prototype.render = function () {\n    return h(\"div\", {\n      class: \"hint\"\n    }, h(\"slot\", null));\n  };\n  return AmplifyHint;\n}();\nAmplifyHint.style = amplifyHintCss;\nvar amplifyInputCss = \":host{--color:var(--amplify-secondary-color);--background-color:var(--amplify-secondary-contrast);--border-color:var(--amplify-light-grey);--border-color-focus:var(--amplify-primary-color);--border:1px solid var(--border-color);--margin:0 0 0.625rem 0}.input-host{width:100%}.input{display:block;width:100%;padding:1rem;font-size:var(--amplify-text-sm);color:var(--color);background-color:var(--background-color);background-image:none;border:var(--border);border-radius:3px;-webkit-box-sizing:border-box;box-sizing:border-box;margin:var(--margin);height:3.125rem;line-height:1.1}.input:focus{outline:none;border-color:var(--border-color-focus)}.input:disabled{opacity:0.5}\";\nvar AmplifyInput = /** @class */function () {\n  function AmplifyInput(hostRef) {\n    registerInstance(this, hostRef);\n    /** The input type.  Can be any HTML input type. */\n    this.type = 'text';\n    /** The callback, called when the input is modified by the user. */\n    this.handleInputChange = function () {\n      return void 0;\n    };\n    /** (Optional) The placeholder for the input element.  Using hints is recommended, but placeholders can also be useful to convey information to users. */\n    this.placeholder = '';\n    this.formSubmit = createEvent(this, \"formSubmit\", 7);\n  }\n  // eslint-disable-next-line\n  AmplifyInput.prototype.handleKeyDown = function (ev) {\n    if (ev.key === 'Enter') {\n      this.formSubmit.emit(ev);\n    }\n  };\n  AmplifyInput.prototype.render = function () {\n    var _this = this;\n    return h(Host, {\n      class: \"input-host\"\n    }, h(\"input\", Object.assign({\n      id: this.fieldId,\n      \"aria-describedby\": this.fieldId && this.description ? this.fieldId + \"-description\" : null,\n      type: this.type,\n      onInput: function (event) {\n        return _this.handleInputChange(event);\n      },\n      placeholder: this.placeholder,\n      name: this.name,\n      class: \"input\",\n      value: this.value,\n      disabled: this.disabled\n    }, this.inputProps)));\n  };\n  return AmplifyInput;\n}();\nAmplifyInput.style = amplifyInputCss;\nvar amplifyLabelCss = \":host{--label-color:var(--amplify-secondary-color)}.label{color:var(--label-color);font-size:var(--amplify-text-sm);margin-bottom:16px}\";\nvar AmplifyLabel = /** @class */function () {\n  function AmplifyLabel(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  AmplifyLabel.prototype.render = function () {\n    return h(\"label\", {\n      class: \"label\",\n      htmlFor: this.htmlFor\n    }, h(\"slot\", null));\n  };\n  return AmplifyLabel;\n}();\nAmplifyLabel.style = amplifyLabelCss;\nexport { AmplifyFormField as amplify_form_field, AmplifyHint as amplify_hint, AmplifyInput as amplify_input, AmplifyLabel as amplify_label };","map":{"version":3,"names":["r","registerInstance","h","c","createEvent","H","Host","amplifyFormFieldCss","AmplifyFormField","hostRef","type","required","placeholder","prototype","render","class","label","htmlFor","fieldId","description","id","name","handleInputChange","value","inputProps","disabled","hint","style","amplifyHintCss","AmplifyHint","amplifyInputCss","AmplifyInput","formSubmit","handleKeyDown","ev","key","emit","_this","Object","assign","onInput","event","amplifyLabelCss","AmplifyLabel","amplify_form_field","amplify_hint","amplify_input","amplify_label"],"sources":["/Users/richa/Desktop/Projects/demo-project/store/bookstore-v2/node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-form-field_4.entry.js"],"sourcesContent":["import { r as registerInstance, h, c as createEvent, H as Host } from './index-3fb5c139.js';\nvar amplifyFormFieldCss = \":host{--label-font-size:var(--amplify-text-md);--description-font-size:var(--amplify-text-sm)}.form-field{margin-bottom:15px}.form-field-label{display:block;font-size:var(--label-font-size);padding-bottom:0.5em}.form-field-description{font-size:var(--description-font-size);padding-top:0.5em}\";\nvar AmplifyFormField = /** @class */ (function () {\n    function AmplifyFormField(hostRef) {\n        registerInstance(this, hostRef);\n        /** The input type.  Can be any HTML input type. */\n        this.type = 'text';\n        /** The required flag in order to make an input required prior to submitting a form */\n        this.required = false;\n        /** (Optional) The placeholder for the input element.  Using hints is recommended, but placeholders can also be useful to convey information to users. */\n        this.placeholder = '';\n    }\n    AmplifyFormField.prototype.render = function () {\n        return (h(\"div\", { class: \"form-field\" }, this.label && (h(\"div\", { class: \"form-field-label\" }, h(\"amplify-label\", { htmlFor: this.fieldId }, this.label))), this.description && (h(\"div\", { id: this.fieldId + \"-description\", class: \"form-field-description\", \"data-test\": \"form-field-description\" }, this.description)), h(\"div\", null, h(\"slot\", { name: \"input\" }, h(\"amplify-input\", { fieldId: this.fieldId, description: this.description, type: this.type, handleInputChange: this.handleInputChange, placeholder: this.placeholder, name: this.name, value: this.value, inputProps: this.inputProps, disabled: this.disabled }))), this.hint && h(\"amplify-hint\", { id: this.fieldId + \"-hint\" }, this.hint)));\n    };\n    return AmplifyFormField;\n}());\nAmplifyFormField.style = amplifyFormFieldCss;\nvar amplifyHintCss = \":host{--color:var(--amplify-grey);--font-family:var(--amplify-font-family);--font-size:var(--amplify-text-xs);--font-weight:var(--amplify-font-weight)}.hint{color:var(--color);font-family:var(--font-family);font-weight:var(--font-weight);font-size:var(--font-size);margin-bottom:2.625rem}\";\nvar AmplifyHint = /** @class */ (function () {\n    function AmplifyHint(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    AmplifyHint.prototype.render = function () {\n        return (h(\"div\", { class: \"hint\" }, h(\"slot\", null)));\n    };\n    return AmplifyHint;\n}());\nAmplifyHint.style = amplifyHintCss;\nvar amplifyInputCss = \":host{--color:var(--amplify-secondary-color);--background-color:var(--amplify-secondary-contrast);--border-color:var(--amplify-light-grey);--border-color-focus:var(--amplify-primary-color);--border:1px solid var(--border-color);--margin:0 0 0.625rem 0}.input-host{width:100%}.input{display:block;width:100%;padding:1rem;font-size:var(--amplify-text-sm);color:var(--color);background-color:var(--background-color);background-image:none;border:var(--border);border-radius:3px;-webkit-box-sizing:border-box;box-sizing:border-box;margin:var(--margin);height:3.125rem;line-height:1.1}.input:focus{outline:none;border-color:var(--border-color-focus)}.input:disabled{opacity:0.5}\";\nvar AmplifyInput = /** @class */ (function () {\n    function AmplifyInput(hostRef) {\n        registerInstance(this, hostRef);\n        /** The input type.  Can be any HTML input type. */\n        this.type = 'text';\n        /** The callback, called when the input is modified by the user. */\n        this.handleInputChange = function () { return void 0; };\n        /** (Optional) The placeholder for the input element.  Using hints is recommended, but placeholders can also be useful to convey information to users. */\n        this.placeholder = '';\n        this.formSubmit = createEvent(this, \"formSubmit\", 7);\n    }\n    // eslint-disable-next-line\n    AmplifyInput.prototype.handleKeyDown = function (ev) {\n        if (ev.key === 'Enter') {\n            this.formSubmit.emit(ev);\n        }\n    };\n    AmplifyInput.prototype.render = function () {\n        var _this = this;\n        return (h(Host, { class: \"input-host\" }, h(\"input\", Object.assign({ id: this.fieldId, \"aria-describedby\": this.fieldId && this.description ? this.fieldId + \"-description\" : null, type: this.type, onInput: function (event) { return _this.handleInputChange(event); }, placeholder: this.placeholder, name: this.name, class: \"input\", value: this.value, disabled: this.disabled }, this.inputProps))));\n    };\n    return AmplifyInput;\n}());\nAmplifyInput.style = amplifyInputCss;\nvar amplifyLabelCss = \":host{--label-color:var(--amplify-secondary-color)}.label{color:var(--label-color);font-size:var(--amplify-text-sm);margin-bottom:16px}\";\nvar AmplifyLabel = /** @class */ (function () {\n    function AmplifyLabel(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    AmplifyLabel.prototype.render = function () {\n        return (h(\"label\", { class: \"label\", htmlFor: this.htmlFor }, h(\"slot\", null)));\n    };\n    return AmplifyLabel;\n}());\nAmplifyLabel.style = amplifyLabelCss;\nexport { AmplifyFormField as amplify_form_field, AmplifyHint as amplify_hint, AmplifyInput as amplify_input, AmplifyLabel as amplify_label };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}