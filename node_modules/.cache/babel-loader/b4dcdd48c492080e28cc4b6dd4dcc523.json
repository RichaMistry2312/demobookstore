{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { DirectiveLocation } from '../../language/directiveLocation';\nimport { specifiedDirectives } from '../../type/directives';\nexport function unknownDirectiveMessage(directiveName) {\n  return \"Unknown directive \\\"\".concat(directiveName, \"\\\".\");\n}\nexport function misplacedDirectiveMessage(directiveName, location) {\n  return \"Directive \\\"\".concat(directiveName, \"\\\" may not be used on \").concat(location, \".\");\n}\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\n\nexport function KnownDirectives(context) {\n  var locationsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n  try {\n    for (var _iterator = definedDirectives[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var directive = _step.value;\n      locationsMap[directive.name] = directive.locations;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n  var astDefinitions = context.getDocument().definitions;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n  try {\n    for (var _iterator2 = astDefinitions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var def = _step2.value;\n      if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n        locationsMap[def.name.value] = def.locations.map(function (name) {\n          return name.value;\n        });\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n  return {\n    Directive: function Directive(node, key, parent, path, ancestors) {\n      var name = node.name.value;\n      var locations = locationsMap[name];\n      if (!locations) {\n        context.reportError(new GraphQLError(unknownDirectiveMessage(name), [node]));\n        return;\n      }\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n      if (candidateLocation && locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new GraphQLError(misplacedDirectiveMessage(name, candidateLocation), [node]));\n      }\n    }\n  };\n}\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n  if (!Array.isArray(appliedTo)) {\n    switch (appliedTo.kind) {\n      case Kind.OPERATION_DEFINITION:\n        switch (appliedTo.operation) {\n          case 'query':\n            return DirectiveLocation.QUERY;\n          case 'mutation':\n            return DirectiveLocation.MUTATION;\n          case 'subscription':\n            return DirectiveLocation.SUBSCRIPTION;\n        }\n        break;\n      case Kind.FIELD:\n        return DirectiveLocation.FIELD;\n      case Kind.FRAGMENT_SPREAD:\n        return DirectiveLocation.FRAGMENT_SPREAD;\n      case Kind.INLINE_FRAGMENT:\n        return DirectiveLocation.INLINE_FRAGMENT;\n      case Kind.FRAGMENT_DEFINITION:\n        return DirectiveLocation.FRAGMENT_DEFINITION;\n      case Kind.VARIABLE_DEFINITION:\n        return DirectiveLocation.VARIABLE_DEFINITION;\n      case Kind.SCHEMA_DEFINITION:\n      case Kind.SCHEMA_EXTENSION:\n        return DirectiveLocation.SCHEMA;\n      case Kind.SCALAR_TYPE_DEFINITION:\n      case Kind.SCALAR_TYPE_EXTENSION:\n        return DirectiveLocation.SCALAR;\n      case Kind.OBJECT_TYPE_DEFINITION:\n      case Kind.OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.OBJECT;\n      case Kind.FIELD_DEFINITION:\n        return DirectiveLocation.FIELD_DEFINITION;\n      case Kind.INTERFACE_TYPE_DEFINITION:\n      case Kind.INTERFACE_TYPE_EXTENSION:\n        return DirectiveLocation.INTERFACE;\n      case Kind.UNION_TYPE_DEFINITION:\n      case Kind.UNION_TYPE_EXTENSION:\n        return DirectiveLocation.UNION;\n      case Kind.ENUM_TYPE_DEFINITION:\n      case Kind.ENUM_TYPE_EXTENSION:\n        return DirectiveLocation.ENUM;\n      case Kind.ENUM_VALUE_DEFINITION:\n        return DirectiveLocation.ENUM_VALUE;\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n      case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.INPUT_OBJECT;\n      case Kind.INPUT_VALUE_DEFINITION:\n        var parentNode = ancestors[ancestors.length - 3];\n        return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? DirectiveLocation.INPUT_FIELD_DEFINITION : DirectiveLocation.ARGUMENT_DEFINITION;\n    }\n  }\n}","map":{"version":3,"names":["GraphQLError","Kind","DirectiveLocation","specifiedDirectives","unknownDirectiveMessage","directiveName","concat","misplacedDirectiveMessage","location","KnownDirectives","context","locationsMap","Object","create","schema","getSchema","definedDirectives","getDirectives","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","directive","value","name","locations","err","return","astDefinitions","getDocument","definitions","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","def","kind","DIRECTIVE_DEFINITION","map","Directive","node","key","parent","path","ancestors","reportError","candidateLocation","getDirectiveLocationForASTPath","indexOf","appliedTo","length","Array","isArray","OPERATION_DEFINITION","operation","QUERY","MUTATION","SUBSCRIPTION","FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE_DEFINITION","SCHEMA_DEFINITION","SCHEMA_EXTENSION","SCHEMA","SCALAR_TYPE_DEFINITION","SCALAR_TYPE_EXTENSION","SCALAR","OBJECT_TYPE_DEFINITION","OBJECT_TYPE_EXTENSION","OBJECT","FIELD_DEFINITION","INTERFACE_TYPE_DEFINITION","INTERFACE_TYPE_EXTENSION","INTERFACE","UNION_TYPE_DEFINITION","UNION_TYPE_EXTENSION","UNION","ENUM_TYPE_DEFINITION","ENUM_TYPE_EXTENSION","ENUM","ENUM_VALUE_DEFINITION","ENUM_VALUE","INPUT_OBJECT_TYPE_DEFINITION","INPUT_OBJECT_TYPE_EXTENSION","INPUT_OBJECT","INPUT_VALUE_DEFINITION","parentNode","INPUT_FIELD_DEFINITION","ARGUMENT_DEFINITION"],"sources":["/Users/richa/Desktop/Projects/demo-project/store/bookstore-v2/node_modules/graphql/validation/rules/KnownDirectives.mjs"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { DirectiveLocation } from '../../language/directiveLocation';\nimport { specifiedDirectives } from '../../type/directives';\nexport function unknownDirectiveMessage(directiveName) {\n  return \"Unknown directive \\\"\".concat(directiveName, \"\\\".\");\n}\nexport function misplacedDirectiveMessage(directiveName, location) {\n  return \"Directive \\\"\".concat(directiveName, \"\\\" may not be used on \").concat(location, \".\");\n}\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\n\nexport function KnownDirectives(context) {\n  var locationsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = definedDirectives[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var directive = _step.value;\n      locationsMap[directive.name] = directive.locations;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = astDefinitions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var def = _step2.value;\n\n      if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n        locationsMap[def.name.value] = def.locations.map(function (name) {\n          return name.value;\n        });\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return {\n    Directive: function Directive(node, key, parent, path, ancestors) {\n      var name = node.name.value;\n      var locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(new GraphQLError(unknownDirectiveMessage(name), [node]));\n        return;\n      }\n\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new GraphQLError(misplacedDirectiveMessage(name, candidateLocation), [node]));\n      }\n    }\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n\n  if (!Array.isArray(appliedTo)) {\n    switch (appliedTo.kind) {\n      case Kind.OPERATION_DEFINITION:\n        switch (appliedTo.operation) {\n          case 'query':\n            return DirectiveLocation.QUERY;\n\n          case 'mutation':\n            return DirectiveLocation.MUTATION;\n\n          case 'subscription':\n            return DirectiveLocation.SUBSCRIPTION;\n        }\n\n        break;\n\n      case Kind.FIELD:\n        return DirectiveLocation.FIELD;\n\n      case Kind.FRAGMENT_SPREAD:\n        return DirectiveLocation.FRAGMENT_SPREAD;\n\n      case Kind.INLINE_FRAGMENT:\n        return DirectiveLocation.INLINE_FRAGMENT;\n\n      case Kind.FRAGMENT_DEFINITION:\n        return DirectiveLocation.FRAGMENT_DEFINITION;\n\n      case Kind.VARIABLE_DEFINITION:\n        return DirectiveLocation.VARIABLE_DEFINITION;\n\n      case Kind.SCHEMA_DEFINITION:\n      case Kind.SCHEMA_EXTENSION:\n        return DirectiveLocation.SCHEMA;\n\n      case Kind.SCALAR_TYPE_DEFINITION:\n      case Kind.SCALAR_TYPE_EXTENSION:\n        return DirectiveLocation.SCALAR;\n\n      case Kind.OBJECT_TYPE_DEFINITION:\n      case Kind.OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.OBJECT;\n\n      case Kind.FIELD_DEFINITION:\n        return DirectiveLocation.FIELD_DEFINITION;\n\n      case Kind.INTERFACE_TYPE_DEFINITION:\n      case Kind.INTERFACE_TYPE_EXTENSION:\n        return DirectiveLocation.INTERFACE;\n\n      case Kind.UNION_TYPE_DEFINITION:\n      case Kind.UNION_TYPE_EXTENSION:\n        return DirectiveLocation.UNION;\n\n      case Kind.ENUM_TYPE_DEFINITION:\n      case Kind.ENUM_TYPE_EXTENSION:\n        return DirectiveLocation.ENUM;\n\n      case Kind.ENUM_VALUE_DEFINITION:\n        return DirectiveLocation.ENUM_VALUE;\n\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n      case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.INPUT_OBJECT;\n\n      case Kind.INPUT_VALUE_DEFINITION:\n        var parentNode = ancestors[ancestors.length - 3];\n        return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? DirectiveLocation.INPUT_FIELD_DEFINITION : DirectiveLocation.ARGUMENT_DEFINITION;\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}