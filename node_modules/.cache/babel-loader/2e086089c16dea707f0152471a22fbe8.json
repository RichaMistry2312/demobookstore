{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __asyncValues = this && this.__asyncValues || function (o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n    i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n  return ar;\n};\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport * as idb from 'idb';\nimport { ModelPredicateCreator, ModelSortPredicateCreator } from '../../predicates';\nimport { isPredicateObj, OpType, QueryOne } from '../../types';\nimport { exhaustiveCheck, getIndex, getIndexFromAssociation, isModelConstructor, isPrivateMode, traverseModel, validatePredicate, sortCompareFunction } from '../../util';\nvar logger = new Logger('DataStore');\nvar DB_NAME = 'amplify-datastore';\nvar IndexedDBAdapter = /** @class */function () {\n  function IndexedDBAdapter() {\n    this.dbName = DB_NAME;\n  }\n  IndexedDBAdapter.prototype.checkPrivate = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var isPrivate;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, isPrivateMode().then(function (isPrivate) {\n              return isPrivate;\n            })];\n          case 1:\n            isPrivate = _a.sent();\n            if (isPrivate) {\n              logger.error(\"IndexedDB not supported in this browser's private mode\");\n              return [2 /*return*/, Promise.reject(\"IndexedDB not supported in this browser's private mode\")];\n            } else {\n              return [2 /*return*/, Promise.resolve()];\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.getStorenameForModel = function (modelConstructor) {\n    var namespace = this.namespaceResolver(modelConstructor);\n    var modelName = modelConstructor.name;\n    return this.getStorename(namespace, modelName);\n  };\n  IndexedDBAdapter.prototype.getStorename = function (namespace, modelName) {\n    var storeName = namespace + \"_\" + modelName;\n    return storeName;\n  };\n  IndexedDBAdapter.prototype.setUp = function (theSchema, namespaceResolver, modelInstanceCreator, getModelConstructorByModelName, sessionId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var VERSION, _a, error_1;\n      var _this = this;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, this.checkPrivate()];\n          case 1:\n            _b.sent();\n            if (!!this.initPromise) return [3 /*break*/, 2];\n            this.initPromise = new Promise(function (res, rej) {\n              _this.resolve = res;\n              _this.reject = rej;\n            });\n            return [3 /*break*/, 4];\n          case 2:\n            return [4 /*yield*/, this.initPromise];\n          case 3:\n            _b.sent();\n            _b.label = 4;\n          case 4:\n            if (sessionId) {\n              this.dbName = DB_NAME + \"-\" + sessionId;\n            }\n            this.schema = theSchema;\n            this.namespaceResolver = namespaceResolver;\n            this.modelInstanceCreator = modelInstanceCreator;\n            this.getModelConstructorByModelName = getModelConstructorByModelName;\n            _b.label = 5;\n          case 5:\n            _b.trys.push([5, 8,, 9]);\n            if (!!this.db) return [3 /*break*/, 7];\n            VERSION = 2;\n            _a = this;\n            return [4 /*yield*/, idb.openDB(this.dbName, VERSION, {\n              upgrade: function (db, oldVersion, newVersion, txn) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  var _a, _b, storeName, origStore, tmpName, newStore, cursor, count, e_1_1, error_2;\n                  var e_1, _c;\n                  var _this = this;\n                  return __generator(this, function (_d) {\n                    switch (_d.label) {\n                      case 0:\n                        if (oldVersion === 0) {\n                          Object.keys(theSchema.namespaces).forEach(function (namespaceName) {\n                            var namespace = theSchema.namespaces[namespaceName];\n                            Object.keys(namespace.models).forEach(function (modelName) {\n                              var storeName = _this.getStorename(namespaceName, modelName);\n                              var store = db.createObjectStore(storeName, {\n                                autoIncrement: true\n                              });\n                              var indexes = _this.schema.namespaces[namespaceName].relationships[modelName].indexes;\n                              indexes.forEach(function (index) {\n                                return store.createIndex(index, index);\n                              });\n                              store.createIndex('byId', 'id', {\n                                unique: true\n                              });\n                            });\n                          });\n                          return [2 /*return*/];\n                        }\n                        if (!(oldVersion === 1 && newVersion === 2)) return [3 /*break*/, 16];\n                        _d.label = 1;\n                      case 1:\n                        _d.trys.push([1, 14,, 15]);\n                        _d.label = 2;\n                      case 2:\n                        _d.trys.push([2, 11, 12, 13]);\n                        _a = __values(txn.objectStoreNames), _b = _a.next();\n                        _d.label = 3;\n                      case 3:\n                        if (!!_b.done) return [3 /*break*/, 10];\n                        storeName = _b.value;\n                        origStore = txn.objectStore(storeName);\n                        tmpName = \"tmp_\" + storeName;\n                        origStore.name = tmpName;\n                        newStore = db.createObjectStore(storeName, {\n                          keyPath: undefined,\n                          autoIncrement: true\n                        });\n                        newStore.createIndex('byId', 'id', {\n                          unique: true\n                        });\n                        return [4 /*yield*/, origStore.openCursor()];\n                      case 4:\n                        cursor = _d.sent();\n                        count = 0;\n                        _d.label = 5;\n                      case 5:\n                        if (!(cursor && cursor.value)) return [3 /*break*/, 8];\n                        // we don't pass key, since they are all new entries in the new store\n                        return [4 /*yield*/, newStore.put(cursor.value)];\n                      case 6:\n                        // we don't pass key, since they are all new entries in the new store\n                        _d.sent();\n                        return [4 /*yield*/, cursor.continue()];\n                      case 7:\n                        cursor = _d.sent();\n                        count++;\n                        return [3 /*break*/, 5];\n                      case 8:\n                        // delete original\n                        db.deleteObjectStore(tmpName);\n                        logger.debug(count + \" \" + storeName + \" records migrated\");\n                        _d.label = 9;\n                      case 9:\n                        _b = _a.next();\n                        return [3 /*break*/, 3];\n                      case 10:\n                        return [3 /*break*/, 13];\n                      case 11:\n                        e_1_1 = _d.sent();\n                        e_1 = {\n                          error: e_1_1\n                        };\n                        return [3 /*break*/, 13];\n                      case 12:\n                        try {\n                          if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        } finally {\n                          if (e_1) throw e_1.error;\n                        }\n                        return [7 /*endfinally*/];\n                      case 13:\n                        return [3 /*break*/, 15];\n                      case 14:\n                        error_2 = _d.sent();\n                        logger.error('Error migrating IndexedDB data', error_2);\n                        txn.abort();\n                        throw error_2;\n                      case 15:\n                        return [2 /*return*/];\n                      case 16:\n                        return [2 /*return*/];\n                    }\n                  });\n                });\n              }\n            })];\n          case 6:\n            _a.db = _b.sent();\n            this.resolve();\n            _b.label = 7;\n          case 7:\n            return [3 /*break*/, 9];\n          case 8:\n            error_1 = _b.sent();\n            this.reject(error_1);\n            return [3 /*break*/, 9];\n          case 9:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype._get = function (storeOrStoreName, id) {\n    return __awaiter(this, void 0, void 0, function () {\n      var index, storeName, store, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (typeof storeOrStoreName === 'string') {\n              storeName = storeOrStoreName;\n              index = this.db.transaction(storeName, 'readonly').store.index('byId');\n            } else {\n              store = storeOrStoreName;\n              index = store.index('byId');\n            }\n            return [4 /*yield*/, index.get(id)];\n          case 1:\n            result = _a.sent();\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.save = function (model, condition) {\n    var e_2, _a;\n    return __awaiter(this, void 0, void 0, function () {\n      var modelConstructor, storeName, connectedModels, namespaceName, set, connectionStoreNames, tx, store, fromDB, predicates, predicateObjs, type, isValid, msg, result, connectionStoreNames_1, connectionStoreNames_1_1, resItem, storeName_1, item, instance, store_1, id, fromDB_1, opType, key, e_2_1;\n      var _this = this;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, this.checkPrivate()];\n          case 1:\n            _b.sent();\n            modelConstructor = Object.getPrototypeOf(model).constructor;\n            storeName = this.getStorenameForModel(modelConstructor);\n            connectedModels = traverseModel(modelConstructor.name, model, this.schema.namespaces[this.namespaceResolver(modelConstructor)], this.modelInstanceCreator, this.getModelConstructorByModelName);\n            namespaceName = this.namespaceResolver(modelConstructor);\n            set = new Set();\n            connectionStoreNames = Object.values(connectedModels).map(function (_a) {\n              var modelName = _a.modelName,\n                item = _a.item,\n                instance = _a.instance;\n              var storeName = _this.getStorename(namespaceName, modelName);\n              set.add(storeName);\n              return {\n                storeName: storeName,\n                item: item,\n                instance: instance\n              };\n            });\n            tx = this.db.transaction(__spread([storeName], Array.from(set.values())), 'readwrite');\n            store = tx.objectStore(storeName);\n            return [4 /*yield*/, this._get(store, model.id)];\n          case 2:\n            fromDB = _b.sent();\n            if (condition && fromDB) {\n              predicates = ModelPredicateCreator.getPredicates(condition);\n              predicateObjs = predicates.predicates, type = predicates.type;\n              isValid = validatePredicate(fromDB, type, predicateObjs);\n              if (!isValid) {\n                msg = 'Conditional update failed';\n                logger.error(msg, {\n                  model: fromDB,\n                  condition: predicateObjs\n                });\n                throw new Error(msg);\n              }\n            }\n            result = [];\n            _b.label = 3;\n          case 3:\n            _b.trys.push([3, 11, 12, 17]);\n            connectionStoreNames_1 = __asyncValues(connectionStoreNames);\n            _b.label = 4;\n          case 4:\n            return [4 /*yield*/, connectionStoreNames_1.next()];\n          case 5:\n            if (!(connectionStoreNames_1_1 = _b.sent(), !connectionStoreNames_1_1.done)) return [3 /*break*/, 10];\n            resItem = connectionStoreNames_1_1.value;\n            storeName_1 = resItem.storeName, item = resItem.item, instance = resItem.instance;\n            store_1 = tx.objectStore(storeName_1);\n            id = item.id;\n            return [4 /*yield*/, this._get(store_1, id)];\n          case 6:\n            fromDB_1 = _b.sent();\n            opType = fromDB_1 === undefined ? OpType.INSERT : OpType.UPDATE;\n            if (!(id === model.id || opType === OpType.INSERT)) return [3 /*break*/, 9];\n            return [4 /*yield*/, store_1.index('byId').getKey(item.id)];\n          case 7:\n            key = _b.sent();\n            return [4 /*yield*/, store_1.put(item, key)];\n          case 8:\n            _b.sent();\n            result.push([instance, opType]);\n            _b.label = 9;\n          case 9:\n            return [3 /*break*/, 4];\n          case 10:\n            return [3 /*break*/, 17];\n          case 11:\n            e_2_1 = _b.sent();\n            e_2 = {\n              error: e_2_1\n            };\n            return [3 /*break*/, 17];\n          case 12:\n            _b.trys.push([12,, 15, 16]);\n            if (!(connectionStoreNames_1_1 && !connectionStoreNames_1_1.done && (_a = connectionStoreNames_1.return))) return [3 /*break*/, 14];\n            return [4 /*yield*/, _a.call(connectionStoreNames_1)];\n          case 13:\n            _b.sent();\n            _b.label = 14;\n          case 14:\n            return [3 /*break*/, 16];\n          case 15:\n            if (e_2) throw e_2.error;\n            return [7 /*endfinally*/];\n          case 16:\n            return [7 /*endfinally*/];\n          case 17:\n            return [4 /*yield*/, tx.done];\n          case 18:\n            _b.sent();\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.load = function (namespaceName, srcModelName, records) {\n    var records_1, records_1_1, records_2, records_2_1;\n    var e_3, _a, e_4, _b, e_5, _c;\n    return __awaiter(this, void 0, void 0, function () {\n      var namespace, relations, connectionStoreNames, modelConstructor, tx, relations_1, relations_1_1, relation, fieldName, modelName, targetName, storeName, store, modelConstructor_1, _d, recordItem, connectionRecord, e_4_1, recordItem, connectionRecord, e_5_1, e_3_1;\n      var _this = this;\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            namespace = this.schema.namespaces[namespaceName];\n            relations = namespace.relationships[srcModelName].relationTypes;\n            connectionStoreNames = relations.map(function (_a) {\n              var modelName = _a.modelName;\n              return _this.getStorename(namespaceName, modelName);\n            });\n            modelConstructor = this.getModelConstructorByModelName(namespaceName, srcModelName);\n            if (connectionStoreNames.length === 0) {\n              return [2 /*return*/, records.map(function (record) {\n                return _this.modelInstanceCreator(modelConstructor, record);\n              })];\n            }\n            tx = this.db.transaction(__spread(connectionStoreNames), 'readonly');\n            _e.label = 1;\n          case 1:\n            _e.trys.push([1, 34, 35, 40]);\n            relations_1 = __asyncValues(relations);\n            _e.label = 2;\n          case 2:\n            return [4 /*yield*/, relations_1.next()];\n          case 3:\n            if (!(relations_1_1 = _e.sent(), !relations_1_1.done)) return [3 /*break*/, 33];\n            relation = relations_1_1.value;\n            fieldName = relation.fieldName, modelName = relation.modelName, targetName = relation.targetName;\n            storeName = this.getStorename(namespaceName, modelName);\n            store = tx.objectStore(storeName);\n            modelConstructor_1 = this.getModelConstructorByModelName(namespaceName, modelName);\n            _d = relation.relationType;\n            switch (_d) {\n              case 'HAS_ONE':\n                return [3 /*break*/, 4];\n              case 'BELONGS_TO':\n                return [3 /*break*/, 17];\n              case 'HAS_MANY':\n                return [3 /*break*/, 30];\n            }\n            return [3 /*break*/, 31];\n          case 4:\n            _e.trys.push([4, 10, 11, 16]);\n            records_1 = __asyncValues(records);\n            _e.label = 5;\n          case 5:\n            return [4 /*yield*/, records_1.next()];\n          case 6:\n            if (!(records_1_1 = _e.sent(), !records_1_1.done)) return [3 /*break*/, 9];\n            recordItem = records_1_1.value;\n            if (!recordItem[fieldName]) return [3 /*break*/, 8];\n            return [4 /*yield*/, this._get(store, recordItem[fieldName])];\n          case 7:\n            connectionRecord = _e.sent();\n            recordItem[fieldName] = connectionRecord && this.modelInstanceCreator(modelConstructor_1, connectionRecord);\n            _e.label = 8;\n          case 8:\n            return [3 /*break*/, 5];\n          case 9:\n            return [3 /*break*/, 16];\n          case 10:\n            e_4_1 = _e.sent();\n            e_4 = {\n              error: e_4_1\n            };\n            return [3 /*break*/, 16];\n          case 11:\n            _e.trys.push([11,, 14, 15]);\n            if (!(records_1_1 && !records_1_1.done && (_b = records_1.return))) return [3 /*break*/, 13];\n            return [4 /*yield*/, _b.call(records_1)];\n          case 12:\n            _e.sent();\n            _e.label = 13;\n          case 13:\n            return [3 /*break*/, 15];\n          case 14:\n            if (e_4) throw e_4.error;\n            return [7 /*endfinally*/];\n          case 15:\n            return [7 /*endfinally*/];\n          case 16:\n            return [3 /*break*/, 32];\n          case 17:\n            _e.trys.push([17, 23, 24, 29]);\n            records_2 = __asyncValues(records);\n            _e.label = 18;\n          case 18:\n            return [4 /*yield*/, records_2.next()];\n          case 19:\n            if (!(records_2_1 = _e.sent(), !records_2_1.done)) return [3 /*break*/, 22];\n            recordItem = records_2_1.value;\n            if (!recordItem[targetName]) return [3 /*break*/, 21];\n            return [4 /*yield*/, this._get(store, recordItem[targetName])];\n          case 20:\n            connectionRecord = _e.sent();\n            recordItem[fieldName] = connectionRecord && this.modelInstanceCreator(modelConstructor_1, connectionRecord);\n            delete recordItem[targetName];\n            _e.label = 21;\n          case 21:\n            return [3 /*break*/, 18];\n          case 22:\n            return [3 /*break*/, 29];\n          case 23:\n            e_5_1 = _e.sent();\n            e_5 = {\n              error: e_5_1\n            };\n            return [3 /*break*/, 29];\n          case 24:\n            _e.trys.push([24,, 27, 28]);\n            if (!(records_2_1 && !records_2_1.done && (_c = records_2.return))) return [3 /*break*/, 26];\n            return [4 /*yield*/, _c.call(records_2)];\n          case 25:\n            _e.sent();\n            _e.label = 26;\n          case 26:\n            return [3 /*break*/, 28];\n          case 27:\n            if (e_5) throw e_5.error;\n            return [7 /*endfinally*/];\n          case 28:\n            return [7 /*endfinally*/];\n          case 29:\n            return [3 /*break*/, 32];\n          case 30:\n            // TODO: Lazy loading\n            return [3 /*break*/, 32];\n          case 31:\n            exhaustiveCheck(relation.relationType);\n            return [3 /*break*/, 32];\n          case 32:\n            return [3 /*break*/, 2];\n          case 33:\n            return [3 /*break*/, 40];\n          case 34:\n            e_3_1 = _e.sent();\n            e_3 = {\n              error: e_3_1\n            };\n            return [3 /*break*/, 40];\n          case 35:\n            _e.trys.push([35,, 38, 39]);\n            if (!(relations_1_1 && !relations_1_1.done && (_a = relations_1.return))) return [3 /*break*/, 37];\n            return [4 /*yield*/, _a.call(relations_1)];\n          case 36:\n            _e.sent();\n            _e.label = 37;\n          case 37:\n            return [3 /*break*/, 39];\n          case 38:\n            if (e_3) throw e_3.error;\n            return [7 /*endfinally*/];\n          case 39:\n            return [7 /*endfinally*/];\n          case 40:\n            return [2 /*return*/, records.map(function (record) {\n              return _this.modelInstanceCreator(modelConstructor, record);\n            })];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.query = function (modelConstructor, predicate, pagination) {\n    return __awaiter(this, void 0, void 0, function () {\n      var storeName, namespaceName, predicates, queryById, hasSort, hasPagination, records;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.checkPrivate()];\n          case 1:\n            _a.sent();\n            storeName = this.getStorenameForModel(modelConstructor);\n            namespaceName = this.namespaceResolver(modelConstructor);\n            predicates = predicate && ModelPredicateCreator.getPredicates(predicate);\n            queryById = predicates && this.idFromPredicate(predicates);\n            hasSort = pagination && pagination.sort;\n            hasPagination = pagination && pagination.limit;\n            return [4 /*yield*/, function () {\n              return __awaiter(_this, void 0, void 0, function () {\n                var record, filtered, all;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (!queryById) return [3 /*break*/, 2];\n                      return [4 /*yield*/, this.getById(storeName, queryById)];\n                    case 1:\n                      record = _a.sent();\n                      return [2 /*return*/, record ? [record] : []];\n                    case 2:\n                      if (!predicates) return [3 /*break*/, 4];\n                      return [4 /*yield*/, this.filterOnPredicate(storeName, predicates)];\n                    case 3:\n                      filtered = _a.sent();\n                      return [2 /*return*/, this.inMemoryPagination(filtered, pagination)];\n                    case 4:\n                      if (!hasSort) return [3 /*break*/, 6];\n                      return [4 /*yield*/, this.getAll(storeName)];\n                    case 5:\n                      all = _a.sent();\n                      return [2 /*return*/, this.inMemoryPagination(all, pagination)];\n                    case 6:\n                      if (hasPagination) {\n                        return [2 /*return*/, this.enginePagination(storeName, pagination)];\n                      }\n                      return [2 /*return*/, this.getAll(storeName)];\n                  }\n                });\n              });\n            }()];\n          case 2:\n            records = _a.sent();\n            return [4 /*yield*/, this.load(namespaceName, modelConstructor.name, records)];\n          case 3:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.getById = function (storeName, id) {\n    return __awaiter(this, void 0, void 0, function () {\n      var record;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._get(storeName, id)];\n          case 1:\n            record = _a.sent();\n            return [2 /*return*/, record];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.getAll = function (storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.db.getAll(storeName)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.idFromPredicate = function (predicates) {\n    var predicateObjs = predicates.predicates;\n    var idPredicate = predicateObjs.length === 1 && predicateObjs.find(function (p) {\n      return isPredicateObj(p) && p.field === 'id' && p.operator === 'eq';\n    });\n    return idPredicate && idPredicate.operand;\n  };\n  IndexedDBAdapter.prototype.filterOnPredicate = function (storeName, predicates) {\n    return __awaiter(this, void 0, void 0, function () {\n      var predicateObjs, type, all, filtered;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            predicateObjs = predicates.predicates, type = predicates.type;\n            return [4 /*yield*/, this.getAll(storeName)];\n          case 1:\n            all = _a.sent();\n            filtered = predicateObjs ? all.filter(function (m) {\n              return validatePredicate(m, type, predicateObjs);\n            }) : all;\n            return [2 /*return*/, filtered];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.inMemoryPagination = function (records, pagination) {\n    if (pagination && records.length > 1) {\n      if (pagination.sort) {\n        var sortPredicates = ModelSortPredicateCreator.getPredicates(pagination.sort);\n        if (sortPredicates.length) {\n          var compareFn = sortCompareFunction(sortPredicates);\n          records.sort(compareFn);\n        }\n      }\n      var _a = pagination.page,\n        page = _a === void 0 ? 0 : _a,\n        _b = pagination.limit,\n        limit = _b === void 0 ? 0 : _b;\n      var start = Math.max(0, page * limit) || 0;\n      var end = limit > 0 ? start + limit : records.length;\n      return records.slice(start, end);\n    }\n    return records;\n  };\n  IndexedDBAdapter.prototype.enginePagination = function (storeName, pagination) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, _a, page, _b, limit, initialRecord, cursor, pageResults, hasLimit;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (!pagination) return [3 /*break*/, 7];\n            _a = pagination.page, page = _a === void 0 ? 0 : _a, _b = pagination.limit, limit = _b === void 0 ? 0 : _b;\n            initialRecord = Math.max(0, page * limit) || 0;\n            return [4 /*yield*/, this.db.transaction(storeName).objectStore(storeName).openCursor()];\n          case 1:\n            cursor = _c.sent();\n            if (!(cursor && initialRecord > 0)) return [3 /*break*/, 3];\n            return [4 /*yield*/, cursor.advance(initialRecord)];\n          case 2:\n            _c.sent();\n            _c.label = 3;\n          case 3:\n            pageResults = [];\n            hasLimit = typeof limit === 'number' && limit > 0;\n            _c.label = 4;\n          case 4:\n            if (!(cursor && cursor.value)) return [3 /*break*/, 6];\n            pageResults.push(cursor.value);\n            if (hasLimit && pageResults.length === limit) {\n              return [3 /*break*/, 6];\n            }\n            return [4 /*yield*/, cursor.continue()];\n          case 5:\n            cursor = _c.sent();\n            return [3 /*break*/, 4];\n          case 6:\n            result = pageResults;\n            return [3 /*break*/, 9];\n          case 7:\n            return [4 /*yield*/, this.db.getAll(storeName)];\n          case 8:\n            result = _c.sent();\n            _c.label = 9;\n          case 9:\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.queryOne = function (modelConstructor, firstOrLast) {\n    if (firstOrLast === void 0) {\n      firstOrLast = QueryOne.FIRST;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var storeName, cursor, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.checkPrivate()];\n          case 1:\n            _a.sent();\n            storeName = this.getStorenameForModel(modelConstructor);\n            return [4 /*yield*/, this.db.transaction([storeName], 'readonly').objectStore(storeName).openCursor(undefined, firstOrLast === QueryOne.FIRST ? 'next' : 'prev')];\n          case 2:\n            cursor = _a.sent();\n            result = cursor ? cursor.value : undefined;\n            return [2 /*return*/, result && this.modelInstanceCreator(modelConstructor, result)];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.delete = function (modelOrModelConstructor, condition) {\n    return __awaiter(this, void 0, void 0, function () {\n      var deleteQueue, modelConstructor, nameSpace, storeName, models, relations, deletedModels, deletedModels, model, modelConstructor, nameSpace, storeName, tx, store, fromDB, msg, predicates, predicateObjs, type, isValid, msg, relations, relations, deletedModels;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.checkPrivate()];\n          case 1:\n            _a.sent();\n            deleteQueue = [];\n            if (!isModelConstructor(modelOrModelConstructor)) return [3 /*break*/, 9];\n            modelConstructor = modelOrModelConstructor;\n            nameSpace = this.namespaceResolver(modelConstructor);\n            storeName = this.getStorenameForModel(modelConstructor);\n            return [4 /*yield*/, this.query(modelConstructor, condition)];\n          case 2:\n            models = _a.sent();\n            relations = this.schema.namespaces[nameSpace].relationships[modelConstructor.name].relationTypes;\n            if (!(condition !== undefined)) return [3 /*break*/, 5];\n            return [4 /*yield*/, this.deleteTraverse(relations, models, modelConstructor.name, nameSpace, deleteQueue)];\n          case 3:\n            _a.sent();\n            return [4 /*yield*/, this.deleteItem(deleteQueue)];\n          case 4:\n            _a.sent();\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2 /*return*/, [models, deletedModels]];\n          case 5:\n            return [4 /*yield*/, this.deleteTraverse(relations, models, modelConstructor.name, nameSpace, deleteQueue)];\n          case 6:\n            _a.sent();\n            // Delete all\n            return [4 /*yield*/, this.db.transaction([storeName], 'readwrite').objectStore(storeName).clear()];\n          case 7:\n            // Delete all\n            _a.sent();\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2 /*return*/, [models, deletedModels]];\n          case 8:\n            return [3 /*break*/, 17];\n          case 9:\n            model = modelOrModelConstructor;\n            modelConstructor = Object.getPrototypeOf(model).constructor;\n            nameSpace = this.namespaceResolver(modelConstructor);\n            storeName = this.getStorenameForModel(modelConstructor);\n            if (!condition) return [3 /*break*/, 13];\n            tx = this.db.transaction([storeName], 'readwrite');\n            store = tx.objectStore(storeName);\n            return [4 /*yield*/, this._get(store, model.id)];\n          case 10:\n            fromDB = _a.sent();\n            if (fromDB === undefined) {\n              msg = 'Model instance not found in storage';\n              logger.warn(msg, {\n                model: model\n              });\n              return [2 /*return*/, [[model], []]];\n            }\n            predicates = ModelPredicateCreator.getPredicates(condition);\n            predicateObjs = predicates.predicates, type = predicates.type;\n            isValid = validatePredicate(fromDB, type, predicateObjs);\n            if (!isValid) {\n              msg = 'Conditional update failed';\n              logger.error(msg, {\n                model: fromDB,\n                condition: predicateObjs\n              });\n              throw new Error(msg);\n            }\n            return [4 /*yield*/, tx.done];\n          case 11:\n            _a.sent();\n            relations = this.schema.namespaces[nameSpace].relationships[modelConstructor.name].relationTypes;\n            return [4 /*yield*/, this.deleteTraverse(relations, [model], modelConstructor.name, nameSpace, deleteQueue)];\n          case 12:\n            _a.sent();\n            return [3 /*break*/, 15];\n          case 13:\n            relations = this.schema.namespaces[nameSpace].relationships[modelConstructor.name].relationTypes;\n            return [4 /*yield*/, this.deleteTraverse(relations, [model], modelConstructor.name, nameSpace, deleteQueue)];\n          case 14:\n            _a.sent();\n            _a.label = 15;\n          case 15:\n            return [4 /*yield*/, this.deleteItem(deleteQueue)];\n          case 16:\n            _a.sent();\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2 /*return*/, [[model], deletedModels]];\n          case 17:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.deleteItem = function (deleteQueue) {\n    var deleteQueue_1, deleteQueue_1_1;\n    var e_6, _a, e_7, _b;\n    return __awaiter(this, void 0, void 0, function () {\n      var connectionStoreNames, tx, deleteItem, storeName, items, store, items_1, items_1_1, item, key, e_7_1, e_6_1;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            connectionStoreNames = deleteQueue.map(function (_a) {\n              var storeName = _a.storeName;\n              return storeName;\n            });\n            tx = this.db.transaction(__spread(connectionStoreNames), 'readwrite');\n            _c.label = 1;\n          case 1:\n            _c.trys.push([1, 22, 23, 28]);\n            deleteQueue_1 = __asyncValues(deleteQueue);\n            _c.label = 2;\n          case 2:\n            return [4 /*yield*/, deleteQueue_1.next()];\n          case 3:\n            if (!(deleteQueue_1_1 = _c.sent(), !deleteQueue_1_1.done)) return [3 /*break*/, 21];\n            deleteItem = deleteQueue_1_1.value;\n            storeName = deleteItem.storeName, items = deleteItem.items;\n            store = tx.objectStore(storeName);\n            _c.label = 4;\n          case 4:\n            _c.trys.push([4, 14, 15, 20]);\n            items_1 = __asyncValues(items);\n            _c.label = 5;\n          case 5:\n            return [4 /*yield*/, items_1.next()];\n          case 6:\n            if (!(items_1_1 = _c.sent(), !items_1_1.done)) return [3 /*break*/, 13];\n            item = items_1_1.value;\n            if (!item) return [3 /*break*/, 12];\n            key = void 0;\n            if (!(typeof item === 'object')) return [3 /*break*/, 8];\n            return [4 /*yield*/, store.index('byId').getKey(item['id'])];\n          case 7:\n            key = _c.sent();\n            return [3 /*break*/, 10];\n          case 8:\n            return [4 /*yield*/, store.index('byId').getKey(item.toString())];\n          case 9:\n            key = _c.sent();\n            _c.label = 10;\n          case 10:\n            if (!(key !== undefined)) return [3 /*break*/, 12];\n            return [4 /*yield*/, store.delete(key)];\n          case 11:\n            _c.sent();\n            _c.label = 12;\n          case 12:\n            return [3 /*break*/, 5];\n          case 13:\n            return [3 /*break*/, 20];\n          case 14:\n            e_7_1 = _c.sent();\n            e_7 = {\n              error: e_7_1\n            };\n            return [3 /*break*/, 20];\n          case 15:\n            _c.trys.push([15,, 18, 19]);\n            if (!(items_1_1 && !items_1_1.done && (_b = items_1.return))) return [3 /*break*/, 17];\n            return [4 /*yield*/, _b.call(items_1)];\n          case 16:\n            _c.sent();\n            _c.label = 17;\n          case 17:\n            return [3 /*break*/, 19];\n          case 18:\n            if (e_7) throw e_7.error;\n            return [7 /*endfinally*/];\n          case 19:\n            return [7 /*endfinally*/];\n          case 20:\n            return [3 /*break*/, 2];\n          case 21:\n            return [3 /*break*/, 28];\n          case 22:\n            e_6_1 = _c.sent();\n            e_6 = {\n              error: e_6_1\n            };\n            return [3 /*break*/, 28];\n          case 23:\n            _c.trys.push([23,, 26, 27]);\n            if (!(deleteQueue_1_1 && !deleteQueue_1_1.done && (_a = deleteQueue_1.return))) return [3 /*break*/, 25];\n            return [4 /*yield*/, _a.call(deleteQueue_1)];\n          case 24:\n            _c.sent();\n            _c.label = 25;\n          case 25:\n            return [3 /*break*/, 27];\n          case 26:\n            if (e_6) throw e_6.error;\n            return [7 /*endfinally*/];\n          case 27:\n            return [7 /*endfinally*/];\n          case 28:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.deleteTraverse = function (relations, models, srcModel, nameSpace, deleteQueue) {\n    var relations_2, relations_2_1, models_1, models_1_1, models_2, models_2_1;\n    var e_8, _a, e_9, _b, e_10, _c;\n    return __awaiter(this, void 0, void 0, function () {\n      var rel, relationType, fieldName, modelName, targetName, storeName, index, _d, model, hasOneIndex, hasOneCustomField, value, recordToDelete, e_9_1, model, childrenArray, e_10_1, e_8_1;\n      var _this = this;\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _e.trys.push([0, 35, 36, 41]);\n            relations_2 = __asyncValues(relations);\n            _e.label = 1;\n          case 1:\n            return [4 /*yield*/, relations_2.next()];\n          case 2:\n            if (!(relations_2_1 = _e.sent(), !relations_2_1.done)) return [3 /*break*/, 34];\n            rel = relations_2_1.value;\n            relationType = rel.relationType, fieldName = rel.fieldName, modelName = rel.modelName, targetName = rel.targetName;\n            storeName = this.getStorename(nameSpace, modelName);\n            index = getIndex(this.schema.namespaces[nameSpace].relationships[modelName].relationTypes, srcModel) ||\n            // if we were unable to find an index via relationTypes\n            // i.e. for keyName connections, attempt to find one by the\n            // associatedWith property\n            getIndexFromAssociation(this.schema.namespaces[nameSpace].relationships[modelName].indexes, rel.associatedWith);\n            _d = relationType;\n            switch (_d) {\n              case 'HAS_ONE':\n                return [3 /*break*/, 3];\n              case 'HAS_MANY':\n                return [3 /*break*/, 17];\n              case 'BELONGS_TO':\n                return [3 /*break*/, 31];\n            }\n            return [3 /*break*/, 32];\n          case 3:\n            _e.trys.push([3, 10, 11, 16]);\n            models_1 = __asyncValues(models);\n            _e.label = 4;\n          case 4:\n            return [4 /*yield*/, models_1.next()];\n          case 5:\n            if (!(models_1_1 = _e.sent(), !models_1_1.done)) return [3 /*break*/, 9];\n            model = models_1_1.value;\n            hasOneIndex = index || 'byId';\n            hasOneCustomField = targetName in model;\n            value = hasOneCustomField ? model[targetName] : model.id;\n            return [4 /*yield*/, this.db.transaction(storeName, 'readwrite').objectStore(storeName).index(hasOneIndex).get(value)];\n          case 6:\n            recordToDelete = _e.sent();\n            return [4 /*yield*/, this.deleteTraverse(this.schema.namespaces[nameSpace].relationships[modelName].relationTypes, recordToDelete ? [recordToDelete] : [], modelName, nameSpace, deleteQueue)];\n          case 7:\n            _e.sent();\n            _e.label = 8;\n          case 8:\n            return [3 /*break*/, 4];\n          case 9:\n            return [3 /*break*/, 16];\n          case 10:\n            e_9_1 = _e.sent();\n            e_9 = {\n              error: e_9_1\n            };\n            return [3 /*break*/, 16];\n          case 11:\n            _e.trys.push([11,, 14, 15]);\n            if (!(models_1_1 && !models_1_1.done && (_b = models_1.return))) return [3 /*break*/, 13];\n            return [4 /*yield*/, _b.call(models_1)];\n          case 12:\n            _e.sent();\n            _e.label = 13;\n          case 13:\n            return [3 /*break*/, 15];\n          case 14:\n            if (e_9) throw e_9.error;\n            return [7 /*endfinally*/];\n          case 15:\n            return [7 /*endfinally*/];\n          case 16:\n            return [3 /*break*/, 33];\n          case 17:\n            _e.trys.push([17, 24, 25, 30]);\n            models_2 = __asyncValues(models);\n            _e.label = 18;\n          case 18:\n            return [4 /*yield*/, models_2.next()];\n          case 19:\n            if (!(models_2_1 = _e.sent(), !models_2_1.done)) return [3 /*break*/, 23];\n            model = models_2_1.value;\n            return [4 /*yield*/, this.db.transaction(storeName, 'readwrite').objectStore(storeName).index(index).getAll(model['id'])];\n          case 20:\n            childrenArray = _e.sent();\n            return [4 /*yield*/, this.deleteTraverse(this.schema.namespaces[nameSpace].relationships[modelName].relationTypes, childrenArray, modelName, nameSpace, deleteQueue)];\n          case 21:\n            _e.sent();\n            _e.label = 22;\n          case 22:\n            return [3 /*break*/, 18];\n          case 23:\n            return [3 /*break*/, 30];\n          case 24:\n            e_10_1 = _e.sent();\n            e_10 = {\n              error: e_10_1\n            };\n            return [3 /*break*/, 30];\n          case 25:\n            _e.trys.push([25,, 28, 29]);\n            if (!(models_2_1 && !models_2_1.done && (_c = models_2.return))) return [3 /*break*/, 27];\n            return [4 /*yield*/, _c.call(models_2)];\n          case 26:\n            _e.sent();\n            _e.label = 27;\n          case 27:\n            return [3 /*break*/, 29];\n          case 28:\n            if (e_10) throw e_10.error;\n            return [7 /*endfinally*/];\n          case 29:\n            return [7 /*endfinally*/];\n          case 30:\n            return [3 /*break*/, 33];\n          case 31:\n            // Intentionally blank\n            return [3 /*break*/, 33];\n          case 32:\n            exhaustiveCheck(relationType);\n            return [3 /*break*/, 33];\n          case 33:\n            return [3 /*break*/, 1];\n          case 34:\n            return [3 /*break*/, 41];\n          case 35:\n            e_8_1 = _e.sent();\n            e_8 = {\n              error: e_8_1\n            };\n            return [3 /*break*/, 41];\n          case 36:\n            _e.trys.push([36,, 39, 40]);\n            if (!(relations_2_1 && !relations_2_1.done && (_a = relations_2.return))) return [3 /*break*/, 38];\n            return [4 /*yield*/, _a.call(relations_2)];\n          case 37:\n            _e.sent();\n            _e.label = 38;\n          case 38:\n            return [3 /*break*/, 40];\n          case 39:\n            if (e_8) throw e_8.error;\n            return [7 /*endfinally*/];\n          case 40:\n            return [7 /*endfinally*/];\n          case 41:\n            deleteQueue.push({\n              storeName: this.getStorename(nameSpace, srcModel),\n              items: models.map(function (record) {\n                return _this.modelInstanceCreator(_this.getModelConstructorByModelName(nameSpace, srcModel), record);\n              })\n            });\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.clear = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.checkPrivate()];\n          case 1:\n            _a.sent();\n            this.db.close();\n            return [4 /*yield*/, idb.deleteDB(this.dbName)];\n          case 2:\n            _a.sent();\n            this.db = undefined;\n            this.initPromise = undefined;\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  IndexedDBAdapter.prototype.batchSave = function (modelConstructor, items) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, storeName, txn, store, _loop_1, this_1, items_2, items_2_1, item, e_11_1;\n      var e_11, _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (items.length === 0) {\n              return [2 /*return*/, []];\n            }\n            return [4 /*yield*/, this.checkPrivate()];\n          case 1:\n            _b.sent();\n            result = [];\n            storeName = this.getStorenameForModel(modelConstructor);\n            txn = this.db.transaction(storeName, 'readwrite');\n            store = txn.store;\n            _loop_1 = function (item) {\n              var connectedModels, id, _deleted, index, key, instance;\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    connectedModels = traverseModel(modelConstructor.name, this_1.modelInstanceCreator(modelConstructor, item), this_1.schema.namespaces[this_1.namespaceResolver(modelConstructor)], this_1.modelInstanceCreator, this_1.getModelConstructorByModelName);\n                    id = item.id, _deleted = item._deleted;\n                    index = store.index('byId');\n                    return [4 /*yield*/, index.getKey(id)];\n                  case 1:\n                    key = _a.sent();\n                    if (!!_deleted) return [3 /*break*/, 3];\n                    instance = connectedModels.find(function (_a) {\n                      var instance = _a.instance;\n                      return instance.id === id;\n                    }).instance;\n                    result.push([instance, key ? OpType.UPDATE : OpType.INSERT]);\n                    return [4 /*yield*/, store.put(instance, key)];\n                  case 2:\n                    _a.sent();\n                    return [3 /*break*/, 5];\n                  case 3:\n                    result.push([item, OpType.DELETE]);\n                    if (!key) return [3 /*break*/, 5];\n                    return [4 /*yield*/, store.delete(key)];\n                  case 4:\n                    _a.sent();\n                    _a.label = 5;\n                  case 5:\n                    return [2 /*return*/];\n                }\n              });\n            };\n            this_1 = this;\n            _b.label = 2;\n          case 2:\n            _b.trys.push([2, 7, 8, 9]);\n            items_2 = __values(items), items_2_1 = items_2.next();\n            _b.label = 3;\n          case 3:\n            if (!!items_2_1.done) return [3 /*break*/, 6];\n            item = items_2_1.value;\n            return [5 /*yield**/, _loop_1(item)];\n          case 4:\n            _b.sent();\n            _b.label = 5;\n          case 5:\n            items_2_1 = items_2.next();\n            return [3 /*break*/, 3];\n          case 6:\n            return [3 /*break*/, 9];\n          case 7:\n            e_11_1 = _b.sent();\n            e_11 = {\n              error: e_11_1\n            };\n            return [3 /*break*/, 9];\n          case 8:\n            try {\n              if (items_2_1 && !items_2_1.done && (_a = items_2.return)) _a.call(items_2);\n            } finally {\n              if (e_11) throw e_11.error;\n            }\n            return [7 /*endfinally*/];\n          case 9:\n            return [4 /*yield*/, txn.done];\n          case 10:\n            _b.sent();\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  return IndexedDBAdapter;\n}();\nexport default new IndexedDBAdapter();","map":{"version":3,"names":["ConsoleLogger","Logger","idb","ModelPredicateCreator","ModelSortPredicateCreator","isPredicateObj","OpType","QueryOne","exhaustiveCheck","getIndex","getIndexFromAssociation","isModelConstructor","isPrivateMode","traverseModel","validatePredicate","sortCompareFunction","logger","DB_NAME","IndexedDBAdapter","dbName","prototype","checkPrivate","then","isPrivate","_a","sent","error","Promise","reject","resolve","getStorenameForModel","modelConstructor","namespace","namespaceResolver","modelName","name","getStorename","storeName","setUp","theSchema","modelInstanceCreator","getModelConstructorByModelName","sessionId","_b","initPromise","res","rej","_this","schema","db","VERSION","openDB","upgrade","oldVersion","newVersion","txn","__awaiter","Object","keys","namespaces","forEach","namespaceName","models","store","createObjectStore","autoIncrement","indexes","relationships","index","createIndex","unique","__values","objectStoreNames","next","value","origStore","objectStore","tmpName","newStore","keyPath","undefined","openCursor","cursor","_d","count","put","continue","deleteObjectStore","debug","error_2","abort","error_1","_get","storeOrStoreName","id","transaction","get","result","save","model","condition","getPrototypeOf","constructor","connectedModels","set","Set","connectionStoreNames","values","map","item","instance","add","tx","__spread","Array","from","fromDB","predicates","getPredicates","predicateObjs","type","isValid","msg","Error","connectionStoreNames_1","__asyncValues","resItem","connectionStoreNames_1_1","storeName_1","store_1","fromDB_1","opType","INSERT","UPDATE","getKey","key","push","done","load","srcModelName","records","relations","relationTypes","length","record","relations_1","relation","relations_1_1","fieldName","targetName","modelConstructor_1","relationType","records_1","recordItem","records_1_1","connectionRecord","_e","records_2","records_2_1","query","predicate","pagination","queryById","idFromPredicate","hasSort","sort","hasPagination","limit","getById","filterOnPredicate","filtered","inMemoryPagination","getAll","all","enginePagination","idPredicate","find","p","field","operator","operand","filter","m","sortPredicates","compareFn","page","start","Math","max","end","slice","initialRecord","_c","advance","pageResults","hasLimit","queryOne","firstOrLast","FIRST","delete","modelOrModelConstructor","deleteQueue","nameSpace","deleteTraverse","deleteItem","deletedModels","reduce","acc","items","concat","clear","warn","deleteQueue_1","deleteQueue_1_1","items_1","items_1_1","toString","srcModel","relations_2","rel","relations_2_1","associatedWith","models_1","models_1_1","hasOneIndex","hasOneCustomField","recordToDelete","models_2","models_2_1","childrenArray","close","deleteDB","batchSave","this_1","_deleted","DELETE","items_2","items_2_1"],"sources":["../../../src/storage/adapter/IndexedDBAdapter.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}