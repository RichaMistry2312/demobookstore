{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nexport function unusedFragMessage(fragName) {\n  return \"Fragment \\\"\".concat(fragName, \"\\\" is never used.\");\n}\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n */\n\nexport function NoUnusedFragments(context) {\n  var operationDefs = [];\n  var fragmentDefs = [];\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n    Document: {\n      leave: function leave() {\n        var fragmentNameUsed = Object.create(null);\n        for (var _i = 0; _i < operationDefs.length; _i++) {\n          var operation = operationDefs[_i];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n          try {\n            for (var _iterator = context.getRecursivelyReferencedFragments(operation)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var fragment = _step.value;\n              fragmentNameUsed[fragment.name.value] = true;\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n        for (var _i2 = 0; _i2 < fragmentDefs.length; _i2++) {\n          var fragmentDef = fragmentDefs[_i2];\n          var fragName = fragmentDef.name.value;\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new GraphQLError(unusedFragMessage(fragName), [fragmentDef]));\n          }\n        }\n      }\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","unusedFragMessage","fragName","concat","NoUnusedFragments","context","operationDefs","fragmentDefs","OperationDefinition","node","push","FragmentDefinition","Document","leave","fragmentNameUsed","Object","create","_i","length","operation","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","getRecursivelyReferencedFragments","Symbol","iterator","_step","next","done","fragment","value","name","err","return","_i2","fragmentDef","reportError"],"sources":["/Users/richa/Desktop/Projects/demo-project/store/bookstore-v2/node_modules/graphql/validation/rules/NoUnusedFragments.mjs"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nexport function unusedFragMessage(fragName) {\n  return \"Fragment \\\"\".concat(fragName, \"\\\" is never used.\");\n}\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n */\n\nexport function NoUnusedFragments(context) {\n  var operationDefs = [];\n  var fragmentDefs = [];\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n    Document: {\n      leave: function leave() {\n        var fragmentNameUsed = Object.create(null);\n\n        for (var _i = 0; _i < operationDefs.length; _i++) {\n          var operation = operationDefs[_i];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = context.getRecursivelyReferencedFragments(operation)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var fragment = _step.value;\n              fragmentNameUsed[fragment.name.value] = true;\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n\n        for (var _i2 = 0; _i2 < fragmentDefs.length; _i2++) {\n          var fragmentDef = fragmentDefs[_i2];\n          var fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new GraphQLError(unusedFragMessage(fragName), [fragmentDef]));\n          }\n        }\n      }\n    }\n  };\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,0BAA0B;AACvD,OAAO,SAASC,iBAAiBA,CAACC,QAAQ,EAAE;EAC1C,OAAO,aAAa,CAACC,MAAM,CAACD,QAAQ,EAAE,mBAAmB,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,iBAAiBA,CAACC,OAAO,EAAE;EACzC,IAAIC,aAAa,GAAG,EAAE;EACtB,IAAIC,YAAY,GAAG,EAAE;EACrB,OAAO;IACLC,mBAAmB,EAAE,SAASA,mBAAmBA,CAACC,IAAI,EAAE;MACtDH,aAAa,CAACI,IAAI,CAACD,IAAI,CAAC;MACxB,OAAO,KAAK;IACd,CAAC;IACDE,kBAAkB,EAAE,SAASA,kBAAkBA,CAACF,IAAI,EAAE;MACpDF,YAAY,CAACG,IAAI,CAACD,IAAI,CAAC;MACvB,OAAO,KAAK;IACd,CAAC;IACDG,QAAQ,EAAE;MACRC,KAAK,EAAE,SAASA,KAAKA,CAAA,EAAG;QACtB,IAAIC,gBAAgB,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;QAE1C,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGX,aAAa,CAACY,MAAM,EAAED,EAAE,EAAE,EAAE;UAChD,IAAIE,SAAS,GAAGb,aAAa,CAACW,EAAE,CAAC;UACjC,IAAIG,yBAAyB,GAAG,IAAI;UACpC,IAAIC,iBAAiB,GAAG,KAAK;UAC7B,IAAIC,cAAc,GAAGC,SAAS;UAE9B,IAAI;YACF,KAAK,IAAIC,SAAS,GAAGnB,OAAO,CAACoB,iCAAiC,CAACN,SAAS,CAAC,CAACO,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC,EAAEC,KAAK,EAAE,EAAER,yBAAyB,GAAG,CAACQ,KAAK,GAAGJ,SAAS,CAACK,IAAI,CAAC,CAAC,EAAEC,IAAI,CAAC,EAAEV,yBAAyB,GAAG,IAAI,EAAE;cACrM,IAAIW,QAAQ,GAAGH,KAAK,CAACI,KAAK;cAC1BlB,gBAAgB,CAACiB,QAAQ,CAACE,IAAI,CAACD,KAAK,CAAC,GAAG,IAAI;YAC9C;UACF,CAAC,CAAC,OAAOE,GAAG,EAAE;YACZb,iBAAiB,GAAG,IAAI;YACxBC,cAAc,GAAGY,GAAG;UACtB,CAAC,SAAS;YACR,IAAI;cACF,IAAI,CAACd,yBAAyB,IAAII,SAAS,CAACW,MAAM,IAAI,IAAI,EAAE;gBAC1DX,SAAS,CAACW,MAAM,CAAC,CAAC;cACpB;YACF,CAAC,SAAS;cACR,IAAId,iBAAiB,EAAE;gBACrB,MAAMC,cAAc;cACtB;YACF;UACF;QACF;QAEA,KAAK,IAAIc,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG7B,YAAY,CAACW,MAAM,EAAEkB,GAAG,EAAE,EAAE;UAClD,IAAIC,WAAW,GAAG9B,YAAY,CAAC6B,GAAG,CAAC;UACnC,IAAIlC,QAAQ,GAAGmC,WAAW,CAACJ,IAAI,CAACD,KAAK;UAErC,IAAIlB,gBAAgB,CAACZ,QAAQ,CAAC,KAAK,IAAI,EAAE;YACvCG,OAAO,CAACiC,WAAW,CAAC,IAAItC,YAAY,CAACC,iBAAiB,CAACC,QAAQ,CAAC,EAAE,CAACmC,WAAW,CAAC,CAAC,CAAC;UACnF;QACF;MACF;IACF;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module"}