{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nexport var serializerMiddleware = function (options, serializer) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var logger, inputFilterSensitiveLog, request;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              logger = context.logger, inputFilterSensitiveLog = context.inputFilterSensitiveLog;\n              if (typeof (logger === null || logger === void 0 ? void 0 : logger.info) === \"function\") {\n                logger.info({\n                  input: inputFilterSensitiveLog(args.input)\n                });\n              }\n              return [4 /*yield*/, serializer(args.input, options)];\n            case 1:\n              request = _a.sent();\n              if (typeof (logger === null || logger === void 0 ? void 0 : logger.debug) === \"function\") {\n                logger.debug({\n                  httpRequest: request\n                });\n              }\n              return [2 /*return*/, next(__assign(__assign({}, args), {\n                request: request\n              }))];\n          }\n        });\n      });\n    };\n  };\n};","map":{"version":3,"names":["serializerMiddleware","options","serializer","next","context","args","__awaiter","logger","inputFilterSensitiveLog","info","input","request","_a","sent","debug","httpRequest","__assign"],"sources":["../../src/serializerMiddleware.ts"],"sourcesContent":["import {\n  EndpointBearer,\n  HandlerExecutionContext,\n  RequestSerializer,\n  SerializeHandler,\n  SerializeHandlerArguments,\n  SerializeHandlerOutput,\n  SerializeMiddleware,\n} from \"@aws-sdk/types\";\n\nexport const serializerMiddleware = <Input extends object, Output extends object, RuntimeUtils extends EndpointBearer>(\n  options: RuntimeUtils,\n  serializer: RequestSerializer<any, RuntimeUtils>\n): SerializeMiddleware<Input, Output> => (\n  next: SerializeHandler<Input, Output>,\n  context: HandlerExecutionContext\n): SerializeHandler<Input, Output> => async (\n  args: SerializeHandlerArguments<Input>\n): Promise<SerializeHandlerOutput<Output>> => {\n  const { logger, inputFilterSensitiveLog } = context;\n\n  if (typeof logger?.info === \"function\") {\n    logger.info({\n      input: inputFilterSensitiveLog(args.input),\n    });\n  }\n\n  const request = await serializer(args.input, options);\n\n  if (typeof logger?.debug === \"function\") {\n    logger.debug({\n      httpRequest: request,\n    });\n  }\n\n  return next({\n    ...args,\n    request,\n  });\n};\n"],"mappings":";AAUA,OAAO,IAAMA,oBAAoB,GAAG,SAAAA,CAClCC,OAAqB,EACrBC,UAAgD;EACT,iBACvCC,IAAqC,EACrCC,OAAgC;IACI,iBACpCC,IAAsC;MAAA,OAAAC,SAAA;;;;;cAE9BC,MAAM,GAA8BH,OAAO,CAAAG,MAArC,EAAEC,uBAAuB,GAAKJ,OAAO,CAAAI,uBAAZ;cAEvC,IAAI,QAAOD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,IAAI,MAAK,UAAU,EAAE;gBACtCF,MAAM,CAACE,IAAI,CAAC;kBACVC,KAAK,EAAEF,uBAAuB,CAACH,IAAI,CAACK,KAAK;iBAC1C,CAAC;;cAGY,qBAAMR,UAAU,CAACG,IAAI,CAACK,KAAK,EAAET,OAAO,CAAC;;cAA/CU,OAAO,GAAGC,EAAA,CAAAC,IAAA,EAAqC;cAErD,IAAI,QAAON,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEO,KAAK,MAAK,UAAU,EAAE;gBACvCP,MAAM,CAACO,KAAK,CAAC;kBACXC,WAAW,EAAEJ;iBACd,CAAC;;cAGJ,sBAAOR,IAAI,CAAAa,QAAA,CAAAA,QAAA,KACNX,IAAI;gBACPM,OAAO,EAAAA;cAAA,GACP;;;;KACH;EAvBqC,CAuBrC;AA1BwC,CA0BxC","ignoreList":[]},"metadata":{},"sourceType":"module"}