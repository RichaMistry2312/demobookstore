{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __asyncValues = this && this.__asyncValues || function (o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n    i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport AsyncStorageDatabase from './AsyncStorageDatabase';\nimport { ModelPredicateCreator, ModelSortPredicateCreator } from '../../predicates';\nimport { isPredicateObj, OpType, QueryOne } from '../../types';\nimport { exhaustiveCheck, getIndex, getIndexFromAssociation, isModelConstructor, traverseModel, validatePredicate, sortCompareFunction } from '../../util';\nvar logger = new Logger('DataStore');\nvar AsyncStorageAdapter = /** @class */function () {\n  function AsyncStorageAdapter() {}\n  AsyncStorageAdapter.prototype.getStorenameForModel = function (modelConstructor) {\n    var namespace = this.namespaceResolver(modelConstructor);\n    var modelName = modelConstructor.name;\n    return this.getStorename(namespace, modelName);\n  };\n  AsyncStorageAdapter.prototype.getStorename = function (namespace, modelName) {\n    var storeName = namespace + \"_\" + modelName;\n    return storeName;\n  };\n  AsyncStorageAdapter.prototype.setUp = function (theSchema, namespaceResolver, modelInstanceCreator, getModelConstructorByModelName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_1;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this.initPromise) return [3 /*break*/, 1];\n            this.initPromise = new Promise(function (res, rej) {\n              _this.resolve = res;\n              _this.reject = rej;\n            });\n            return [3 /*break*/, 3];\n          case 1:\n            return [4 /*yield*/, this.initPromise];\n          case 2:\n            _a.sent();\n            return [2 /*return*/];\n          case 3:\n            this.schema = theSchema;\n            this.namespaceResolver = namespaceResolver;\n            this.modelInstanceCreator = modelInstanceCreator;\n            this.getModelConstructorByModelName = getModelConstructorByModelName;\n            _a.label = 4;\n          case 4:\n            _a.trys.push([4, 7,, 8]);\n            if (!!this.db) return [3 /*break*/, 6];\n            this.db = new AsyncStorageDatabase();\n            return [4 /*yield*/, this.db.init()];\n          case 5:\n            _a.sent();\n            this.resolve();\n            _a.label = 6;\n          case 6:\n            return [3 /*break*/, 8];\n          case 7:\n            error_1 = _a.sent();\n            this.reject(error_1);\n            return [3 /*break*/, 8];\n          case 8:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  AsyncStorageAdapter.prototype.save = function (model, condition) {\n    var e_1, _a;\n    return __awaiter(this, void 0, void 0, function () {\n      var modelConstructor, storeName, connectedModels, namespaceName, set, connectionStoreNames, fromDB, predicates, predicateObjs, type, isValid, msg, result, connectionStoreNames_1, connectionStoreNames_1_1, resItem, storeName_1, item, instance, id, fromDB_1, opType, e_1_1;\n      var _this = this;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            modelConstructor = Object.getPrototypeOf(model).constructor;\n            storeName = this.getStorenameForModel(modelConstructor);\n            connectedModels = traverseModel(modelConstructor.name, model, this.schema.namespaces[this.namespaceResolver(modelConstructor)], this.modelInstanceCreator, this.getModelConstructorByModelName);\n            namespaceName = this.namespaceResolver(modelConstructor);\n            set = new Set();\n            connectionStoreNames = Object.values(connectedModels).map(function (_a) {\n              var modelName = _a.modelName,\n                item = _a.item,\n                instance = _a.instance;\n              var storeName = _this.getStorename(namespaceName, modelName);\n              set.add(storeName);\n              return {\n                storeName: storeName,\n                item: item,\n                instance: instance\n              };\n            });\n            return [4 /*yield*/, this.db.get(model.id, storeName)];\n          case 1:\n            fromDB = _b.sent();\n            if (condition && fromDB) {\n              predicates = ModelPredicateCreator.getPredicates(condition);\n              predicateObjs = predicates.predicates, type = predicates.type;\n              isValid = validatePredicate(fromDB, type, predicateObjs);\n              if (!isValid) {\n                msg = 'Conditional update failed';\n                logger.error(msg, {\n                  model: fromDB,\n                  condition: predicateObjs\n                });\n                throw new Error(msg);\n              }\n            }\n            result = [];\n            _b.label = 2;\n          case 2:\n            _b.trys.push([2, 9, 10, 15]);\n            connectionStoreNames_1 = __asyncValues(connectionStoreNames);\n            _b.label = 3;\n          case 3:\n            return [4 /*yield*/, connectionStoreNames_1.next()];\n          case 4:\n            if (!(connectionStoreNames_1_1 = _b.sent(), !connectionStoreNames_1_1.done)) return [3 /*break*/, 8];\n            resItem = connectionStoreNames_1_1.value;\n            storeName_1 = resItem.storeName, item = resItem.item, instance = resItem.instance;\n            id = item.id;\n            return [4 /*yield*/, this.db.get(id, storeName_1)];\n          case 5:\n            fromDB_1 = _b.sent();\n            opType = fromDB_1 ? OpType.UPDATE : OpType.INSERT;\n            if (!(id === model.id || opType === OpType.INSERT)) return [3 /*break*/, 7];\n            return [4 /*yield*/, this.db.save(item, storeName_1)];\n          case 6:\n            _b.sent();\n            result.push([instance, opType]);\n            _b.label = 7;\n          case 7:\n            return [3 /*break*/, 3];\n          case 8:\n            return [3 /*break*/, 15];\n          case 9:\n            e_1_1 = _b.sent();\n            e_1 = {\n              error: e_1_1\n            };\n            return [3 /*break*/, 15];\n          case 10:\n            _b.trys.push([10,, 13, 14]);\n            if (!(connectionStoreNames_1_1 && !connectionStoreNames_1_1.done && (_a = connectionStoreNames_1.return))) return [3 /*break*/, 12];\n            return [4 /*yield*/, _a.call(connectionStoreNames_1)];\n          case 11:\n            _b.sent();\n            _b.label = 12;\n          case 12:\n            return [3 /*break*/, 14];\n          case 13:\n            if (e_1) throw e_1.error;\n            return [7 /*endfinally*/];\n          case 14:\n            return [7 /*endfinally*/];\n          case 15:\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  AsyncStorageAdapter.prototype.load = function (namespaceName, srcModelName, records) {\n    var records_1, records_1_1, records_2, records_2_1;\n    var e_2, _a, e_3, _b, e_4, _c;\n    return __awaiter(this, void 0, void 0, function () {\n      var namespace, relations, connectionStoreNames, modelConstructor, relations_1, relations_1_1, relation, fieldName, modelName, targetName, relationType, storeName, modelConstructor_1, _d, recordItem, connectionRecord, e_3_1, recordItem, connectionRecord, e_4_1, e_2_1;\n      var _this = this;\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            namespace = this.schema.namespaces[namespaceName];\n            relations = namespace.relationships[srcModelName].relationTypes;\n            connectionStoreNames = relations.map(function (_a) {\n              var modelName = _a.modelName;\n              return _this.getStorename(namespaceName, modelName);\n            });\n            modelConstructor = this.getModelConstructorByModelName(namespaceName, srcModelName);\n            if (connectionStoreNames.length === 0) {\n              return [2 /*return*/, records.map(function (record) {\n                return _this.modelInstanceCreator(modelConstructor, record);\n              })];\n            }\n            _e.label = 1;\n          case 1:\n            _e.trys.push([1, 34, 35, 40]);\n            relations_1 = __asyncValues(relations);\n            _e.label = 2;\n          case 2:\n            return [4 /*yield*/, relations_1.next()];\n          case 3:\n            if (!(relations_1_1 = _e.sent(), !relations_1_1.done)) return [3 /*break*/, 33];\n            relation = relations_1_1.value;\n            fieldName = relation.fieldName, modelName = relation.modelName, targetName = relation.targetName, relationType = relation.relationType;\n            storeName = this.getStorename(namespaceName, modelName);\n            modelConstructor_1 = this.getModelConstructorByModelName(namespaceName, modelName);\n            _d = relationType;\n            switch (_d) {\n              case 'HAS_ONE':\n                return [3 /*break*/, 4];\n              case 'BELONGS_TO':\n                return [3 /*break*/, 17];\n              case 'HAS_MANY':\n                return [3 /*break*/, 30];\n            }\n            return [3 /*break*/, 31];\n          case 4:\n            _e.trys.push([4, 10, 11, 16]);\n            records_1 = __asyncValues(records);\n            _e.label = 5;\n          case 5:\n            return [4 /*yield*/, records_1.next()];\n          case 6:\n            if (!(records_1_1 = _e.sent(), !records_1_1.done)) return [3 /*break*/, 9];\n            recordItem = records_1_1.value;\n            if (!recordItem[fieldName]) return [3 /*break*/, 8];\n            return [4 /*yield*/, this.db.get(recordItem[fieldName], storeName)];\n          case 7:\n            connectionRecord = _e.sent();\n            recordItem[fieldName] = connectionRecord && this.modelInstanceCreator(modelConstructor_1, connectionRecord);\n            _e.label = 8;\n          case 8:\n            return [3 /*break*/, 5];\n          case 9:\n            return [3 /*break*/, 16];\n          case 10:\n            e_3_1 = _e.sent();\n            e_3 = {\n              error: e_3_1\n            };\n            return [3 /*break*/, 16];\n          case 11:\n            _e.trys.push([11,, 14, 15]);\n            if (!(records_1_1 && !records_1_1.done && (_b = records_1.return))) return [3 /*break*/, 13];\n            return [4 /*yield*/, _b.call(records_1)];\n          case 12:\n            _e.sent();\n            _e.label = 13;\n          case 13:\n            return [3 /*break*/, 15];\n          case 14:\n            if (e_3) throw e_3.error;\n            return [7 /*endfinally*/];\n          case 15:\n            return [7 /*endfinally*/];\n          case 16:\n            return [3 /*break*/, 32];\n          case 17:\n            _e.trys.push([17, 23, 24, 29]);\n            records_2 = __asyncValues(records);\n            _e.label = 18;\n          case 18:\n            return [4 /*yield*/, records_2.next()];\n          case 19:\n            if (!(records_2_1 = _e.sent(), !records_2_1.done)) return [3 /*break*/, 22];\n            recordItem = records_2_1.value;\n            if (!recordItem[targetName]) return [3 /*break*/, 21];\n            return [4 /*yield*/, this.db.get(recordItem[targetName], storeName)];\n          case 20:\n            connectionRecord = _e.sent();\n            recordItem[fieldName] = connectionRecord && this.modelInstanceCreator(modelConstructor_1, connectionRecord);\n            delete recordItem[targetName];\n            _e.label = 21;\n          case 21:\n            return [3 /*break*/, 18];\n          case 22:\n            return [3 /*break*/, 29];\n          case 23:\n            e_4_1 = _e.sent();\n            e_4 = {\n              error: e_4_1\n            };\n            return [3 /*break*/, 29];\n          case 24:\n            _e.trys.push([24,, 27, 28]);\n            if (!(records_2_1 && !records_2_1.done && (_c = records_2.return))) return [3 /*break*/, 26];\n            return [4 /*yield*/, _c.call(records_2)];\n          case 25:\n            _e.sent();\n            _e.label = 26;\n          case 26:\n            return [3 /*break*/, 28];\n          case 27:\n            if (e_4) throw e_4.error;\n            return [7 /*endfinally*/];\n          case 28:\n            return [7 /*endfinally*/];\n          case 29:\n            return [3 /*break*/, 32];\n          case 30:\n            // TODO: Lazy loading\n            return [3 /*break*/, 32];\n          case 31:\n            exhaustiveCheck(relationType);\n            return [3 /*break*/, 32];\n          case 32:\n            return [3 /*break*/, 2];\n          case 33:\n            return [3 /*break*/, 40];\n          case 34:\n            e_2_1 = _e.sent();\n            e_2 = {\n              error: e_2_1\n            };\n            return [3 /*break*/, 40];\n          case 35:\n            _e.trys.push([35,, 38, 39]);\n            if (!(relations_1_1 && !relations_1_1.done && (_a = relations_1.return))) return [3 /*break*/, 37];\n            return [4 /*yield*/, _a.call(relations_1)];\n          case 36:\n            _e.sent();\n            _e.label = 37;\n          case 37:\n            return [3 /*break*/, 39];\n          case 38:\n            if (e_2) throw e_2.error;\n            return [7 /*endfinally*/];\n          case 39:\n            return [7 /*endfinally*/];\n          case 40:\n            return [2 /*return*/, records.map(function (record) {\n              return _this.modelInstanceCreator(modelConstructor, record);\n            })];\n        }\n      });\n    });\n  };\n  AsyncStorageAdapter.prototype.query = function (modelConstructor, predicate, pagination) {\n    return __awaiter(this, void 0, void 0, function () {\n      var storeName, namespaceName, predicates, queryById, hasSort, hasPagination, records;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            storeName = this.getStorenameForModel(modelConstructor);\n            namespaceName = this.namespaceResolver(modelConstructor);\n            predicates = predicate && ModelPredicateCreator.getPredicates(predicate);\n            queryById = predicates && this.idFromPredicate(predicates);\n            hasSort = pagination && pagination.sort;\n            hasPagination = pagination && pagination.limit;\n            return [4 /*yield*/, function () {\n              return __awaiter(_this, void 0, void 0, function () {\n                var record, filtered, all;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (!queryById) return [3 /*break*/, 2];\n                      return [4 /*yield*/, this.getById(storeName, queryById)];\n                    case 1:\n                      record = _a.sent();\n                      return [2 /*return*/, record ? [record] : []];\n                    case 2:\n                      if (!predicates) return [3 /*break*/, 4];\n                      return [4 /*yield*/, this.filterOnPredicate(storeName, predicates)];\n                    case 3:\n                      filtered = _a.sent();\n                      return [2 /*return*/, this.inMemoryPagination(filtered, pagination)];\n                    case 4:\n                      if (!(hasSort || hasPagination)) return [3 /*break*/, 6];\n                      return [4 /*yield*/, this.getAll(storeName)];\n                    case 5:\n                      all = _a.sent();\n                      return [2 /*return*/, this.inMemoryPagination(all, pagination)];\n                    case 6:\n                      return [2 /*return*/, this.getAll(storeName)];\n                  }\n                });\n              });\n            }()];\n          case 1:\n            records = _a.sent();\n            return [4 /*yield*/, this.load(namespaceName, modelConstructor.name, records)];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  AsyncStorageAdapter.prototype.getById = function (storeName, id) {\n    return __awaiter(this, void 0, void 0, function () {\n      var record;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.db.get(id, storeName)];\n          case 1:\n            record = _a.sent();\n            return [2 /*return*/, record];\n        }\n      });\n    });\n  };\n  AsyncStorageAdapter.prototype.getAll = function (storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.db.getAll(storeName)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  AsyncStorageAdapter.prototype.idFromPredicate = function (predicates) {\n    var predicateObjs = predicates.predicates;\n    var idPredicate = predicateObjs.length === 1 && predicateObjs.find(function (p) {\n      return isPredicateObj(p) && p.field === 'id' && p.operator === 'eq';\n    });\n    return idPredicate && idPredicate.operand;\n  };\n  AsyncStorageAdapter.prototype.filterOnPredicate = function (storeName, predicates) {\n    return __awaiter(this, void 0, void 0, function () {\n      var predicateObjs, type, all, filtered;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            predicateObjs = predicates.predicates, type = predicates.type;\n            return [4 /*yield*/, this.getAll(storeName)];\n          case 1:\n            all = _a.sent();\n            filtered = predicateObjs ? all.filter(function (m) {\n              return validatePredicate(m, type, predicateObjs);\n            }) : all;\n            return [2 /*return*/, filtered];\n        }\n      });\n    });\n  };\n  AsyncStorageAdapter.prototype.inMemoryPagination = function (records, pagination) {\n    if (pagination && records.length > 1) {\n      if (pagination.sort) {\n        var sortPredicates = ModelSortPredicateCreator.getPredicates(pagination.sort);\n        if (sortPredicates.length) {\n          var compareFn = sortCompareFunction(sortPredicates);\n          records.sort(compareFn);\n        }\n      }\n      var _a = pagination.page,\n        page = _a === void 0 ? 0 : _a,\n        _b = pagination.limit,\n        limit = _b === void 0 ? 0 : _b;\n      var start = Math.max(0, page * limit) || 0;\n      var end = limit > 0 ? start + limit : records.length;\n      return records.slice(start, end);\n    }\n    return records;\n  };\n  AsyncStorageAdapter.prototype.queryOne = function (modelConstructor, firstOrLast) {\n    if (firstOrLast === void 0) {\n      firstOrLast = QueryOne.FIRST;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var storeName, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            storeName = this.getStorenameForModel(modelConstructor);\n            return [4 /*yield*/, this.db.getOne(firstOrLast, storeName)];\n          case 1:\n            result = _a.sent();\n            return [2 /*return*/, result && this.modelInstanceCreator(modelConstructor, result)];\n        }\n      });\n    });\n  };\n  AsyncStorageAdapter.prototype.delete = function (modelOrModelConstructor, condition) {\n    return __awaiter(this, void 0, void 0, function () {\n      var deleteQueue, modelConstructor, nameSpace, models, relations, deletedModels, deletedModels, model, modelConstructor, nameSpace, storeName, fromDB, msg, predicates, predicateObjs, type, isValid, msg, relations, relations, deletedModels;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            deleteQueue = [];\n            if (!isModelConstructor(modelOrModelConstructor)) return [3 /*break*/, 8];\n            modelConstructor = modelOrModelConstructor;\n            nameSpace = this.namespaceResolver(modelConstructor);\n            return [4 /*yield*/, this.query(modelConstructor, condition)];\n          case 1:\n            models = _a.sent();\n            relations = this.schema.namespaces[nameSpace].relationships[modelConstructor.name].relationTypes;\n            if (!(condition !== undefined)) return [3 /*break*/, 4];\n            return [4 /*yield*/, this.deleteTraverse(relations, models, modelConstructor.name, nameSpace, deleteQueue)];\n          case 2:\n            _a.sent();\n            return [4 /*yield*/, this.deleteItem(deleteQueue)];\n          case 3:\n            _a.sent();\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2 /*return*/, [models, deletedModels]];\n          case 4:\n            return [4 /*yield*/, this.deleteTraverse(relations, models, modelConstructor.name, nameSpace, deleteQueue)];\n          case 5:\n            _a.sent();\n            return [4 /*yield*/, this.deleteItem(deleteQueue)];\n          case 6:\n            _a.sent();\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2 /*return*/, [models, deletedModels]];\n          case 7:\n            return [3 /*break*/, 15];\n          case 8:\n            model = modelOrModelConstructor;\n            modelConstructor = Object.getPrototypeOf(model).constructor;\n            nameSpace = this.namespaceResolver(modelConstructor);\n            storeName = this.getStorenameForModel(modelConstructor);\n            if (!condition) return [3 /*break*/, 11];\n            return [4 /*yield*/, this.db.get(model.id, storeName)];\n          case 9:\n            fromDB = _a.sent();\n            if (fromDB === undefined) {\n              msg = 'Model instance not found in storage';\n              logger.warn(msg, {\n                model: model\n              });\n              return [2 /*return*/, [[model], []]];\n            }\n            predicates = ModelPredicateCreator.getPredicates(condition);\n            predicateObjs = predicates.predicates, type = predicates.type;\n            isValid = validatePredicate(fromDB, type, predicateObjs);\n            if (!isValid) {\n              msg = 'Conditional update failed';\n              logger.error(msg, {\n                model: fromDB,\n                condition: predicateObjs\n              });\n              throw new Error(msg);\n            }\n            relations = this.schema.namespaces[nameSpace].relationships[modelConstructor.name].relationTypes;\n            return [4 /*yield*/, this.deleteTraverse(relations, [model], modelConstructor.name, nameSpace, deleteQueue)];\n          case 10:\n            _a.sent();\n            return [3 /*break*/, 13];\n          case 11:\n            relations = this.schema.namespaces[nameSpace].relationships[modelConstructor.name].relationTypes;\n            return [4 /*yield*/, this.deleteTraverse(relations, [model], modelConstructor.name, nameSpace, deleteQueue)];\n          case 12:\n            _a.sent();\n            _a.label = 13;\n          case 13:\n            return [4 /*yield*/, this.deleteItem(deleteQueue)];\n          case 14:\n            _a.sent();\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2 /*return*/, [[model], deletedModels]];\n          case 15:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  AsyncStorageAdapter.prototype.deleteItem = function (deleteQueue) {\n    var deleteQueue_1, deleteQueue_1_1;\n    var e_5, _a, e_6, _b;\n    return __awaiter(this, void 0, void 0, function () {\n      var deleteItem, storeName, items, items_1, items_1_1, item, id, e_6_1, e_5_1;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _c.trys.push([0, 17, 18, 23]);\n            deleteQueue_1 = __asyncValues(deleteQueue);\n            _c.label = 1;\n          case 1:\n            return [4 /*yield*/, deleteQueue_1.next()];\n          case 2:\n            if (!(deleteQueue_1_1 = _c.sent(), !deleteQueue_1_1.done)) return [3 /*break*/, 16];\n            deleteItem = deleteQueue_1_1.value;\n            storeName = deleteItem.storeName, items = deleteItem.items;\n            _c.label = 3;\n          case 3:\n            _c.trys.push([3, 9, 10, 15]);\n            items_1 = __asyncValues(items);\n            _c.label = 4;\n          case 4:\n            return [4 /*yield*/, items_1.next()];\n          case 5:\n            if (!(items_1_1 = _c.sent(), !items_1_1.done)) return [3 /*break*/, 8];\n            item = items_1_1.value;\n            if (!item) return [3 /*break*/, 7];\n            if (!(typeof item === 'object')) return [3 /*break*/, 7];\n            id = item['id'];\n            return [4 /*yield*/, this.db.delete(id, storeName)];\n          case 6:\n            _c.sent();\n            _c.label = 7;\n          case 7:\n            return [3 /*break*/, 4];\n          case 8:\n            return [3 /*break*/, 15];\n          case 9:\n            e_6_1 = _c.sent();\n            e_6 = {\n              error: e_6_1\n            };\n            return [3 /*break*/, 15];\n          case 10:\n            _c.trys.push([10,, 13, 14]);\n            if (!(items_1_1 && !items_1_1.done && (_b = items_1.return))) return [3 /*break*/, 12];\n            return [4 /*yield*/, _b.call(items_1)];\n          case 11:\n            _c.sent();\n            _c.label = 12;\n          case 12:\n            return [3 /*break*/, 14];\n          case 13:\n            if (e_6) throw e_6.error;\n            return [7 /*endfinally*/];\n          case 14:\n            return [7 /*endfinally*/];\n          case 15:\n            return [3 /*break*/, 1];\n          case 16:\n            return [3 /*break*/, 23];\n          case 17:\n            e_5_1 = _c.sent();\n            e_5 = {\n              error: e_5_1\n            };\n            return [3 /*break*/, 23];\n          case 18:\n            _c.trys.push([18,, 21, 22]);\n            if (!(deleteQueue_1_1 && !deleteQueue_1_1.done && (_a = deleteQueue_1.return))) return [3 /*break*/, 20];\n            return [4 /*yield*/, _a.call(deleteQueue_1)];\n          case 19:\n            _c.sent();\n            _c.label = 20;\n          case 20:\n            return [3 /*break*/, 22];\n          case 21:\n            if (e_5) throw e_5.error;\n            return [7 /*endfinally*/];\n          case 22:\n            return [7 /*endfinally*/];\n          case 23:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Populates the delete Queue with all the items to delete\n   * @param relations\n   * @param models\n   * @param srcModel\n   * @param nameSpace\n   * @param deleteQueue\n   */\n  AsyncStorageAdapter.prototype.deleteTraverse = function (relations, models, srcModel, nameSpace, deleteQueue) {\n    var relations_2, relations_2_1, models_1, models_1_1, models_2, models_2_1;\n    var e_7, _a, e_8, _b, e_9, _c;\n    return __awaiter(this, void 0, void 0, function () {\n      var rel, relationType, modelName, targetName, storeName, index, _d, model, hasOneIndex, hasOneCustomField, value, allRecords, recordToDelete, e_8_1, model, allRecords, childrenArray, e_9_1, e_7_1;\n      var _this = this;\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _e.trys.push([0, 35, 36, 41]);\n            relations_2 = __asyncValues(relations);\n            _e.label = 1;\n          case 1:\n            return [4 /*yield*/, relations_2.next()];\n          case 2:\n            if (!(relations_2_1 = _e.sent(), !relations_2_1.done)) return [3 /*break*/, 34];\n            rel = relations_2_1.value;\n            relationType = rel.relationType, modelName = rel.modelName, targetName = rel.targetName;\n            storeName = this.getStorename(nameSpace, modelName);\n            index = getIndex(this.schema.namespaces[nameSpace].relationships[modelName].relationTypes, srcModel) ||\n            // if we were unable to find an index via relationTypes\n            // i.e. for keyName connections, attempt to find one by the\n            // associatedWith property\n            getIndexFromAssociation(this.schema.namespaces[nameSpace].relationships[modelName].indexes, rel.associatedWith);\n            _d = relationType;\n            switch (_d) {\n              case 'HAS_ONE':\n                return [3 /*break*/, 3];\n              case 'HAS_MANY':\n                return [3 /*break*/, 17];\n              case 'BELONGS_TO':\n                return [3 /*break*/, 31];\n            }\n            return [3 /*break*/, 32];\n          case 3:\n            _e.trys.push([3, 10, 11, 16]);\n            models_1 = __asyncValues(models);\n            _e.label = 4;\n          case 4:\n            return [4 /*yield*/, models_1.next()];\n          case 5:\n            if (!(models_1_1 = _e.sent(), !models_1_1.done)) return [3 /*break*/, 9];\n            model = models_1_1.value;\n            hasOneIndex = index || 'byId';\n            hasOneCustomField = targetName in model;\n            value = hasOneCustomField ? model[targetName] : model.id;\n            return [4 /*yield*/, this.db.getAll(storeName)];\n          case 6:\n            allRecords = _e.sent();\n            recordToDelete = allRecords.filter(function (childItem) {\n              return childItem[hasOneIndex] === value;\n            });\n            return [4 /*yield*/, this.deleteTraverse(this.schema.namespaces[nameSpace].relationships[modelName].relationTypes, recordToDelete, modelName, nameSpace, deleteQueue)];\n          case 7:\n            _e.sent();\n            _e.label = 8;\n          case 8:\n            return [3 /*break*/, 4];\n          case 9:\n            return [3 /*break*/, 16];\n          case 10:\n            e_8_1 = _e.sent();\n            e_8 = {\n              error: e_8_1\n            };\n            return [3 /*break*/, 16];\n          case 11:\n            _e.trys.push([11,, 14, 15]);\n            if (!(models_1_1 && !models_1_1.done && (_b = models_1.return))) return [3 /*break*/, 13];\n            return [4 /*yield*/, _b.call(models_1)];\n          case 12:\n            _e.sent();\n            _e.label = 13;\n          case 13:\n            return [3 /*break*/, 15];\n          case 14:\n            if (e_8) throw e_8.error;\n            return [7 /*endfinally*/];\n          case 15:\n            return [7 /*endfinally*/];\n          case 16:\n            return [3 /*break*/, 33];\n          case 17:\n            _e.trys.push([17, 24, 25, 30]);\n            models_2 = __asyncValues(models);\n            _e.label = 18;\n          case 18:\n            return [4 /*yield*/, models_2.next()];\n          case 19:\n            if (!(models_2_1 = _e.sent(), !models_2_1.done)) return [3 /*break*/, 23];\n            model = models_2_1.value;\n            return [4 /*yield*/, this.db.getAll(storeName)];\n          case 20:\n            allRecords = _e.sent();\n            childrenArray = allRecords.filter(function (childItem) {\n              return childItem[index] === model.id;\n            });\n            return [4 /*yield*/, this.deleteTraverse(this.schema.namespaces[nameSpace].relationships[modelName].relationTypes, childrenArray, modelName, nameSpace, deleteQueue)];\n          case 21:\n            _e.sent();\n            _e.label = 22;\n          case 22:\n            return [3 /*break*/, 18];\n          case 23:\n            return [3 /*break*/, 30];\n          case 24:\n            e_9_1 = _e.sent();\n            e_9 = {\n              error: e_9_1\n            };\n            return [3 /*break*/, 30];\n          case 25:\n            _e.trys.push([25,, 28, 29]);\n            if (!(models_2_1 && !models_2_1.done && (_c = models_2.return))) return [3 /*break*/, 27];\n            return [4 /*yield*/, _c.call(models_2)];\n          case 26:\n            _e.sent();\n            _e.label = 27;\n          case 27:\n            return [3 /*break*/, 29];\n          case 28:\n            if (e_9) throw e_9.error;\n            return [7 /*endfinally*/];\n          case 29:\n            return [7 /*endfinally*/];\n          case 30:\n            return [3 /*break*/, 33];\n          case 31:\n            // Intentionally blank\n            return [3 /*break*/, 33];\n          case 32:\n            exhaustiveCheck(relationType);\n            return [3 /*break*/, 33];\n          case 33:\n            return [3 /*break*/, 1];\n          case 34:\n            return [3 /*break*/, 41];\n          case 35:\n            e_7_1 = _e.sent();\n            e_7 = {\n              error: e_7_1\n            };\n            return [3 /*break*/, 41];\n          case 36:\n            _e.trys.push([36,, 39, 40]);\n            if (!(relations_2_1 && !relations_2_1.done && (_a = relations_2.return))) return [3 /*break*/, 38];\n            return [4 /*yield*/, _a.call(relations_2)];\n          case 37:\n            _e.sent();\n            _e.label = 38;\n          case 38:\n            return [3 /*break*/, 40];\n          case 39:\n            if (e_7) throw e_7.error;\n            return [7 /*endfinally*/];\n          case 40:\n            return [7 /*endfinally*/];\n          case 41:\n            deleteQueue.push({\n              storeName: this.getStorename(nameSpace, srcModel),\n              items: models.map(function (record) {\n                return _this.modelInstanceCreator(_this.getModelConstructorByModelName(nameSpace, srcModel), record);\n              })\n            });\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  AsyncStorageAdapter.prototype.clear = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.db.clear()];\n          case 1:\n            _a.sent();\n            this.db = undefined;\n            this.initPromise = undefined;\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  AsyncStorageAdapter.prototype.batchSave = function (modelConstructor, items) {\n    return __awaiter(this, void 0, void 0, function () {\n      var modelName, namespaceName, storeName, batch, _loop_1, this_1, items_2, items_2_1, item;\n      var e_10, _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            modelName = modelConstructor.name;\n            namespaceName = this.namespaceResolver(modelConstructor);\n            storeName = this.getStorename(namespaceName, modelName);\n            batch = [];\n            _loop_1 = function (item) {\n              var id = item.id;\n              var connectedModels = traverseModel(modelConstructor.name, this_1.modelInstanceCreator(modelConstructor, item), this_1.schema.namespaces[this_1.namespaceResolver(modelConstructor)], this_1.modelInstanceCreator, this_1.getModelConstructorByModelName);\n              var instance = connectedModels.find(function (_a) {\n                var instance = _a.instance;\n                return instance.id === id;\n              }).instance;\n              batch.push(instance);\n            };\n            this_1 = this;\n            try {\n              for (items_2 = __values(items), items_2_1 = items_2.next(); !items_2_1.done; items_2_1 = items_2.next()) {\n                item = items_2_1.value;\n                _loop_1(item);\n              }\n            } catch (e_10_1) {\n              e_10 = {\n                error: e_10_1\n              };\n            } finally {\n              try {\n                if (items_2_1 && !items_2_1.done && (_a = items_2.return)) _a.call(items_2);\n              } finally {\n                if (e_10) throw e_10.error;\n              }\n            }\n            return [4 /*yield*/, this.db.batchSave(storeName, batch)];\n          case 1:\n            return [2 /*return*/, _b.sent()];\n        }\n      });\n    });\n  };\n  return AsyncStorageAdapter;\n}();\nexport { AsyncStorageAdapter };\nexport default new AsyncStorageAdapter();","map":{"version":3,"names":["ConsoleLogger","Logger","AsyncStorageDatabase","ModelPredicateCreator","ModelSortPredicateCreator","isPredicateObj","OpType","QueryOne","exhaustiveCheck","getIndex","getIndexFromAssociation","isModelConstructor","traverseModel","validatePredicate","sortCompareFunction","logger","AsyncStorageAdapter","prototype","getStorenameForModel","modelConstructor","namespace","namespaceResolver","modelName","name","getStorename","storeName","setUp","theSchema","modelInstanceCreator","getModelConstructorByModelName","initPromise","Promise","res","rej","_this","resolve","reject","_a","sent","schema","db","init","error_1","save","model","condition","Object","getPrototypeOf","constructor","connectedModels","namespaces","namespaceName","set","Set","connectionStoreNames","values","map","item","instance","add","get","id","fromDB","_b","predicates","getPredicates","predicateObjs","type","isValid","msg","error","Error","result","connectionStoreNames_1","__asyncValues","resItem","connectionStoreNames_1_1","value","storeName_1","fromDB_1","opType","UPDATE","INSERT","push","load","srcModelName","records","relations","relationships","relationTypes","length","record","relations_1","relation","relations_1_1","fieldName","targetName","relationType","modelConstructor_1","_d","records_1","recordItem","records_1_1","connectionRecord","_e","records_2","records_2_1","query","predicate","pagination","queryById","idFromPredicate","hasSort","sort","hasPagination","limit","__awaiter","getById","filterOnPredicate","filtered","inMemoryPagination","getAll","all","idPredicate","find","p","field","operator","operand","filter","m","sortPredicates","compareFn","page","start","Math","max","end","slice","queryOne","firstOrLast","FIRST","getOne","delete","modelOrModelConstructor","deleteQueue","nameSpace","models","undefined","deleteTraverse","deleteItem","deletedModels","reduce","acc","items","concat","warn","deleteQueue_1","deleteQueue_1_1","items_1","items_1_1","_c","srcModel","relations_2","rel","relations_2_1","index","indexes","associatedWith","models_1","models_1_1","hasOneIndex","hasOneCustomField","allRecords","recordToDelete","childItem","models_2","models_2_1","childrenArray","clear","batchSave","batch","this_1","items_2","__values","items_2_1","next","done"],"sources":["../../../src/storage/adapter/AsyncStorageAdapter.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,aAAa,IAAIC,MAAM,QAAQ,mBAAmB;AAC3D,OAAOC,oBAAoB,MAAM,wBAAwB;AAGzD,SACCC,qBAAqB,EACrBC,yBAAyB,QACnB,kBAAkB;AACzB,SAECC,cAAc,EAIdC,MAAM,EAMNC,QAAQ,QAEF,aAAa;AACpB,SACCC,eAAe,EACfC,QAAQ,EACRC,uBAAuB,EACvBC,kBAAkB,EAClBC,aAAa,EACbC,iBAAiB,EACjBC,mBAAmB,QACb,YAAY;AAEnB,IAAMC,MAAM,GAAG,IAAId,MAAM,CAAC,WAAW,CAAC;AAEtC,IAAAe,mBAAA;EAAA,SAAAA,oBAAA,GAujBA;EA1iBSA,mBAAA,CAAAC,SAAA,CAAAC,oBAAoB,GAA5B,UACCC,gBAAiD;IAEjD,IAAMC,SAAS,GAAG,IAAI,CAACC,iBAAiB,CAACF,gBAAgB,CAAC;IAClD,IAAAG,SAAA,GAAAH,gBAAA,CAAAI,IAAe;IAEvB,OAAO,IAAI,CAACC,YAAY,CAACJ,SAAS,EAAEE,SAAS,CAAC;EAC/C,CAAC;EAEON,mBAAA,CAAAC,SAAA,CAAAO,YAAY,GAApB,UAAqBJ,SAAiB,EAAEE,SAAiB;IACxD,IAAMG,SAAS,GAAML,SAAS,SAAIE,SAAW;IAE7C,OAAOG,SAAS;EACjB,CAAC;EAEKT,mBAAA,CAAAC,SAAA,CAAAS,KAAK,GAAX,UACCC,SAAyB,EACzBN,iBAAoC,EACpCO,oBAA0C,EAC1CC,8BAGoC;;;;;;;iBAEhC,CAAC,IAAI,CAACC,WAAW,EAAjB;YACH,IAAI,CAACA,WAAW,GAAG,IAAIC,OAAO,CAAC,UAACC,GAAG,EAAEC,GAAG;cACvCC,KAAI,CAACC,OAAO,GAAGH,GAAG;cAClBE,KAAI,CAACE,MAAM,GAAGH,GAAG;YAClB,CAAC,CAAC;;;YAEF,qBAAM,IAAI,CAACH,WAAW;;YAAtBO,EAAA,CAAAC,IAAA,EAAsB;YACtB;;YAED,IAAI,CAACC,MAAM,GAAGZ,SAAS;YACvB,IAAI,CAACN,iBAAiB,GAAGA,iBAAiB;YAC1C,IAAI,CAACO,oBAAoB,GAAGA,oBAAoB;YAChD,IAAI,CAACC,8BAA8B,GAAGA,8BAA8B;;;;iBAE/D,CAAC,IAAI,CAACW,EAAE,EAAR;YACH,IAAI,CAACA,EAAE,GAAG,IAAItC,oBAAoB,EAAE;YACpC,qBAAM,IAAI,CAACsC,EAAE,CAACC,IAAI,EAAE;;YAApBJ,EAAA,CAAAC,IAAA,EAAoB;YACpB,IAAI,CAACH,OAAO,EAAE;;;;;;YAGf,IAAI,CAACC,MAAM,CAACM,OAAK,CAAC;;;;;;;GAEnB;EAEK1B,mBAAA,CAAAC,SAAA,CAAA0B,IAAI,GAAV,UACCC,KAAQ,EACRC,SAA6B;;;;;;;;YAEvB1B,gBAAgB,GAAG2B,MAAM,CAACC,cAAc,CAACH,KAAK,CAAC,CACnDI,WAA4C;YACxCvB,SAAS,GAAG,IAAI,CAACP,oBAAoB,CAACC,gBAAgB,CAAC;YACvD8B,eAAe,GAAGrC,aAAa,CACpCO,gBAAgB,CAACI,IAAI,EACrBqB,KAAK,EACL,IAAI,CAACL,MAAM,CAACW,UAAU,CAAC,IAAI,CAAC7B,iBAAiB,CAACF,gBAAgB,CAAC,CAAC,EAChE,IAAI,CAACS,oBAAoB,EACzB,IAAI,CAACC,8BAA8B,CACnC;YACKsB,aAAa,GAAG,IAAI,CAAC9B,iBAAiB,CAACF,gBAAgB,CAAC;YACxDiC,GAAG,GAAG,IAAIC,GAAG,EAAU;YACvBC,oBAAoB,GAAGR,MAAM,CAACS,MAAM,CAACN,eAAe,CAAC,CAACO,GAAG,CAC9D,UAACnB,EAA6B;kBAA3Bf,SAAA,GAAAe,EAAA,CAAAf,SAAS;gBAAEmC,IAAA,GAAApB,EAAA,CAAAoB,IAAI;gBAAEC,QAAA,GAAArB,EAAA,CAAAqB,QAAQ;cAC3B,IAAMjC,SAAS,GAAGS,KAAI,CAACV,YAAY,CAAC2B,aAAa,EAAE7B,SAAS,CAAC;cAC7D8B,GAAG,CAACO,GAAG,CAAClC,SAAS,CAAC;cAClB,OAAO;gBAAEA,SAAS,EAAAA,SAAA;gBAAEgC,IAAI,EAAAA,IAAA;gBAAEC,QAAQ,EAAAA;cAAA,CAAE;YACrC,CAAC,CACD;YACc,qBAAM,IAAI,CAAClB,EAAE,CAACoB,GAAG,CAAChB,KAAK,CAACiB,EAAE,EAAEpC,SAAS,CAAC;;YAA/CqC,MAAM,GAAGC,EAAA,CAAAzB,IAAA,EAAsC;YAErD,IAAIO,SAAS,IAAIiB,MAAM,EAAE;cAClBE,UAAU,GAAG7D,qBAAqB,CAAC8D,aAAa,CAACpB,SAAS,CAAC;cAC7CqB,aAAa,GAAWF,UAAU,CAAAA,UAArB,EAAEG,IAAI,GAAKH,UAAU,CAAAG,IAAf;cAEjCC,OAAO,GAAGvD,iBAAiB,CAACiD,MAAM,EAAEK,IAAI,EAAED,aAAa,CAAC;cAE9D,IAAI,CAACE,OAAO,EAAE;gBACPC,GAAG,GAAG,2BAA2B;gBACvCtD,MAAM,CAACuD,KAAK,CAACD,GAAG,EAAE;kBAAEzB,KAAK,EAAEkB,MAAM;kBAAEjB,SAAS,EAAEqB;gBAAa,CAAE,CAAC;gBAE9D,MAAM,IAAIK,KAAK,CAACF,GAAG,CAAC;;;YAIhBG,MAAM,GAAyC,EAAE;;;;YAE3BC,sBAAA,GAAAC,aAAA,CAAApB,oBAAoB;;;;;;YAA/BqB,OAAO,GAAAC,wBAAA,CAAAC,KAAA;YACfC,WAAA,GAA8BH,OAAO,CAAAlD,SAA5B,EAAEgC,IAAI,GAAekB,OAAO,CAAAlB,IAAtB,EAAEC,QAAQ,GAAKiB,OAAO,CAAAjB,QAAZ;YACzBG,EAAE,GAAKJ,IAAI,CAAAI,EAAT;YAEQ,qBAAM,IAAI,CAACrB,EAAE,CAACoB,GAAG,CAACC,EAAE,EAAEiB,WAAS,CAAC;;YAA5CC,QAAA,GAAYhB,EAAA,CAAAzB,IAAA,EAAgC;YAC5C0C,MAAM,GAAWD,QAAM,GAAGzE,MAAM,CAAC2E,MAAM,GAAG3E,MAAM,CAAC4E,MAAM;kBAEzDrB,EAAE,KAAKjB,KAAK,CAACiB,EAAE,IAAImB,MAAM,KAAK1E,MAAM,CAAC4E,MAAM,GAA3C;YACH,qBAAM,IAAI,CAAC1C,EAAE,CAACG,IAAI,CAACc,IAAI,EAAEqB,WAAS,CAAC;;YAAnCf,EAAA,CAAAzB,IAAA,EAAmC;YAEnCkC,MAAM,CAACW,IAAI,CAAC,CAACzB,QAAQ,EAAEsB,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;YAIjC,sBAAOR,MAAM;;;;GACb;EAEaxD,mBAAA,CAAAC,SAAA,CAAAmE,IAAI,GAAlB,UACCjC,aAAqB,EACrBkC,YAAoB,EACpBC,OAAY;;;;;;;;;YAENlE,SAAS,GAAG,IAAI,CAACmB,MAAM,CAACW,UAAU,CAACC,aAAa,CAAC;YACjDoC,SAAS,GAAGnE,SAAS,CAACoE,aAAa,CAACH,YAAY,CAAC,CAACI,aAAa;YAC/DnC,oBAAoB,GAAGiC,SAAS,CAAC/B,GAAG,CAAC,UAACnB,EAAa;kBAAXf,SAAA,GAAAe,EAAA,CAAAf,SAAS;cACtD,OAAOY,KAAI,CAACV,YAAY,CAAC2B,aAAa,EAAE7B,SAAS,CAAC;YACnD,CAAC,CAAC;YACIH,gBAAgB,GAAG,IAAI,CAACU,8BAA8B,CAC3DsB,aAAa,EACbkC,YAAY,CACZ;YAED,IAAI/B,oBAAoB,CAACoC,MAAM,KAAK,CAAC,EAAE;cACtC,sBAAOJ,OAAO,CAAC9B,GAAG,CAAC,UAAAmC,MAAM;gBACxB,OAAAzD,KAAI,CAACN,oBAAoB,CAACT,gBAAgB,EAAEwE,MAAM,CAAC;cAAnD,CAAmD,CACnD;;;;;YAG2BC,WAAA,GAAAlB,aAAA,CAAAa,SAAS;;;;;;YAArBM,QAAQ,GAAAC,aAAA,CAAAjB,KAAA;YAChBkB,SAAS,GAA0CF,QAAQ,CAAAE,SAAlD,EAAEzE,SAAS,GAA+BuE,QAAQ,CAAAvE,SAAvC,EAAE0E,UAAU,GAAmBH,QAAQ,CAAAG,UAA3B,EAAEC,YAAY,GAAKJ,QAAQ,CAAAI,YAAb;YAChDxE,SAAS,GAAG,IAAI,CAACD,YAAY,CAAC2B,aAAa,EAAE7B,SAAS,CAAC;YACvD4E,kBAAA,GAAmB,IAAI,CAACrE,8BAA8B,CAC3DsB,aAAa,EACb7B,SAAS,CACT;YAEO6E,EAAA,GAAAF,YAAY;;mBACd,SAAS;gBAAT;mBAeA,YAAY;gBAAZ;mBAgBA,UAAU;gBAAV;;;;;YA9B2BG,SAAA,GAAA1B,aAAA,CAAAY,OAAO;;;;;;YAArBe,UAAU,GAAAC,WAAA,CAAAzB,KAAA;iBACtBwB,UAAU,CAACN,SAAS,CAAC,EAArB;YACsB,qBAAM,IAAI,CAACvD,EAAE,CAACoB,GAAG,CACzCyC,UAAU,CAACN,SAAS,CAAC,EACrBtE,SAAS,CACT;;YAHK8E,gBAAgB,GAAGC,EAAA,CAAAlE,IAAA,EAGxB;YAED+D,UAAU,CAACN,SAAS,CAAC,GACpBQ,gBAAgB,IAChB,IAAI,CAAC3E,oBAAoB,CAACsE,kBAAgB,EAAEK,gBAAgB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;YAIhE;;;YAE+BE,SAAA,GAAA/B,aAAA,CAAAY,OAAO;;;;;;YAArBe,UAAU,GAAAK,WAAA,CAAA7B,KAAA;iBACtBwB,UAAU,CAACL,UAAU,CAAC,EAAtB;YACsB,qBAAM,IAAI,CAACxD,EAAE,CAACoB,GAAG,CACzCyC,UAAU,CAACL,UAAU,CAAC,EACtBvE,SAAS,CACT;;YAHK8E,gBAAgB,GAAGC,EAAA,CAAAlE,IAAA,EAGxB;YAED+D,UAAU,CAACN,SAAS,CAAC,GACpBQ,gBAAgB,IAChB,IAAI,CAAC3E,oBAAoB,CAACsE,kBAAgB,EAAEK,gBAAgB,CAAC;YAC9D,OAAOF,UAAU,CAACL,UAAU,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;YAI/B;;YAEA;YACA;;YAEAxF,eAAe,CAACyF,YAAY,CAAC;YAC7B;;;;;;;;;;;;;;;;;;;;;;;;;;YAIH,sBAAOX,OAAO,CAAC9B,GAAG,CAAC,UAAAmC,MAAM;cACxB,OAAAzD,KAAI,CAACN,oBAAoB,CAACT,gBAAgB,EAAEwE,MAAM,CAAC;YAAnD,CAAmD,CACnD;;;;GACD;EAEK3E,mBAAA,CAAAC,SAAA,CAAA0F,KAAK,GAAX,UACCxF,gBAA+C,EAC/CyF,SAA6B,EAC7BC,UAA+B;;;;;;;YAEzBpF,SAAS,GAAG,IAAI,CAACP,oBAAoB,CAACC,gBAAgB,CAAC;YACvDgC,aAAa,GAAG,IAAI,CAAC9B,iBAAiB,CAACF,gBAAgB,CAAC;YAExD6C,UAAU,GACf4C,SAAS,IAAIzG,qBAAqB,CAAC8D,aAAa,CAAC2C,SAAS,CAAC;YACtDE,SAAS,GAAG9C,UAAU,IAAI,IAAI,CAAC+C,eAAe,CAAC/C,UAAU,CAAC;YAC1DgD,OAAO,GAAGH,UAAU,IAAIA,UAAU,CAACI,IAAI;YACvCC,aAAa,GAAGL,UAAU,IAAIA,UAAU,CAACM,KAAK;YAE/B,qBAAO;cAAA,OAAAC,SAAA,CAAAlF,KAAA;;;;;2BACvB4E,SAAS,EAAT;sBACY,qBAAM,IAAI,CAACO,OAAO,CAAC5F,SAAS,EAAEqF,SAAS,CAAC;;sBAAjDnB,MAAM,GAAGtD,EAAA,CAAAC,IAAA,EAAwC;sBACvD,sBAAOqD,MAAM,GAAG,CAACA,MAAM,CAAC,GAAG,EAAE;;2BAG1B3B,UAAU,EAAV;sBACc,qBAAM,IAAI,CAACsD,iBAAiB,CAAC7F,SAAS,EAAEuC,UAAU,CAAC;;sBAA9DuD,QAAQ,GAAGlF,EAAA,CAAAC,IAAA,EAAmD;sBACpE,sBAAO,IAAI,CAACkF,kBAAkB,CAACD,QAAQ,EAAEV,UAAU,CAAC;;4BAGjDG,OAAO,IAAIE,aAAa,GAAxB;sBACS,qBAAM,IAAI,CAACO,MAAM,CAAChG,SAAS,CAAC;;sBAAlCiG,GAAG,GAAGrF,EAAA,CAAAC,IAAA,EAA4B;sBACxC,sBAAO,IAAI,CAACkF,kBAAkB,CAACE,GAAG,EAAEb,UAAU,CAAC;;sBAGhD,sBAAO,IAAI,CAACY,MAAM,CAAChG,SAAS,CAAC;;;;aAC7B,CAAC,CAAE;;YAjBE6D,OAAO,GAAQjD,EAAA,CAAAC,IAAA,EAiBjB;YAEG,qBAAM,IAAI,CAAC8C,IAAI,CAACjC,aAAa,EAAEhC,gBAAgB,CAACI,IAAI,EAAE+D,OAAO,CAAC;;YAArE,sBAAOjD,EAAA,CAAAC,IAAA,EAA8D;;;;GACrE;EAEatB,mBAAA,CAAAC,SAAA,CAAAoG,OAAO,GAArB,UACC5F,SAAiB,EACjBoC,EAAU;;;;;;YAEQ,qBAAM,IAAI,CAACrB,EAAE,CAACoB,GAAG,CAACC,EAAE,EAAEpC,SAAS,CAAC;;YAA5CkE,MAAM,GAAMtD,EAAA,CAAAC,IAAA,EAAgC;YAClD,sBAAOqD,MAAM;;;;GACb;EAEa3E,mBAAA,CAAAC,SAAA,CAAAwG,MAAM,GAApB,UACChG,SAAiB;;;;;YAEV,qBAAM,IAAI,CAACe,EAAE,CAACiF,MAAM,CAAChG,SAAS,CAAC;;YAAtC,sBAAOY,EAAA,CAAAC,IAAA,EAA+B;;;;GACtC;EAEOtB,mBAAA,CAAAC,SAAA,CAAA8F,eAAe,GAAvB,UACC/C,UAA8B;IAEtB,IAAAE,aAAA,GAAAF,UAAA,CAAAA,UAAyB;IACjC,IAAM2D,WAAW,GAChBzD,aAAa,CAACwB,MAAM,KAAK,CAAC,IACzBxB,aAAa,CAAC0D,IAAI,CAClB,UAAAC,CAAC;MAAI,OAAAxH,cAAc,CAACwH,CAAC,CAAC,IAAIA,CAAC,CAACC,KAAK,KAAK,IAAI,IAAID,CAAC,CAACE,QAAQ,KAAK,IAAI;IAA5D,CAA4D,CAC1C;IAEzB,OAAOJ,WAAW,IAAIA,WAAW,CAACK,OAAO;EAC1C,CAAC;EAEahH,mBAAA,CAAAC,SAAA,CAAAqG,iBAAiB,GAA/B,UACC7F,SAAiB,EACjBuC,UAA8B;;;;;;YAEVE,aAAa,GAAWF,UAAU,CAAAA,UAArB,EAAEG,IAAI,GAAKH,UAAU,CAAAG,IAAf;YAEtB,qBAAM,IAAI,CAACsD,MAAM,CAAChG,SAAS,CAAC;;YAAvCiG,GAAG,GAAQrF,EAAA,CAAAC,IAAA,EAA4B;YAEvCiF,QAAQ,GAAGrD,aAAa,GAC3BwD,GAAG,CAACO,MAAM,CAAC,UAAAC,CAAC;cAAI,OAAArH,iBAAiB,CAACqH,CAAC,EAAE/D,IAAI,EAAED,aAAa,CAAC;YAAzC,CAAyC,CAAC,GAC1DwD,GAAG;YAEN,sBAAOH,QAAQ;;;;GACf;EAEOvG,mBAAA,CAAAC,SAAA,CAAAuG,kBAAkB,GAA1B,UACClC,OAAY,EACZuB,UAA+B;IAE/B,IAAIA,UAAU,IAAIvB,OAAO,CAACI,MAAM,GAAG,CAAC,EAAE;MACrC,IAAImB,UAAU,CAACI,IAAI,EAAE;QACpB,IAAMkB,cAAc,GAAG/H,yBAAyB,CAAC6D,aAAa,CAC7D4C,UAAU,CAACI,IAAI,CACf;QAED,IAAIkB,cAAc,CAACzC,MAAM,EAAE;UAC1B,IAAM0C,SAAS,GAAGtH,mBAAmB,CAACqH,cAAc,CAAC;UACrD7C,OAAO,CAAC2B,IAAI,CAACmB,SAAS,CAAC;;;MAGjB,IAAA/F,EAAA,GAAAwE,UAAA,CAAAwB,IAAQ;QAARA,IAAA,GAAAhG,EAAA,kBAAAA,EAAQ;QAAE0B,EAAA,GAAA8C,UAAA,CAAAM,KAAS;QAATA,KAAA,GAAApD,EAAA,kBAAAA,EAAS;MAC3B,IAAMuE,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEH,IAAI,GAAGlB,KAAK,CAAC,IAAI,CAAC;MAE5C,IAAMsB,GAAG,GAAGtB,KAAK,GAAG,CAAC,GAAGmB,KAAK,GAAGnB,KAAK,GAAG7B,OAAO,CAACI,MAAM;MAEtD,OAAOJ,OAAO,CAACoD,KAAK,CAACJ,KAAK,EAAEG,GAAG,CAAC;;IAEjC,OAAOnD,OAAO;EACf,CAAC;EAEKtE,mBAAA,CAAAC,SAAA,CAAA0H,QAAQ,GAAd,UACCxH,gBAA+C,EAC/CyH,WAAsC;IAAtC,IAAAA,WAAA;MAAAA,WAAA,GAAwBrI,QAAQ,CAACsI,KAAK;IAAA;;;;;;YAEhCpH,SAAS,GAAG,IAAI,CAACP,oBAAoB,CAACC,gBAAgB,CAAC;YAC3C,qBAAM,IAAI,CAACqB,EAAE,CAACsG,MAAM,CAACF,WAAW,EAAEnH,SAAS,CAAC;;YAAxD+C,MAAM,GAAMnC,EAAA,CAAAC,IAAA,EAA4C;YAC9D,sBAAOkC,MAAM,IAAI,IAAI,CAAC5C,oBAAoB,CAACT,gBAAgB,EAAEqD,MAAM,CAAC;;;;GACpE;EAEKxD,mBAAA,CAAAC,SAAA,CAAA8H,MAAM,GAAZ,UACCC,uBAA0D,EAC1DnG,SAA6B;;;;;;YAEvBoG,WAAW,GAAwC,EAAE;iBAEvDtI,kBAAkB,CAACqI,uBAAuB,CAAC,EAA3C;YACG7H,gBAAgB,GAAG6H,uBAAuB;YAC1CE,SAAS,GAAG,IAAI,CAAC7H,iBAAiB,CAACF,gBAAgB,CAAC;YAG3C,qBAAM,IAAI,CAACwF,KAAK,CAACxF,gBAAgB,EAAE0B,SAAS,CAAC;;YAAtDsG,MAAM,GAAG9G,EAAA,CAAAC,IAAA,EAA6C;YAEtDiD,SAAS,GAAG,IAAI,CAAChD,MAAM,CAACW,UAAU,CAACgG,SAAS,CAAC,CAAC1D,aAAa,CAChErE,gBAAgB,CAACI,IAAI,CACrB,CAACkE,aAAa;kBAEX5C,SAAS,KAAKuG,SAAS,GAAvB;YACH,qBAAM,IAAI,CAACC,cAAc,CACxB9D,SAAS,EACT4D,MAAM,EACNhI,gBAAgB,CAACI,IAAI,EACrB2H,SAAS,EACTD,WAAW,CACX;;YAND5G,EAAA,CAAAC,IAAA,EAMC;YAED,qBAAM,IAAI,CAACgH,UAAU,CAACL,WAAW,CAAC;;YAAlC5G,EAAA,CAAAC,IAAA,EAAkC;YAE5BiH,aAAa,GAAGN,WAAW,CAACO,MAAM,CACvC,UAACC,GAAG,EAAEpH,EAAS;kBAAPqH,KAAA,GAAArH,EAAA,CAAAqH,KAAK;cAAO,OAAAD,GAAG,CAACE,MAAM,CAACD,KAAK,CAAC;YAAjB,CAAiB,EAChC,EAAE,CACP;YACD,sBAAO,CAACP,MAAM,EAAEI,aAAa,CAAC;;YAE9B,qBAAM,IAAI,CAACF,cAAc,CACxB9D,SAAS,EACT4D,MAAM,EACNhI,gBAAgB,CAACI,IAAI,EACrB2H,SAAS,EACTD,WAAW,CACX;;YAND5G,EAAA,CAAAC,IAAA,EAMC;YAED,qBAAM,IAAI,CAACgH,UAAU,CAACL,WAAW,CAAC;;YAAlC5G,EAAA,CAAAC,IAAA,EAAkC;YAE5BiH,aAAa,GAAGN,WAAW,CAACO,MAAM,CACvC,UAACC,GAAG,EAAEpH,EAAS;kBAAPqH,KAAA,GAAArH,EAAA,CAAAqH,KAAK;cAAO,OAAAD,GAAG,CAACE,MAAM,CAACD,KAAK,CAAC;YAAjB,CAAiB,EAChC,EAAE,CACP;YAED,sBAAO,CAACP,MAAM,EAAEI,aAAa,CAAC;;;;YAGzB3G,KAAK,GAAGoG,uBAAuB;YAE/B7H,gBAAgB,GAAG2B,MAAM,CAACC,cAAc,CAACH,KAAK,CAAC,CACnDI,WAA4C;YACxCkG,SAAS,GAAG,IAAI,CAAC7H,iBAAiB,CAACF,gBAAgB,CAAC;YAEpDM,SAAS,GAAG,IAAI,CAACP,oBAAoB,CAACC,gBAAgB,CAAC;iBACzD0B,SAAS,EAAT;YACY,qBAAM,IAAI,CAACL,EAAE,CAACoB,GAAG,CAAChB,KAAK,CAACiB,EAAE,EAAEpC,SAAS,CAAC;;YAA/CqC,MAAM,GAAGzB,EAAA,CAAAC,IAAA,EAAsC;YAErD,IAAIwB,MAAM,KAAKsF,SAAS,EAAE;cACnB/E,GAAG,GAAG,qCAAqC;cACjDtD,MAAM,CAAC6I,IAAI,CAACvF,GAAG,EAAE;gBAAEzB,KAAK,EAAAA;cAAA,CAAE,CAAC;cAE3B,sBAAO,CAAC,CAACA,KAAK,CAAC,EAAE,EAAE,CAAC;;YAGfoB,UAAU,GAAG7D,qBAAqB,CAAC8D,aAAa,CAACpB,SAAS,CAAC;YAC7CqB,aAAa,GAAWF,UAAU,CAAAA,UAArB,EAAEG,IAAI,GAAKH,UAAU,CAAAG,IAAf;YAEjCC,OAAO,GAAGvD,iBAAiB,CAACiD,MAAM,EAAEK,IAAI,EAAED,aAAa,CAAC;YAC9D,IAAI,CAACE,OAAO,EAAE;cACPC,GAAG,GAAG,2BAA2B;cACvCtD,MAAM,CAACuD,KAAK,CAACD,GAAG,EAAE;gBAAEzB,KAAK,EAAEkB,MAAM;gBAAEjB,SAAS,EAAEqB;cAAa,CAAE,CAAC;cAE9D,MAAM,IAAIK,KAAK,CAACF,GAAG,CAAC;;YAGfkB,SAAS,GAAG,IAAI,CAAChD,MAAM,CAACW,UAAU,CAACgG,SAAS,CAAC,CAAC1D,aAAa,CAChErE,gBAAgB,CAACI,IAAI,CACrB,CAACkE,aAAa;YACf,qBAAM,IAAI,CAAC4D,cAAc,CACxB9D,SAAS,EACT,CAAC3C,KAAK,CAAC,EACPzB,gBAAgB,CAACI,IAAI,EACrB2H,SAAS,EACTD,WAAW,CACX;;YAND5G,EAAA,CAAAC,IAAA,EAMC;;;YAEKiD,SAAS,GAAG,IAAI,CAAChD,MAAM,CAACW,UAAU,CAACgG,SAAS,CAAC,CAAC1D,aAAa,CAChErE,gBAAgB,CAACI,IAAI,CACrB,CAACkE,aAAa;YAEf,qBAAM,IAAI,CAAC4D,cAAc,CACxB9D,SAAS,EACT,CAAC3C,KAAK,CAAC,EACPzB,gBAAgB,CAACI,IAAI,EACrB2H,SAAS,EACTD,WAAW,CACX;;YAND5G,EAAA,CAAAC,IAAA,EAMC;;;YAGF,qBAAM,IAAI,CAACgH,UAAU,CAACL,WAAW,CAAC;;YAAlC5G,EAAA,CAAAC,IAAA,EAAkC;YAE5BiH,aAAa,GAAGN,WAAW,CAACO,MAAM,CACvC,UAACC,GAAG,EAAEpH,EAAS;kBAAPqH,KAAA,GAAArH,EAAA,CAAAqH,KAAK;cAAO,OAAAD,GAAG,CAACE,MAAM,CAACD,KAAK,CAAC;YAAjB,CAAiB,EAChC,EAAE,CACP;YAED,sBAAO,CAAC,CAAC9G,KAAK,CAAC,EAAE2G,aAAa,CAAC;;;;;;GAEhC;EAEavI,mBAAA,CAAAC,SAAA,CAAAqI,UAAU,GAAxB,UACCL,WAAiE;;;;;;;;;YAElCY,aAAA,GAAAnF,aAAA,CAAAuE,WAAW;;;;;;YAAzBK,UAAU,GAAAQ,eAAA,CAAAjF,KAAA;YAClBpD,SAAS,GAAY6H,UAAU,CAAA7H,SAAtB,EAAEiI,KAAK,GAAKJ,UAAU,CAAAI,KAAf;;;;YAECK,OAAA,GAAArF,aAAA,CAAAgF,KAAK;;;;;;YAAbjG,IAAI,GAAAuG,SAAA,CAAAnF,KAAA;iBAChBpB,IAAI,EAAJ;kBACC,OAAOA,IAAI,KAAK,QAAQ,GAAxB;YACGI,EAAE,GAAGJ,IAAI,CAAC,IAAI,CAAC;YACrB,qBAAM,IAAI,CAACjB,EAAE,CAACuG,MAAM,CAAClF,EAAE,EAAEpC,SAAS,CAAC;;YAAnCwI,EAAA,CAAA3H,IAAA,EAAmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAKvC;EACD;;;;;;;;EAQctB,mBAAA,CAAAC,SAAA,CAAAoI,cAAc,GAA5B,UACC9D,SAAyB,EACzB4D,MAAW,EACXe,QAAgB,EAChBhB,SAAiB,EACjBD,WAAgD;;;;;;;;;;YAExBkB,WAAA,GAAAzF,aAAA,CAAAa,SAAS;;;;;;YAAhB6E,GAAG,GAAAC,aAAA,CAAAxF,KAAA;YACXoB,YAAY,GAA4BmE,GAAG,CAAAnE,YAA/B,EAAE3E,SAAS,GAAiB8I,GAAG,CAAA9I,SAApB,EAAE0E,UAAU,GAAKoE,GAAG,CAAApE,UAAR;YACrCvE,SAAS,GAAG,IAAI,CAACD,YAAY,CAAC0H,SAAS,EAAE5H,SAAS,CAAC;YAEnDgJ,KAAK,GACV7J,QAAQ,CACP,IAAI,CAAC8B,MAAM,CAACW,UAAU,CAACgG,SAAS,CAAC,CAAC1D,aAAa,CAAClE,SAAS,CAAC,CACxDmE,aAAa,EACfyE,QAAQ,CACR;YACD;YACA;YACA;YACAxJ,uBAAuB,CACtB,IAAI,CAAC6B,MAAM,CAACW,UAAU,CAACgG,SAAS,CAAC,CAAC1D,aAAa,CAAClE,SAAS,CAAC,CAACiJ,OAAO,EAClEH,GAAG,CAACI,cAAc,CAClB;YAEMrE,EAAA,GAAAF,YAAY;;mBACd,SAAS;gBAAT;mBAsBA,UAAU;gBAAV;mBAiBA,YAAY;gBAAZ;;;;;YAtCsBwE,QAAA,GAAA/F,aAAA,CAAAyE,MAAM;;;;;;YAAfvG,KAAK,GAAA8H,UAAA,CAAA7F,KAAA;YACf8F,WAAW,GAAGL,KAAK,IAAI,MAAM;YAE7BM,iBAAiB,GAAG5E,UAAU,IAAIpD,KAAK;YACvCiC,KAAK,GAAG+F,iBAAiB,GAAGhI,KAAK,CAACoD,UAAU,CAAC,GAAGpD,KAAK,CAACiB,EAAE;YAE3C,qBAAM,IAAI,CAACrB,EAAE,CAACiF,MAAM,CAAChG,SAAS,CAAC;;YAA5CoJ,UAAU,GAAGrE,EAAA,CAAAlE,IAAA,EAA+B;YAC5CwI,cAAc,GAAGD,UAAU,CAAC5C,MAAM,CACvC,UAAA8C,SAAS;cAAI,OAAAA,SAAS,CAACJ,WAAW,CAAC,KAAK9F,KAAK;YAAhC,CAAgC,CAC7C;YAED,qBAAM,IAAI,CAACwE,cAAc,CACxB,IAAI,CAAC9G,MAAM,CAACW,UAAU,CAACgG,SAAS,CAAC,CAAC1D,aAAa,CAAClE,SAAS,CAAC,CACxDmE,aAAa,EACfqF,cAAc,EACdxJ,SAAS,EACT4H,SAAS,EACTD,WAAW,CACX;;YAPDzC,EAAA,CAAAlE,IAAA,EAOC;;;;;;;;;;;;;;;;;;;;;;;;;;;YAEF;;;YAE0B0I,QAAA,GAAAtG,aAAA,CAAAyE,MAAM;;;;;;YAAfvG,KAAK,GAAAqI,UAAA,CAAApG,KAAA;YACF,qBAAM,IAAI,CAACrC,EAAE,CAACiF,MAAM,CAAChG,SAAS,CAAC;;YAA5CoJ,UAAU,GAAGrE,EAAA,CAAAlE,IAAA,EAA+B;YAC5C4I,aAAa,GAAGL,UAAU,CAAC5C,MAAM,CACtC,UAAA8C,SAAS;cAAI,OAAAA,SAAS,CAACT,KAAK,CAAC,KAAK1H,KAAK,CAACiB,EAAE;YAA7B,CAA6B,CAC1C;YAED,qBAAM,IAAI,CAACwF,cAAc,CACxB,IAAI,CAAC9G,MAAM,CAACW,UAAU,CAACgG,SAAS,CAAC,CAAC1D,aAAa,CAAClE,SAAS,CAAC,CACxDmE,aAAa,EACfyF,aAAa,EACb5J,SAAS,EACT4H,SAAS,EACTD,WAAW,CACX;;YAPDzC,EAAA,CAAAlE,IAAA,EAOC;;;;;;;;;;;;;;;;;;;;;;;;;;;YAEF;;YAEA;YACA;;YAEA9B,eAAe,CAACyF,YAAY,CAAC;YAC7B;;;;;;;;;;;;;;;;;;;;;;;;;;YAIHgD,WAAW,CAAC9D,IAAI,CAAC;cAChB1D,SAAS,EAAE,IAAI,CAACD,YAAY,CAAC0H,SAAS,EAAEgB,QAAQ,CAAC;cACjDR,KAAK,EAAEP,MAAM,CAAC3F,GAAG,CAAC,UAAAmC,MAAM;gBACvB,OAAAzD,KAAI,CAACN,oBAAoB,CACxBM,KAAI,CAACL,8BAA8B,CAACqH,SAAS,EAAEgB,QAAQ,CAAC,EACxDvE,MAAM,CACN;cAHD,CAGC;aAEF,CAAC;;;;;GACF;EAEK3E,mBAAA,CAAAC,SAAA,CAAAkK,KAAK,GAAX;;;;;YACC,qBAAM,IAAI,CAAC3I,EAAE,CAAC2I,KAAK,EAAE;;YAArB9I,EAAA,CAAAC,IAAA,EAAqB;YAErB,IAAI,CAACE,EAAE,GAAG4G,SAAS;YACnB,IAAI,CAACtH,WAAW,GAAGsH,SAAS;;;;;GAC5B;EAEKpI,mBAAA,CAAAC,SAAA,CAAAmK,SAAS,GAAf,UACCjK,gBAAiD,EACjDuI,KAA8B;;;;;;;YAEhBpI,SAAS,GAAKH,gBAAgB,CAAAI,IAArB;YACjB4B,aAAa,GAAG,IAAI,CAAC9B,iBAAiB,CAACF,gBAAgB,CAAC;YACxDM,SAAS,GAAG,IAAI,CAACD,YAAY,CAAC2B,aAAa,EAAE7B,SAAS,CAAC;YAEvD+J,KAAK,GAA4B,EAAE;gCAE9B5H,IAAI;cACN,IAAAI,EAAA,GAAAJ,IAAA,CAAAI,EAAE;cAEV,IAAMZ,eAAe,GAAGrC,aAAa,CACpCO,gBAAgB,CAACI,IAAI,EACrB+J,MAAA,CAAK1J,oBAAoB,CAACT,gBAAgB,EAAEsC,IAAI,CAAC,EACjD6H,MAAA,CAAK/I,MAAM,CAACW,UAAU,CAACoI,MAAA,CAAKjK,iBAAiB,CAACF,gBAAgB,CAAC,CAAC,EAChEmK,MAAA,CAAK1J,oBAAoB,EACzB0J,MAAA,CAAKzJ,8BAA8B,CACnC;cAEO,IAAA6B,QAAA,GAAAT,eAAA,CAAA2E,IAAA,WAAAvF,EAAA;;;yBAAQ;cAIhBgJ,KAAK,CAAClG,IAAI,CAACzB,QAAQ,CAAC;;;;cAfrB,KAAmB6H,OAAA,GAAAC,QAAA,CAAA9B,KAAK,GAAA+B,SAAA,GAAAF,OAAA,CAAAG,IAAA,KAAAD,SAAA,CAAAE,IAAA,EAAAF,SAAA,GAAAF,OAAA,CAAAG,IAAA;gBAAbjI,IAAI,GAAAgI,SAAA,CAAA5G,KAAA;wBAAJpB,IAAI;;;;;;;;;;;;;YAkBR,qBAAM,IAAI,CAACjB,EAAE,CAAC4I,SAAS,CAAC3J,SAAS,EAAE4J,KAAK,CAAC;;YAAhD,sBAAOtH,EAAA,CAAAzB,IAAA,EAAyC;;;;GAChD;EACF,OAAAtB,mBAAC;AAAD,CAAC,CAvjBD;;AAyjBA,eAAe,IAAIA,mBAAmB,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module"}