{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { isTranslateTextInput, isTextToSpeechInput, isSpeechToTextInput } from '../Predictions';\nimport { AbstractPredictionsProvider } from './AbstractPredictionsProvider';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractConvertPredictionsProvider');\nvar AbstractConvertPredictionsProvider = /** @class */function (_super) {\n  __extends(AbstractConvertPredictionsProvider, _super);\n  function AbstractConvertPredictionsProvider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AbstractConvertPredictionsProvider.prototype.getCategory = function () {\n    return 'Convert';\n  };\n  AbstractConvertPredictionsProvider.prototype.convert = function (input) {\n    if (isTranslateTextInput(input)) {\n      logger.debug('translateText');\n      return this.translateText(input);\n    } else if (isTextToSpeechInput(input)) {\n      logger.debug('textToSpeech');\n      return this.convertTextToSpeech(input);\n    } else if (isSpeechToTextInput(input)) {\n      logger.debug('textToSpeech');\n      return this.convertSpeechToText(input);\n    }\n  };\n  AbstractConvertPredictionsProvider.prototype.translateText = function (translateTextInput) {\n    throw new Error('convertText is not implemented by this provider');\n  };\n  AbstractConvertPredictionsProvider.prototype.convertTextToSpeech = function (textToSpeechInput) {\n    throw new Error('convertTextToSpeech is not implemented by this provider');\n  };\n  AbstractConvertPredictionsProvider.prototype.convertSpeechToText = function (speechToTextInput) {\n    throw new Error('convertSpeechToText is not implemented by this provider');\n  };\n  return AbstractConvertPredictionsProvider;\n}(AbstractPredictionsProvider);\nexport { AbstractConvertPredictionsProvider };","map":{"version":3,"names":["isTranslateTextInput","isTextToSpeechInput","isSpeechToTextInput","AbstractPredictionsProvider","ConsoleLogger","Logger","logger","AbstractConvertPredictionsProvider","_super","__extends","prototype","getCategory","convert","input","debug","translateText","convertTextToSpeech","convertSpeechToText","translateTextInput","Error","textToSpeechInput","speechToTextInput"],"sources":["../../../src/types/Providers/AbstractConvertPredictionsProvider.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAICA,oBAAoB,EACpBC,mBAAmB,EACnBC,mBAAmB,QAIb,gBAAgB;AACvB,SAASC,2BAA2B,QAAQ,+BAA+B;AAC3E,SAASC,aAAa,IAAIC,MAAM,QAAQ,mBAAmB;AAC3D,IAAMC,MAAM,GAAG,IAAID,MAAM,CAAC,oCAAoC,CAAC;AAE/D,IAAAE,kCAAA,0BAAAC,MAAA;EAAiEC,SAAA,CAAAF,kCAAA,EAAAC,MAAA;EAAjE,SAAAD,mCAAA;;EAqCA;EApCCA,kCAAA,CAAAG,SAAA,CAAAC,WAAW,GAAX;IACC,OAAO,SAAS;EACjB,CAAC;EAEDJ,kCAAA,CAAAG,SAAA,CAAAE,OAAO,GAAP,UACCC,KAAiE;IAEjE,IAAIb,oBAAoB,CAACa,KAAK,CAAC,EAAE;MAChCP,MAAM,CAACQ,KAAK,CAAC,eAAe,CAAC;MAC7B,OAAO,IAAI,CAACC,aAAa,CAACF,KAAK,CAAC;KAChC,MAAM,IAAIZ,mBAAmB,CAACY,KAAK,CAAC,EAAE;MACtCP,MAAM,CAACQ,KAAK,CAAC,cAAc,CAAC;MAC5B,OAAO,IAAI,CAACE,mBAAmB,CAACH,KAAK,CAAC;KACtC,MAAM,IAAIX,mBAAmB,CAACW,KAAK,CAAC,EAAE;MACtCP,MAAM,CAACQ,KAAK,CAAC,cAAc,CAAC;MAC5B,OAAO,IAAI,CAACG,mBAAmB,CAACJ,KAAK,CAAC;;EAExC,CAAC;EAESN,kCAAA,CAAAG,SAAA,CAAAK,aAAa,GAAvB,UACCG,kBAAsC;IAEtC,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;EACnE,CAAC;EAESZ,kCAAA,CAAAG,SAAA,CAAAM,mBAAmB,GAA7B,UACCI,iBAAoC;IAEpC,MAAM,IAAID,KAAK,CAAC,yDAAyD,CAAC;EAC3E,CAAC;EAESZ,kCAAA,CAAAG,SAAA,CAAAO,mBAAmB,GAA7B,UACCI,iBAAoC;IAEpC,MAAM,IAAIF,KAAK,CAAC,yDAAyD,CAAC;EAC3E,CAAC;EACF,OAAAZ,kCAAC;AAAD,CAAC,CArCgEJ,2BAA2B","ignoreList":[]},"metadata":{},"sourceType":"module"}