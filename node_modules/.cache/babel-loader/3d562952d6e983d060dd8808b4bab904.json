{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport Observable from 'zen-observable-ts';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { ReachabilityMonitor } from './datastoreReachability';\nvar logger = new Logger('DataStore');\nvar RECONNECTING_IN = 5000; // 5s this may be configurable in the future\nvar DataStoreConnectivity = /** @class */function () {\n  function DataStoreConnectivity() {\n    this.connectionStatus = {\n      online: false\n    };\n  }\n  DataStoreConnectivity.prototype.status = function () {\n    var _this = this;\n    if (this.observer) {\n      throw new Error('Subscriber already exists');\n    }\n    return new Observable(function (observer) {\n      _this.observer = observer;\n      // Will be used to forward socket connection changes, enhancing Reachability\n      _this.subscription = ReachabilityMonitor.subscribe(function (_a) {\n        var online = _a.online;\n        _this.connectionStatus.online = online;\n        var observerResult = __assign({}, _this.connectionStatus); // copyOf status\n        observer.next(observerResult);\n      });\n      return function () {\n        _this.unsubscribe();\n      };\n    });\n  };\n  DataStoreConnectivity.prototype.unsubscribe = function () {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  };\n  DataStoreConnectivity.prototype.socketDisconnected = function () {\n    var _this = this;\n    if (this.observer && typeof this.observer.next === 'function') {\n      this.observer.next({\n        online: false\n      }); // Notify network issue from the socket\n      setTimeout(function () {\n        var observerResult = __assign({}, _this.connectionStatus); // copyOf status\n        _this.observer.next(observerResult);\n      }, RECONNECTING_IN); // giving time for socket cleanup and network status stabilization\n    }\n  };\n  return DataStoreConnectivity;\n}();\nexport default DataStoreConnectivity;","map":{"version":3,"names":["Observable","ConsoleLogger","Logger","ReachabilityMonitor","logger","RECONNECTING_IN","DataStoreConnectivity","connectionStatus","online","prototype","status","_this","observer","Error","subscription","subscribe","_a","observerResult","__assign","next","unsubscribe","socketDisconnected","setTimeout"],"sources":["../../src/sync/datastoreConnectivity.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;AAAA,OAAOA,UAA6B,MAAM,mBAAmB;AAC7D,SAASC,aAAa,IAAIC,MAAM,QAAQ,mBAAmB;AAC3D,SAASC,mBAAmB,QAAQ,yBAAyB;AAE7D,IAAMC,MAAM,GAAG,IAAIF,MAAM,CAAC,WAAW,CAAC;AAEtC,IAAMG,eAAe,GAAG,IAAI,CAAC,CAAC;AAO9B,IAAAC,qBAAA;EAIC,SAAAA,sBAAA;IACC,IAAI,CAACC,gBAAgB,GAAG;MACvBC,MAAM,EAAE;KACR;EACF;EAEAF,qBAAA,CAAAG,SAAA,CAAAC,MAAM,GAAN;IAAA,IAAAC,KAAA;IACC,IAAI,IAAI,CAACC,QAAQ,EAAE;MAClB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;;IAE7C,OAAO,IAAIb,UAAU,CAAC,UAAAY,QAAQ;MAC7BD,KAAI,CAACC,QAAQ,GAAGA,QAAQ;MACxB;MAEAD,KAAI,CAACG,YAAY,GAAGX,mBAAmB,CAACY,SAAS,CAAC,UAACC,EAAU;YAARR,MAAA,GAAAQ,EAAA,CAAAR,MAAM;QAC1DG,KAAI,CAACJ,gBAAgB,CAACC,MAAM,GAAGA,MAAM;QAErC,IAAMS,cAAc,GAAAC,QAAA,KAAQP,KAAI,CAACJ,gBAAgB,CAAE,CAAC,CAAC;QAErDK,QAAQ,CAACO,IAAI,CAACF,cAAc,CAAC;MAC9B,CAAC,CAAC;MAEF,OAAO;QACNN,KAAI,CAACS,WAAW,EAAE;MACnB,CAAC;IACF,CAAC,CAAC;EACH,CAAC;EAEDd,qBAAA,CAAAG,SAAA,CAAAW,WAAW,GAAX;IACC,IAAI,IAAI,CAACN,YAAY,EAAE;MACtB,IAAI,CAACA,YAAY,CAACM,WAAW,EAAE;;EAEjC,CAAC;EAEDd,qBAAA,CAAAG,SAAA,CAAAY,kBAAkB,GAAlB;IAAA,IAAAV,KAAA;IACC,IAAI,IAAI,CAACC,QAAQ,IAAI,OAAO,IAAI,CAACA,QAAQ,CAACO,IAAI,KAAK,UAAU,EAAE;MAC9D,IAAI,CAACP,QAAQ,CAACO,IAAI,CAAC;QAAEX,MAAM,EAAE;MAAK,CAAE,CAAC,CAAC,CAAC;MAEvCc,UAAU,CAAC;QACV,IAAML,cAAc,GAAAC,QAAA,KAAQP,KAAI,CAACJ,gBAAgB,CAAE,CAAC,CAAC;QACrDI,KAAI,CAACC,QAAQ,CAACO,IAAI,CAACF,cAAc,CAAC;MACnC,CAAC,EAAEZ,eAAe,CAAC,CAAC,CAAC;;EAEvB,CAAC;EACF,OAAAC,qBAAC;AAAD,CAAC,CAhDD","ignoreList":[]},"metadata":{},"sourceType":"module"}