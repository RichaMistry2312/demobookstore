{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLNonNull } from './definition';\nimport { GraphQLString, GraphQLBoolean } from './scalars';\nimport defineToStringTag from '../jsutils/defineToStringTag';\nimport defineToJSON from '../jsutils/defineToJSON';\nimport instanceOf from '../jsutils/instanceOf';\nimport invariant from '../jsutils/invariant';\nimport { DirectiveLocation } from '../language/directiveLocation';\n/**\n * Test if the given value is a GraphQL directive.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isDirective(directive) {\n  return instanceOf(directive, GraphQLDirective);\n}\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\n\nexport var GraphQLDirective = /*#__PURE__*/\nfunction () {\n  function GraphQLDirective(config) {\n    _defineProperty(this, \"name\", void 0);\n    _defineProperty(this, \"description\", void 0);\n    _defineProperty(this, \"locations\", void 0);\n    _defineProperty(this, \"args\", void 0);\n    _defineProperty(this, \"astNode\", void 0);\n    this.name = config.name;\n    this.description = config.description;\n    this.locations = config.locations;\n    this.astNode = config.astNode;\n    !config.name ? invariant(0, 'Directive must be named.') : void 0;\n    !Array.isArray(config.locations) ? invariant(0, 'Must provide locations for directive.') : void 0;\n    var args = config.args;\n    if (!args) {\n      this.args = [];\n    } else {\n      !!Array.isArray(args) ? invariant(0, \"@\".concat(config.name, \" args must be an object with argument names as keys.\")) : void 0;\n      this.args = Object.keys(args).map(function (argName) {\n        var arg = args[argName];\n        return {\n          name: argName,\n          description: arg.description === undefined ? null : arg.description,\n          type: arg.type,\n          defaultValue: arg.defaultValue,\n          astNode: arg.astNode\n        };\n      });\n    }\n  }\n  var _proto = GraphQLDirective.prototype;\n  _proto.toString = function toString() {\n    return '@' + this.name;\n  };\n  return GraphQLDirective;\n}(); // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(GraphQLDirective);\ndefineToJSON(GraphQLDirective);\n\n/**\n * Used to conditionally include fields or fragments.\n */\nexport var GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when ' + 'the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexport var GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` ' + 'argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexport var DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexport var GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [DirectiveLocation.FIELD_DEFINITION, DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a ' + 'suggestion for how to access supported similar data. Formatted using ' + 'the Markdown syntax (as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n/**\n * The full list of specified directives.\n */\n\nexport var specifiedDirectives = [GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective];\nexport function isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(function (specifiedDirective) {\n    return specifiedDirective.name === directive.name;\n  });\n}","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","GraphQLNonNull","GraphQLString","GraphQLBoolean","defineToStringTag","defineToJSON","instanceOf","invariant","DirectiveLocation","isDirective","directive","GraphQLDirective","config","name","description","locations","astNode","Array","isArray","args","concat","keys","map","argName","arg","undefined","type","defaultValue","_proto","prototype","toString","GraphQLIncludeDirective","FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT","if","GraphQLSkipDirective","DEFAULT_DEPRECATION_REASON","GraphQLDeprecatedDirective","FIELD_DEFINITION","ENUM_VALUE","reason","specifiedDirectives","isSpecifiedDirective","some","specifiedDirective"],"sources":["/Users/richa/Desktop/Projects/demo-project/store/bookstore-v2/node_modules/graphql/type/directives.mjs"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLNonNull } from './definition';\nimport { GraphQLString, GraphQLBoolean } from './scalars';\nimport defineToStringTag from '../jsutils/defineToStringTag';\nimport defineToJSON from '../jsutils/defineToJSON';\nimport instanceOf from '../jsutils/instanceOf';\nimport invariant from '../jsutils/invariant';\nimport { DirectiveLocation } from '../language/directiveLocation';\n/**\n * Test if the given value is a GraphQL directive.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isDirective(directive) {\n  return instanceOf(directive, GraphQLDirective);\n}\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\n\nexport var GraphQLDirective =\n/*#__PURE__*/\nfunction () {\n  function GraphQLDirective(config) {\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"description\", void 0);\n\n    _defineProperty(this, \"locations\", void 0);\n\n    _defineProperty(this, \"args\", void 0);\n\n    _defineProperty(this, \"astNode\", void 0);\n\n    this.name = config.name;\n    this.description = config.description;\n    this.locations = config.locations;\n    this.astNode = config.astNode;\n    !config.name ? invariant(0, 'Directive must be named.') : void 0;\n    !Array.isArray(config.locations) ? invariant(0, 'Must provide locations for directive.') : void 0;\n    var args = config.args;\n\n    if (!args) {\n      this.args = [];\n    } else {\n      !!Array.isArray(args) ? invariant(0, \"@\".concat(config.name, \" args must be an object with argument names as keys.\")) : void 0;\n      this.args = Object.keys(args).map(function (argName) {\n        var arg = args[argName];\n        return {\n          name: argName,\n          description: arg.description === undefined ? null : arg.description,\n          type: arg.type,\n          defaultValue: arg.defaultValue,\n          astNode: arg.astNode\n        };\n      });\n    }\n  }\n\n  var _proto = GraphQLDirective.prototype;\n\n  _proto.toString = function toString() {\n    return '@' + this.name;\n  };\n\n  return GraphQLDirective;\n}(); // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(GraphQLDirective);\ndefineToJSON(GraphQLDirective);\n\n/**\n * Used to conditionally include fields or fragments.\n */\nexport var GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when ' + 'the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexport var GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` ' + 'argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexport var DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexport var GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [DirectiveLocation.FIELD_DEFINITION, DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a ' + 'suggestion for how to access supported similar data. Formatted using ' + 'the Markdown syntax (as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n/**\n * The full list of specified directives.\n */\n\nexport var specifiedDirectives = [GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective];\nexport function isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(function (specifiedDirective) {\n    return specifiedDirective.name === directive.name;\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}