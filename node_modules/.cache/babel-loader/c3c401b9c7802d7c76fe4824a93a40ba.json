{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nexport function singleFieldOnlyMessage(name) {\n  return (name ? \"Subscription \\\"\".concat(name, \"\\\" \") : 'Anonymous Subscription ') + 'must select only one top level field.';\n}\n/**\n * Subscriptions must only include one field.\n *\n * A GraphQL subscription is valid only if it contains a single root field.\n */\n\nexport function SingleFieldSubscriptions(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new GraphQLError(singleFieldOnlyMessage(node.name && node.name.value), node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","singleFieldOnlyMessage","name","concat","SingleFieldSubscriptions","context","OperationDefinition","node","operation","selectionSet","selections","length","reportError","value","slice"],"sources":["/Users/richa/Desktop/Projects/demo-project/store/bookstore-v2/node_modules/graphql/validation/rules/SingleFieldSubscriptions.mjs"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nexport function singleFieldOnlyMessage(name) {\n  return (name ? \"Subscription \\\"\".concat(name, \"\\\" \") : 'Anonymous Subscription ') + 'must select only one top level field.';\n}\n/**\n * Subscriptions must only include one field.\n *\n * A GraphQL subscription is valid only if it contains a single root field.\n */\n\nexport function SingleFieldSubscriptions(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new GraphQLError(singleFieldOnlyMessage(node.name && node.name.value), node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,0BAA0B;AACvD,OAAO,SAASC,sBAAsBA,CAACC,IAAI,EAAE;EAC3C,OAAO,CAACA,IAAI,GAAG,iBAAiB,CAACC,MAAM,CAACD,IAAI,EAAE,KAAK,CAAC,GAAG,yBAAyB,IAAI,uCAAuC;AAC7H;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,wBAAwBA,CAACC,OAAO,EAAE;EAChD,OAAO;IACLC,mBAAmB,EAAE,SAASA,mBAAmBA,CAACC,IAAI,EAAE;MACtD,IAAIA,IAAI,CAACC,SAAS,KAAK,cAAc,EAAE;QACrC,IAAID,IAAI,CAACE,YAAY,CAACC,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE;UAC7CN,OAAO,CAACO,WAAW,CAAC,IAAIZ,YAAY,CAACC,sBAAsB,CAACM,IAAI,CAACL,IAAI,IAAIK,IAAI,CAACL,IAAI,CAACW,KAAK,CAAC,EAAEN,IAAI,CAACE,YAAY,CAACC,UAAU,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACpI;MACF;IACF;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module"}