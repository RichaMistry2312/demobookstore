{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * Coffeescript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n */\nexport default function blockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = null;\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n    if (indent < line.length && (commonIndent === null || indent < commonIndent)) {\n      commonIndent = indent;\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n  if (commonIndent) {\n    for (var _i = 1; _i < lines.length; _i++) {\n      lines[_i] = lines[_i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  } // Return a string of the lines joined with U+000A.\n\n  return lines.join('\\n');\n}\nfunction leadingWhitespace(str) {\n  var i = 0;\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n  return i;\n}\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}","map":{"version":3,"names":["blockStringValue","rawString","lines","split","commonIndent","i","length","line","indent","leadingWhitespace","_i","slice","isBlank","shift","pop","join","str"],"sources":["/Users/richa/Desktop/Projects/demo-project/store/bookstore-v2/node_modules/graphql/language/blockStringValue.mjs"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * Coffeescript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n */\nexport default function blockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = null;\n\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n\n    if (indent < line.length && (commonIndent === null || indent < commonIndent)) {\n      commonIndent = indent;\n\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n\n  if (commonIndent) {\n    for (var _i = 1; _i < lines.length; _i++) {\n      lines[_i] = lines[_i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.join('\\n');\n}\n\nfunction leadingWhitespace(str) {\n  var i = 0;\n\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n\n  return i;\n}\n\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,gBAAgBA,CAACC,SAAS,EAAE;EAClD;EACA,IAAIC,KAAK,GAAGD,SAAS,CAACE,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;;EAE7C,IAAIC,YAAY,GAAG,IAAI;EAEvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,IAAIE,IAAI,GAAGL,KAAK,CAACG,CAAC,CAAC;IACnB,IAAIG,MAAM,GAAGC,iBAAiB,CAACF,IAAI,CAAC;IAEpC,IAAIC,MAAM,GAAGD,IAAI,CAACD,MAAM,KAAKF,YAAY,KAAK,IAAI,IAAII,MAAM,GAAGJ,YAAY,CAAC,EAAE;MAC5EA,YAAY,GAAGI,MAAM;MAErB,IAAIJ,YAAY,KAAK,CAAC,EAAE;QACtB;MACF;IACF;EACF;EAEA,IAAIA,YAAY,EAAE;IAChB,KAAK,IAAIM,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGR,KAAK,CAACI,MAAM,EAAEI,EAAE,EAAE,EAAE;MACxCR,KAAK,CAACQ,EAAE,CAAC,GAAGR,KAAK,CAACQ,EAAE,CAAC,CAACC,KAAK,CAACP,YAAY,CAAC;IAC3C;EACF,CAAC,CAAC;;EAGF,OAAOF,KAAK,CAACI,MAAM,GAAG,CAAC,IAAIM,OAAO,CAACV,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;IAC5CA,KAAK,CAACW,KAAK,CAAC,CAAC;EACf;EAEA,OAAOX,KAAK,CAACI,MAAM,GAAG,CAAC,IAAIM,OAAO,CAACV,KAAK,CAACA,KAAK,CAACI,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE;IAC3DJ,KAAK,CAACY,GAAG,CAAC,CAAC;EACb,CAAC,CAAC;;EAGF,OAAOZ,KAAK,CAACa,IAAI,CAAC,IAAI,CAAC;AACzB;AAEA,SAASN,iBAAiBA,CAACO,GAAG,EAAE;EAC9B,IAAIX,CAAC,GAAG,CAAC;EAET,OAAOA,CAAC,GAAGW,GAAG,CAACV,MAAM,KAAKU,GAAG,CAACX,CAAC,CAAC,KAAK,GAAG,IAAIW,GAAG,CAACX,CAAC,CAAC,KAAK,IAAI,CAAC,EAAE;IAC5DA,CAAC,EAAE;EACL;EAEA,OAAOA,CAAC;AACV;AAEA,SAASO,OAAOA,CAACI,GAAG,EAAE;EACpB,OAAOP,iBAAiB,CAACO,GAAG,CAAC,KAAKA,GAAG,CAACV,MAAM;AAC9C","ignoreList":[]},"metadata":{},"sourceType":"module"}