{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nexport var loggerMiddleware = function () {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var logger, response, httpResponse;\n        var _a;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              logger = context.logger;\n              return [4 /*yield*/, next(args)];\n            case 1:\n              response = _b.sent();\n              if (!logger) {\n                return [2 /*return*/, response];\n              }\n              httpResponse = response.response;\n              if (typeof logger.info === \"function\") {\n                logger.info({\n                  metadata: {\n                    statusCode: httpResponse.statusCode,\n                    requestId: (_a = httpResponse.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : httpResponse.headers[\"x-amzn-request-id\"],\n                    extendedRequestId: httpResponse.headers[\"x-amz-id-2\"],\n                    cfId: httpResponse.headers[\"x-amz-cf-id\"]\n                  }\n                });\n              }\n              return [2 /*return*/, response];\n          }\n        });\n      });\n    };\n  };\n};\nexport var loggerMiddlewareOptions = {\n  name: \"loggerMiddleware\",\n  tags: [\"LOGGER\"],\n  step: \"initialize\"\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport var getLoggerPlugin = function (options) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"names":["loggerMiddleware","next","context","args","__awaiter","logger","response","_b","sent","httpResponse","info","metadata","statusCode","requestId","_a","headers","extendedRequestId","cfId","loggerMiddlewareOptions","name","tags","step","getLoggerPlugin","options","applyToStack","clientStack","add"],"sources":["../../src/loggerMiddleware.ts"],"sourcesContent":["import { HttpResponse } from \"@aws-sdk/protocol-http\";\nimport {\n  AbsoluteLocation,\n  HandlerExecutionContext,\n  InitializeHandler,\n  InitializeHandlerArguments,\n  InitializeHandlerOptions,\n  InitializeHandlerOutput,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nexport const loggerMiddleware = () => <Output extends MetadataBearer = MetadataBearer>(\n  next: InitializeHandler<any, Output>,\n  context: HandlerExecutionContext\n): InitializeHandler<any, Output> => async (\n  args: InitializeHandlerArguments<any>\n): Promise<InitializeHandlerOutput<Output>> => {\n  const { logger } = context;\n\n  const response = await next(args);\n\n  if (!logger) {\n    return response;\n  }\n\n  const httpResponse = response.response as HttpResponse;\n\n  if (typeof logger.info === \"function\") {\n    logger.info({\n      metadata: {\n        statusCode: httpResponse.statusCode,\n        requestId: httpResponse.headers[\"x-amzn-requestid\"] ?? httpResponse.headers[\"x-amzn-request-id\"],\n        extendedRequestId: httpResponse.headers[\"x-amz-id-2\"],\n        cfId: httpResponse.headers[\"x-amz-cf-id\"],\n      },\n    });\n  }\n\n  return response;\n};\n\nexport const loggerMiddlewareOptions: InitializeHandlerOptions & AbsoluteLocation = {\n  name: \"loggerMiddleware\",\n  tags: [\"LOGGER\"],\n  step: \"initialize\",\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getLoggerPlugin = (options: any): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n  },\n});\n"],"mappings":";AAYA,OAAO,IAAMA,gBAAgB,GAAG,SAAAA,CAAA;EAAM,iBACpCC,IAAoC,EACpCC,OAAgC;IACG,iBACnCC,IAAqC;MAAA,OAAAC,SAAA;;;;;;cAE7BC,MAAM,GAAKH,OAAO,CAAAG,MAAZ;cAEG,qBAAMJ,IAAI,CAACE,IAAI,CAAC;;cAA3BG,QAAQ,GAAGC,EAAA,CAAAC,IAAA,EAAgB;cAEjC,IAAI,CAACH,MAAM,EAAE;gBACX,sBAAOC,QAAQ;;cAGXG,YAAY,GAAGH,QAAQ,CAACA,QAAwB;cAEtD,IAAI,OAAOD,MAAM,CAACK,IAAI,KAAK,UAAU,EAAE;gBACrCL,MAAM,CAACK,IAAI,CAAC;kBACVC,QAAQ,EAAE;oBACRC,UAAU,EAAEH,YAAY,CAACG,UAAU;oBACnCC,SAAS,GAAAC,EAAA,GAAEL,YAAY,CAACM,OAAO,CAAC,kBAAkB,CAAC,cAAAD,EAAA,cAAAA,EAAA,GAAIL,YAAY,CAACM,OAAO,CAAC,mBAAmB,CAAC;oBAChGC,iBAAiB,EAAEP,YAAY,CAACM,OAAO,CAAC,YAAY,CAAC;oBACrDE,IAAI,EAAER,YAAY,CAACM,OAAO,CAAC,aAAa;;iBAE3C,CAAC;;cAGJ,sBAAOT,QAAQ;;;;KAChB;EAzBoC,CAyBpC;AA5BqC,CA4BrC;AAED,OAAO,IAAMY,uBAAuB,GAAgD;EAClFC,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,CAAC,QAAQ,CAAC;EAChBC,IAAI,EAAE;CACP;AAED;AACA,OAAO,IAAMC,eAAe,GAAG,SAAAA,CAACC,OAAY;EAA0B,OAAC;IACrEC,YAAY,EAAE,SAAAA,CAACC,WAAW;MACxBA,WAAW,CAACC,GAAG,CAAC1B,gBAAgB,EAAE,EAAEkB,uBAAuB,CAAC;IAC9D;GACD;AAJqE,CAIpE","ignoreList":[]},"metadata":{},"sourceType":"module"}