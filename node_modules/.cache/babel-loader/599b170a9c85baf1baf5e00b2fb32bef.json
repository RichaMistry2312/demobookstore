{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nexport function anonOperationNotAloneMessage() {\n  return 'This anonymous operation must be the only defined operation.';\n}\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n */\n\nexport function LoneAnonymousOperation(context) {\n  var operationCount = 0;\n  return {\n    Document: function Document(node) {\n      operationCount = node.definitions.filter(function (definition) {\n        return definition.kind === Kind.OPERATION_DEFINITION;\n      }).length;\n    },\n    OperationDefinition: function OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(new GraphQLError(anonOperationNotAloneMessage(), [node]));\n      }\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","Kind","anonOperationNotAloneMessage","LoneAnonymousOperation","context","operationCount","Document","node","definitions","filter","definition","kind","OPERATION_DEFINITION","length","OperationDefinition","name","reportError"],"sources":["/Users/richa/Desktop/Projects/demo-project/store/bookstore-v2/node_modules/graphql/validation/rules/LoneAnonymousOperation.mjs"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nexport function anonOperationNotAloneMessage() {\n  return 'This anonymous operation must be the only defined operation.';\n}\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n */\n\nexport function LoneAnonymousOperation(context) {\n  var operationCount = 0;\n  return {\n    Document: function Document(node) {\n      operationCount = node.definitions.filter(function (definition) {\n        return definition.kind === Kind.OPERATION_DEFINITION;\n      }).length;\n    },\n    OperationDefinition: function OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(new GraphQLError(anonOperationNotAloneMessage(), [node]));\n      }\n    }\n  };\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,0BAA0B;AACvD,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,OAAO,SAASC,4BAA4BA,CAAA,EAAG;EAC7C,OAAO,8DAA8D;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,sBAAsBA,CAACC,OAAO,EAAE;EAC9C,IAAIC,cAAc,GAAG,CAAC;EACtB,OAAO;IACLC,QAAQ,EAAE,SAASA,QAAQA,CAACC,IAAI,EAAE;MAChCF,cAAc,GAAGE,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC,UAAUC,UAAU,EAAE;QAC7D,OAAOA,UAAU,CAACC,IAAI,KAAKV,IAAI,CAACW,oBAAoB;MACtD,CAAC,CAAC,CAACC,MAAM;IACX,CAAC;IACDC,mBAAmB,EAAE,SAASA,mBAAmBA,CAACP,IAAI,EAAE;MACtD,IAAI,CAACA,IAAI,CAACQ,IAAI,IAAIV,cAAc,GAAG,CAAC,EAAE;QACpCD,OAAO,CAACY,WAAW,CAAC,IAAIhB,YAAY,CAACE,4BAA4B,CAAC,CAAC,EAAE,CAACK,IAAI,CAAC,CAAC,CAAC;MAC/E;IACF;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module"}