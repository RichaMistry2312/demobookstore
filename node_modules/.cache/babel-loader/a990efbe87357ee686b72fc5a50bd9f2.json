{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { ClientDefaultValues as __ClientDefaultValues } from \"./runtimeConfig\";\nimport { resolveEndpointsConfig, resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Amazon Lex provides both build and runtime endpoints. Each endpoint provides a set of\n *       operations (API). Your conversational bot uses the runtime API to understand user utterances\n *       (user input text or voice). For example, suppose a user says \"I want pizza\", your bot sends\n *       this input to Amazon Lex using the runtime API. Amazon Lex recognizes that the user request is\n *       for the OrderPizza intent (one of the intents defined in the bot). Then Amazon Lex engages in\n *       user conversation on behalf of the bot to elicit required information (slot values, such as\n *       pizza size and crust type), and then performs fulfillment activity (that you configured when\n *       you created the bot). You use the build-time API to create and manage your Amazon Lex bot. For\n *       a list of build-time operations, see the build-time API, . </p>\n */\nvar LexRuntimeServiceClient = /** @class */function (_super) {\n  __extends(LexRuntimeServiceClient, _super);\n  function LexRuntimeServiceClient(configuration) {\n    var _this = this;\n    var _config_0 = __assign(__assign({}, __ClientDefaultValues), configuration);\n    var _config_1 = resolveRegionConfig(_config_0);\n    var _config_2 = resolveEndpointsConfig(_config_1);\n    var _config_3 = resolveAwsAuthConfig(_config_2);\n    var _config_4 = resolveRetryConfig(_config_3);\n    var _config_5 = resolveUserAgentConfig(_config_4);\n    var _config_6 = resolveHostHeaderConfig(_config_5);\n    _this = _super.call(this, _config_6) || this;\n    _this.config = _config_6;\n    _this.middlewareStack.use(getAwsAuthPlugin(_this.config));\n    _this.middlewareStack.use(getRetryPlugin(_this.config));\n    _this.middlewareStack.use(getUserAgentPlugin(_this.config));\n    _this.middlewareStack.use(getContentLengthPlugin(_this.config));\n    _this.middlewareStack.use(getHostHeaderPlugin(_this.config));\n    _this.middlewareStack.use(getLoggerPlugin(_this.config));\n    return _this;\n  }\n  LexRuntimeServiceClient.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n  };\n  return LexRuntimeServiceClient;\n}(__Client);\nexport { LexRuntimeServiceClient };","map":{"version":3,"names":["ClientDefaultValues","__ClientDefaultValues","resolveEndpointsConfig","resolveRegionConfig","getContentLengthPlugin","getHostHeaderPlugin","resolveHostHeaderConfig","getLoggerPlugin","getRetryPlugin","resolveRetryConfig","getAwsAuthPlugin","resolveAwsAuthConfig","getUserAgentPlugin","resolveUserAgentConfig","Client","__Client","LexRuntimeServiceClient","_super","__extends","configuration","_this","_config_0","__assign","_config_1","_config_2","_config_3","_config_4","_config_5","_config_6","call","config","middlewareStack","use","prototype","destroy"],"sources":["../../LexRuntimeServiceClient.ts"],"sourcesContent":[null],"mappings":";AAKA,SAASA,mBAAmB,IAAIC,qBAAqB,QAAQ,iBAAiB;AAC9E,SAKEC,sBAAsB,EACtBC,mBAAmB,QACd,0BAA0B;AACjC,SAASC,sBAAsB,QAAQ,oCAAoC;AAC3E,SAGEC,mBAAmB,EACnBC,uBAAuB,QAClB,iCAAiC;AACxC,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAAgDC,cAAc,EAAEC,kBAAkB,QAAQ,2BAA2B;AACrH,SAGEC,gBAAgB,EAChBC,oBAAoB,QACf,6BAA6B;AACpC,SAGEC,kBAAkB,EAClBC,sBAAsB,QACjB,gCAAgC;AAEvC,SACEC,MAAM,IAAIC,QAAQ,QAGb,wBAAwB;AA4I/B;;;;;;;;;;;AAWA,IAAAC,uBAAA,0BAAAC,MAAA;EAA6CC,SAAA,CAAAF,uBAAA,EAAAC,MAAA;EAQ3C,SAAAD,wBAAYG,aAA4C;IAAxD,IAAAC,KAAA;IACE,IAAIC,SAAS,GAAAC,QAAA,CAAAA,QAAA,KACRrB,qBAAqB,GACrBkB,aAAa,CACjB;IACD,IAAII,SAAS,GAAGpB,mBAAmB,CAACkB,SAAS,CAAC;IAC9C,IAAIG,SAAS,GAAGtB,sBAAsB,CAACqB,SAAS,CAAC;IACjD,IAAIE,SAAS,GAAGd,oBAAoB,CAACa,SAAS,CAAC;IAC/C,IAAIE,SAAS,GAAGjB,kBAAkB,CAACgB,SAAS,CAAC;IAC7C,IAAIE,SAAS,GAAGd,sBAAsB,CAACa,SAAS,CAAC;IACjD,IAAIE,SAAS,GAAGtB,uBAAuB,CAACqB,SAAS,CAAC;IAClDP,KAAA,GAAAH,MAAA,CAAAY,IAAA,OAAMD,SAAS,CAAC;IAChBR,KAAI,CAACU,MAAM,GAAGF,SAAS;IACvBR,KAAI,CAACW,eAAe,CAACC,GAAG,CAACtB,gBAAgB,CAACU,KAAI,CAACU,MAAM,CAAC,CAAC;IACvDV,KAAI,CAACW,eAAe,CAACC,GAAG,CAACxB,cAAc,CAACY,KAAI,CAACU,MAAM,CAAC,CAAC;IACrDV,KAAI,CAACW,eAAe,CAACC,GAAG,CAACpB,kBAAkB,CAACQ,KAAI,CAACU,MAAM,CAAC,CAAC;IACzDV,KAAI,CAACW,eAAe,CAACC,GAAG,CAAC5B,sBAAsB,CAACgB,KAAI,CAACU,MAAM,CAAC,CAAC;IAC7DV,KAAI,CAACW,eAAe,CAACC,GAAG,CAAC3B,mBAAmB,CAACe,KAAI,CAACU,MAAM,CAAC,CAAC;IAC1DV,KAAI,CAACW,eAAe,CAACC,GAAG,CAACzB,eAAe,CAACa,KAAI,CAACU,MAAM,CAAC,CAAC;;EACxD;EAEAd,uBAAA,CAAAiB,SAAA,CAAAC,OAAO,GAAP;IACEjB,MAAA,CAAAgB,SAAA,CAAMC,OAAO,CAAAL,IAAA,MAAE;EACjB,CAAC;EACH,OAAAb,uBAAC;AAAD,CAAC,CAhC4CD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}