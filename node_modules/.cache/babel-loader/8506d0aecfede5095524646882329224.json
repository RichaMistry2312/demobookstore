{"ast":null,"code":"/**\n * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { browserOrNode } from '../JS';\nimport { Amplify } from '../Amplify';\n/**\n * Provides a means to registering a service worker in the browser\n * and communicating with it via postMessage events.\n * https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/\n *\n * postMessage events are currently not supported in all browsers. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API\n *\n * At the minmum this class will register the service worker and listen\n * and attempt to dispatch messages on state change and record analytics\n * events based on the service worker lifecycle.\n */\nvar ServiceWorkerClass = /** @class */function () {\n  function ServiceWorkerClass() {\n    // The AWS Amplify logger\n    this._logger = new Logger('ServiceWorker');\n  }\n  Object.defineProperty(ServiceWorkerClass.prototype, \"serviceWorker\", {\n    /**\n     * Get the currently active service worker\n     */\n    get: function () {\n      return this._serviceWorker;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Register the service-worker.js file in the browser\n   * Make sure the service-worker.js is part of the build\n   * for example with Angular, modify the angular-cli.json file\n   * and add to \"assets\" array \"service-worker.js\"\n   * @param {string} - (optional) Service worker file. Defaults to \"/service-worker.js\"\n   * @param {string} - (optional) The service worker scope. Defaults to \"/\"\n   *  - API Doc: https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/register\n   * @returns {Promise}\n   *\t- resolve(ServiceWorkerRegistration)\n   *\t- reject(Error)\n   **/\n  ServiceWorkerClass.prototype.register = function (filePath, scope) {\n    var _this = this;\n    if (filePath === void 0) {\n      filePath = '/service-worker.js';\n    }\n    if (scope === void 0) {\n      scope = '/';\n    }\n    this._logger.debug(\"registering \" + filePath);\n    this._logger.debug(\"registering service worker with scope \" + scope);\n    return new Promise(function (resolve, reject) {\n      if (navigator && 'serviceWorker' in navigator) {\n        navigator.serviceWorker.register(filePath, {\n          scope: scope\n        }).then(function (registration) {\n          if (registration.installing) {\n            _this._serviceWorker = registration.installing;\n          } else if (registration.waiting) {\n            _this._serviceWorker = registration.waiting;\n          } else if (registration.active) {\n            _this._serviceWorker = registration.active;\n          }\n          _this._registration = registration;\n          _this._setupListeners();\n          _this._logger.debug(\"Service Worker Registration Success: \" + registration);\n          return resolve(registration);\n        }).catch(function (error) {\n          _this._logger.debug(\"Service Worker Registration Failed \" + error);\n          return reject(error);\n        });\n      } else {\n        return reject(new Error('Service Worker not available'));\n      }\n    });\n  };\n  /**\n   * Enable web push notifications. If not subscribed, a new subscription will\n   * be created and registered.\n   * \tTest Push Server: https://web-push-codelab.glitch.me/\n   * \tPush Server Libraries: https://github.com/web-push-libs/\n   * \tAPI Doc: https://developers.google.com/web/fundamentals/codelabs/push-notifications/\n   * @param publicKey\n   * @returns {Promise}\n   * \t- resolve(PushSubscription)\n   *  - reject(Error)\n   */\n  ServiceWorkerClass.prototype.enablePush = function (publicKey) {\n    var _this = this;\n    if (!this._registration) throw new Error('Service Worker not registered');\n    this._publicKey = publicKey;\n    return new Promise(function (resolve, reject) {\n      if (browserOrNode().isBrowser) {\n        _this._registration.pushManager.getSubscription().then(function (subscription) {\n          if (subscription) {\n            _this._subscription = subscription;\n            _this._logger.debug(\"User is subscribed to push: \" + JSON.stringify(subscription));\n            resolve(subscription);\n          } else {\n            _this._logger.debug(\"User is NOT subscribed to push\");\n            return _this._registration.pushManager.subscribe({\n              userVisibleOnly: true,\n              applicationServerKey: _this._urlB64ToUint8Array(publicKey)\n            }).then(function (subscription) {\n              _this._subscription = subscription;\n              _this._logger.debug(\"User subscribed: \" + JSON.stringify(subscription));\n              resolve(subscription);\n            }).catch(function (error) {\n              _this._logger.error(error);\n            });\n          }\n        });\n      } else {\n        return reject(new Error('Service Worker not available'));\n      }\n    });\n  };\n  /**\n   * Convert a base64 encoded string to a Uint8 array for the push server key\n   * @param base64String\n   */\n  ServiceWorkerClass.prototype._urlB64ToUint8Array = function (base64String) {\n    var padding = '='.repeat((4 - base64String.length % 4) % 4);\n    var base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n    var rawData = window.atob(base64);\n    var outputArray = new Uint8Array(rawData.length);\n    for (var i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n  };\n  /**\n   * Send a message to the service worker. The service worker needs\n   * to implement `self.addEventListener('message') to handle the\n   * message. This ***currently*** does not work in Safari or IE.\n   * @param {object | string} - An arbitrary JSON object or string message to send to the service worker\n   *\t- see: https://developer.mozilla.org/en-US/docs/Web/API/Transferable\n   * @returns {Promise}\n   **/\n  ServiceWorkerClass.prototype.send = function (message) {\n    if (this._serviceWorker) {\n      this._serviceWorker.postMessage(typeof message === 'object' ? JSON.stringify(message) : message);\n    }\n  };\n  /**\n   * Listen for service worker state change and message events\n   * https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker/state\n   **/\n  ServiceWorkerClass.prototype._setupListeners = function () {\n    var _this = this;\n    this._serviceWorker.addEventListener('statechange', function (event) {\n      var currentState = _this._serviceWorker.state;\n      _this._logger.debug(\"ServiceWorker statechange: \" + currentState);\n      if (Amplify.Analytics && typeof Amplify.Analytics.record === 'function') {\n        Amplify.Analytics.record({\n          name: 'ServiceWorker',\n          attributes: {\n            state: currentState\n          }\n        });\n      }\n    });\n    this._serviceWorker.addEventListener('message', function (event) {\n      _this._logger.debug(\"ServiceWorker message event: \" + event);\n    });\n  };\n  return ServiceWorkerClass;\n}();\nexport { ServiceWorkerClass };\n/**\n * @deprecated use named import\n */\nexport default ServiceWorkerClass;","map":{"version":3,"names":["ConsoleLogger","Logger","browserOrNode","Amplify","ServiceWorkerClass","_logger","Object","defineProperty","prototype","get","_serviceWorker","register","filePath","scope","_this","debug","Promise","resolve","reject","navigator","serviceWorker","then","registration","installing","waiting","active","_registration","_setupListeners","catch","error","Error","enablePush","publicKey","_publicKey","isBrowser","pushManager","getSubscription","subscription","_subscription","JSON","stringify","subscribe","userVisibleOnly","applicationServerKey","_urlB64ToUint8Array","base64String","padding","repeat","length","base64","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","send","message","postMessage","addEventListener","event","currentState","state","Analytics","record","name","attributes"],"sources":["../../src/ServiceWorker/ServiceWorker.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}