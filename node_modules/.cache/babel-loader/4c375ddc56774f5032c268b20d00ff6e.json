{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport isNullish from '../jsutils/isNullish';\nimport isInvalid from '../jsutils/isInvalid';\nimport objectValues from '../jsutils/objectValues';\nimport { astFromValue } from '../utilities/astFromValue';\nimport { print } from '../language/printer';\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from '../type/definition';\nimport { GraphQLString, isSpecifiedScalarType } from '../type/scalars';\nimport { GraphQLDirective, DEFAULT_DEPRECATION_REASON, isSpecifiedDirective } from '../type/directives';\nimport { isIntrospectionType } from '../type/introspection';\n\n/**\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nexport function printSchema(schema, options) {\n  return printFilteredSchema(schema, function (n) {\n    return !isSpecifiedDirective(n);\n  }, isDefinedType, options);\n}\nexport function printIntrospectionSchema(schema, options) {\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType, options);\n}\nfunction isDefinedType(type) {\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\n}\nfunction printFilteredSchema(schema, directiveFilter, typeFilter, options) {\n  var directives = schema.getDirectives().filter(directiveFilter);\n  var typeMap = schema.getTypeMap();\n  var types = objectValues(typeMap).sort(function (type1, type2) {\n    return type1.name.localeCompare(type2.name);\n  }).filter(typeFilter);\n  return [printSchemaDefinition(schema)].concat(directives.map(function (directive) {\n    return printDirective(directive, options);\n  }), types.map(function (type) {\n    return printType(type, options);\n  })).filter(Boolean).join('\\n\\n') + '\\n';\n}\nfunction printSchemaDefinition(schema) {\n  if (isSchemaOfCommonNames(schema)) {\n    return;\n  }\n  var operationTypes = [];\n  var queryType = schema.getQueryType();\n  if (queryType) {\n    operationTypes.push(\"  query: \".concat(queryType.name));\n  }\n  var mutationType = schema.getMutationType();\n  if (mutationType) {\n    operationTypes.push(\"  mutation: \".concat(mutationType.name));\n  }\n  var subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType) {\n    operationTypes.push(\"  subscription: \".concat(subscriptionType.name));\n  }\n  return \"schema {\\n\".concat(operationTypes.join('\\n'), \"\\n}\");\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *   }\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\nfunction isSchemaOfCommonNames(schema) {\n  var queryType = schema.getQueryType();\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n  var mutationType = schema.getMutationType();\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n  var subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n  return true;\n}\nexport function printType(type, options) {\n  if (isScalarType(type)) {\n    return printScalar(type, options);\n  } else if (isObjectType(type)) {\n    return printObject(type, options);\n  } else if (isInterfaceType(type)) {\n    return printInterface(type, options);\n  } else if (isUnionType(type)) {\n    return printUnion(type, options);\n  } else if (isEnumType(type)) {\n    return printEnum(type, options);\n  } else if (isInputObjectType(type)) {\n    return printInputObject(type, options);\n  }\n  /* istanbul ignore next */\n\n  throw new Error(\"Unknown type: \".concat(type, \".\"));\n}\nfunction printScalar(type, options) {\n  return printDescription(options, type) + \"scalar \".concat(type.name);\n}\nfunction printObject(type, options) {\n  var interfaces = type.getInterfaces();\n  var implementedInterfaces = interfaces.length ? ' implements ' + interfaces.map(function (i) {\n    return i.name;\n  }).join(' & ') : '';\n  return printDescription(options, type) + \"type \".concat(type.name).concat(implementedInterfaces, \" {\\n\") + printFields(options, type) + '\\n' + '}';\n}\nfunction printInterface(type, options) {\n  return printDescription(options, type) + \"interface \".concat(type.name, \" {\\n\") + printFields(options, type) + '\\n' + '}';\n}\nfunction printUnion(type, options) {\n  return printDescription(options, type) + \"union \".concat(type.name, \" = \").concat(type.getTypes().join(' | '));\n}\nfunction printEnum(type, options) {\n  return printDescription(options, type) + \"enum \".concat(type.name, \" {\\n\") + printEnumValues(type.getValues(), options) + '\\n' + '}';\n}\nfunction printEnumValues(values, options) {\n  return values.map(function (value, i) {\n    return printDescription(options, value, '  ', !i) + '  ' + value.name + printDeprecated(value);\n  }).join('\\n');\n}\nfunction printInputObject(type, options) {\n  var fields = objectValues(type.getFields());\n  return printDescription(options, type) + \"input \".concat(type.name, \" {\\n\") + fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + printInputValue(f);\n  }).join('\\n') + '\\n' + '}';\n}\nfunction printFields(options, type) {\n  var fields = objectValues(type.getFields());\n  return fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + f.name + printArgs(options, f.args, '  ') + ': ' + String(f.type) + printDeprecated(f);\n  }).join('\\n');\n}\nfunction printArgs(options, args) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n  if (args.every(function (arg) {\n    return !arg.description;\n  })) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n  return '(\\n' + args.map(function (arg, i) {\n    return printDescription(options, arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg);\n  }).join('\\n') + '\\n' + indentation + ')';\n}\nfunction printInputValue(arg) {\n  var argDecl = arg.name + ': ' + String(arg.type);\n  if (!isInvalid(arg.defaultValue)) {\n    argDecl += \" = \".concat(print(astFromValue(arg.defaultValue, arg.type)));\n  }\n  return argDecl;\n}\nfunction printDirective(directive, options) {\n  return printDescription(options, directive) + 'directive @' + directive.name + printArgs(options, directive.args) + ' on ' + directive.locations.join(' | ');\n}\nfunction printDeprecated(fieldOrEnumVal) {\n  if (!fieldOrEnumVal.isDeprecated) {\n    return '';\n  }\n  var reason = fieldOrEnumVal.deprecationReason;\n  if (isNullish(reason) || reason === '' || reason === DEFAULT_DEPRECATION_REASON) {\n    return ' @deprecated';\n  }\n  return ' @deprecated(reason: ' + print(astFromValue(reason, GraphQLString)) + ')';\n}\nfunction printDescription(options, def) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var firstInBlock = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  if (!def.description) {\n    return '';\n  }\n  var lines = descriptionLines(def.description, 120 - indentation.length);\n  if (options && options.commentDescriptions) {\n    return printDescriptionWithComments(lines, indentation, firstInBlock);\n  }\n  var description = indentation && !firstInBlock ? '\\n' + indentation + '\"\"\"' : indentation + '\"\"\"'; // In some circumstances, a single line can be used for the description.\n\n  if (lines.length === 1 && lines[0].length < 70 && lines[0][lines[0].length - 1] !== '\"') {\n    return description + escapeQuote(lines[0]) + '\"\"\"\\n';\n  } // Format a multi-line block quote to account for leading space.\n\n  var hasLeadingSpace = lines[0][0] === ' ' || lines[0][0] === '\\t';\n  if (!hasLeadingSpace) {\n    description += '\\n';\n  }\n  for (var i = 0; i < lines.length; i++) {\n    if (i !== 0 || !hasLeadingSpace) {\n      description += indentation;\n    }\n    description += escapeQuote(lines[i]) + '\\n';\n  }\n  description += indentation + '\"\"\"\\n';\n  return description;\n}\nfunction escapeQuote(line) {\n  return line.replace(/\"\"\"/g, '\\\\\"\"\"');\n}\nfunction printDescriptionWithComments(lines, indentation, firstInBlock) {\n  var description = indentation && !firstInBlock ? '\\n' : '';\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i] === '') {\n      description += indentation + '#\\n';\n    } else {\n      description += indentation + '# ' + lines[i] + '\\n';\n    }\n  }\n  return description;\n}\nfunction descriptionLines(description, maxLen) {\n  var lines = [];\n  var rawLines = description.split('\\n');\n  for (var i = 0; i < rawLines.length; i++) {\n    if (rawLines[i] === '') {\n      lines.push(rawLines[i]);\n    } else {\n      // For > 120 character long lines, cut at space boundaries into sublines\n      // of ~80 chars.\n      var sublines = breakLine(rawLines[i], maxLen);\n      for (var j = 0; j < sublines.length; j++) {\n        lines.push(sublines[j]);\n      }\n    }\n  }\n  return lines;\n}\nfunction breakLine(line, maxLen) {\n  if (line.length < maxLen + 5) {\n    return [line];\n  }\n  var parts = line.split(new RegExp(\"((?: |^).{15,\".concat(maxLen - 40, \"}(?= |$))\")));\n  if (parts.length < 4) {\n    return [line];\n  }\n  var sublines = [parts[0] + parts[1] + parts[2]];\n  for (var i = 3; i < parts.length; i += 2) {\n    sublines.push(parts[i].slice(1) + parts[i + 1]);\n  }\n  return sublines;\n}","map":{"version":3,"names":["isNullish","isInvalid","objectValues","astFromValue","print","isScalarType","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","GraphQLString","isSpecifiedScalarType","GraphQLDirective","DEFAULT_DEPRECATION_REASON","isSpecifiedDirective","isIntrospectionType","printSchema","schema","options","printFilteredSchema","n","isDefinedType","printIntrospectionSchema","type","directiveFilter","typeFilter","directives","getDirectives","filter","typeMap","getTypeMap","types","sort","type1","type2","name","localeCompare","printSchemaDefinition","concat","map","directive","printDirective","printType","Boolean","join","isSchemaOfCommonNames","operationTypes","queryType","getQueryType","push","mutationType","getMutationType","subscriptionType","getSubscriptionType","printScalar","printObject","printInterface","printUnion","printEnum","printInputObject","Error","printDescription","interfaces","getInterfaces","implementedInterfaces","length","i","printFields","getTypes","printEnumValues","getValues","values","value","printDeprecated","fields","getFields","f","printInputValue","printArgs","args","String","indentation","arguments","undefined","every","arg","description","argDecl","defaultValue","locations","fieldOrEnumVal","isDeprecated","reason","deprecationReason","def","firstInBlock","lines","descriptionLines","commentDescriptions","printDescriptionWithComments","escapeQuote","hasLeadingSpace","line","replace","maxLen","rawLines","split","sublines","breakLine","j","parts","RegExp","slice"],"sources":["/Users/richa/Desktop/Projects/demo-project/store/bookstore-v2/node_modules/graphql/utilities/schemaPrinter.mjs"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport isNullish from '../jsutils/isNullish';\nimport isInvalid from '../jsutils/isInvalid';\nimport objectValues from '../jsutils/objectValues';\nimport { astFromValue } from '../utilities/astFromValue';\nimport { print } from '../language/printer';\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from '../type/definition';\nimport { GraphQLString, isSpecifiedScalarType } from '../type/scalars';\nimport { GraphQLDirective, DEFAULT_DEPRECATION_REASON, isSpecifiedDirective } from '../type/directives';\nimport { isIntrospectionType } from '../type/introspection';\n\n/**\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nexport function printSchema(schema, options) {\n  return printFilteredSchema(schema, function (n) {\n    return !isSpecifiedDirective(n);\n  }, isDefinedType, options);\n}\nexport function printIntrospectionSchema(schema, options) {\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType, options);\n}\n\nfunction isDefinedType(type) {\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter, options) {\n  var directives = schema.getDirectives().filter(directiveFilter);\n  var typeMap = schema.getTypeMap();\n  var types = objectValues(typeMap).sort(function (type1, type2) {\n    return type1.name.localeCompare(type2.name);\n  }).filter(typeFilter);\n  return [printSchemaDefinition(schema)].concat(directives.map(function (directive) {\n    return printDirective(directive, options);\n  }), types.map(function (type) {\n    return printType(type, options);\n  })).filter(Boolean).join('\\n\\n') + '\\n';\n}\n\nfunction printSchemaDefinition(schema) {\n  if (isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  var operationTypes = [];\n  var queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(\"  query: \".concat(queryType.name));\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(\"  mutation: \".concat(mutationType.name));\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(\"  subscription: \".concat(subscriptionType.name));\n  }\n\n  return \"schema {\\n\".concat(operationTypes.join('\\n'), \"\\n}\");\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *   }\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\n\nfunction isSchemaOfCommonNames(schema) {\n  var queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nexport function printType(type, options) {\n  if (isScalarType(type)) {\n    return printScalar(type, options);\n  } else if (isObjectType(type)) {\n    return printObject(type, options);\n  } else if (isInterfaceType(type)) {\n    return printInterface(type, options);\n  } else if (isUnionType(type)) {\n    return printUnion(type, options);\n  } else if (isEnumType(type)) {\n    return printEnum(type, options);\n  } else if (isInputObjectType(type)) {\n    return printInputObject(type, options);\n  }\n  /* istanbul ignore next */\n\n\n  throw new Error(\"Unknown type: \".concat(type, \".\"));\n}\n\nfunction printScalar(type, options) {\n  return printDescription(options, type) + \"scalar \".concat(type.name);\n}\n\nfunction printObject(type, options) {\n  var interfaces = type.getInterfaces();\n  var implementedInterfaces = interfaces.length ? ' implements ' + interfaces.map(function (i) {\n    return i.name;\n  }).join(' & ') : '';\n  return printDescription(options, type) + \"type \".concat(type.name).concat(implementedInterfaces, \" {\\n\") + printFields(options, type) + '\\n' + '}';\n}\n\nfunction printInterface(type, options) {\n  return printDescription(options, type) + \"interface \".concat(type.name, \" {\\n\") + printFields(options, type) + '\\n' + '}';\n}\n\nfunction printUnion(type, options) {\n  return printDescription(options, type) + \"union \".concat(type.name, \" = \").concat(type.getTypes().join(' | '));\n}\n\nfunction printEnum(type, options) {\n  return printDescription(options, type) + \"enum \".concat(type.name, \" {\\n\") + printEnumValues(type.getValues(), options) + '\\n' + '}';\n}\n\nfunction printEnumValues(values, options) {\n  return values.map(function (value, i) {\n    return printDescription(options, value, '  ', !i) + '  ' + value.name + printDeprecated(value);\n  }).join('\\n');\n}\n\nfunction printInputObject(type, options) {\n  var fields = objectValues(type.getFields());\n  return printDescription(options, type) + \"input \".concat(type.name, \" {\\n\") + fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + printInputValue(f);\n  }).join('\\n') + '\\n' + '}';\n}\n\nfunction printFields(options, type) {\n  var fields = objectValues(type.getFields());\n  return fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + f.name + printArgs(options, f.args, '  ') + ': ' + String(f.type) + printDeprecated(f);\n  }).join('\\n');\n}\n\nfunction printArgs(options, args) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n\n  if (args.every(function (arg) {\n    return !arg.description;\n  })) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return '(\\n' + args.map(function (arg, i) {\n    return printDescription(options, arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg);\n  }).join('\\n') + '\\n' + indentation + ')';\n}\n\nfunction printInputValue(arg) {\n  var argDecl = arg.name + ': ' + String(arg.type);\n\n  if (!isInvalid(arg.defaultValue)) {\n    argDecl += \" = \".concat(print(astFromValue(arg.defaultValue, arg.type)));\n  }\n\n  return argDecl;\n}\n\nfunction printDirective(directive, options) {\n  return printDescription(options, directive) + 'directive @' + directive.name + printArgs(options, directive.args) + ' on ' + directive.locations.join(' | ');\n}\n\nfunction printDeprecated(fieldOrEnumVal) {\n  if (!fieldOrEnumVal.isDeprecated) {\n    return '';\n  }\n\n  var reason = fieldOrEnumVal.deprecationReason;\n\n  if (isNullish(reason) || reason === '' || reason === DEFAULT_DEPRECATION_REASON) {\n    return ' @deprecated';\n  }\n\n  return ' @deprecated(reason: ' + print(astFromValue(reason, GraphQLString)) + ')';\n}\n\nfunction printDescription(options, def) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var firstInBlock = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n  if (!def.description) {\n    return '';\n  }\n\n  var lines = descriptionLines(def.description, 120 - indentation.length);\n\n  if (options && options.commentDescriptions) {\n    return printDescriptionWithComments(lines, indentation, firstInBlock);\n  }\n\n  var description = indentation && !firstInBlock ? '\\n' + indentation + '\"\"\"' : indentation + '\"\"\"'; // In some circumstances, a single line can be used for the description.\n\n  if (lines.length === 1 && lines[0].length < 70 && lines[0][lines[0].length - 1] !== '\"') {\n    return description + escapeQuote(lines[0]) + '\"\"\"\\n';\n  } // Format a multi-line block quote to account for leading space.\n\n\n  var hasLeadingSpace = lines[0][0] === ' ' || lines[0][0] === '\\t';\n\n  if (!hasLeadingSpace) {\n    description += '\\n';\n  }\n\n  for (var i = 0; i < lines.length; i++) {\n    if (i !== 0 || !hasLeadingSpace) {\n      description += indentation;\n    }\n\n    description += escapeQuote(lines[i]) + '\\n';\n  }\n\n  description += indentation + '\"\"\"\\n';\n  return description;\n}\n\nfunction escapeQuote(line) {\n  return line.replace(/\"\"\"/g, '\\\\\"\"\"');\n}\n\nfunction printDescriptionWithComments(lines, indentation, firstInBlock) {\n  var description = indentation && !firstInBlock ? '\\n' : '';\n\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i] === '') {\n      description += indentation + '#\\n';\n    } else {\n      description += indentation + '# ' + lines[i] + '\\n';\n    }\n  }\n\n  return description;\n}\n\nfunction descriptionLines(description, maxLen) {\n  var lines = [];\n  var rawLines = description.split('\\n');\n\n  for (var i = 0; i < rawLines.length; i++) {\n    if (rawLines[i] === '') {\n      lines.push(rawLines[i]);\n    } else {\n      // For > 120 character long lines, cut at space boundaries into sublines\n      // of ~80 chars.\n      var sublines = breakLine(rawLines[i], maxLen);\n\n      for (var j = 0; j < sublines.length; j++) {\n        lines.push(sublines[j]);\n      }\n    }\n  }\n\n  return lines;\n}\n\nfunction breakLine(line, maxLen) {\n  if (line.length < maxLen + 5) {\n    return [line];\n  }\n\n  var parts = line.split(new RegExp(\"((?: |^).{15,\".concat(maxLen - 40, \"}(?= |$))\")));\n\n  if (parts.length < 4) {\n    return [line];\n  }\n\n  var sublines = [parts[0] + parts[1] + parts[2]];\n\n  for (var i = 3; i < parts.length; i += 2) {\n    sublines.push(parts[i].slice(1) + parts[i + 1]);\n  }\n\n  return sublines;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}